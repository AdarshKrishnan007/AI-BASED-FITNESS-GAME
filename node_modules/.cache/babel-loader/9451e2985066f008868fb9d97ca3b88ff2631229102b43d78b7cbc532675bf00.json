{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ConcatProgram {\n  constructor(shapes) {\n    this.uniforms = '';\n    this.workPerThread = 1;\n    this.workgroupSize = [64, 1, 1];\n    this.size = true;\n    this.outputShape = backend_util.computeOutShape(shapes, 1 /* axis */);\n    this.variableNames = shapes.map((_, i) => \"T\".concat(i));\n    this.dispatchLayout = flatDispatchLayout(this.outputShape);\n    this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, [this.workPerThread, 1, 1]);\n    this.offsetLength = shapes.length - 1;\n    for (let i = 0; i < this.offsetLength; i++) {\n      this.uniforms += \"offset\".concat(i, \" : i32,\");\n    }\n    this.shaderKey = 'concat';\n  }\n  getUserCode() {\n    const snippets = [];\n    if (this.offsetLength > 0) {\n      snippets.push(\"if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }\");\n      for (let i = 1; i < this.offsetLength; i++) {\n        snippets.push(\"else if (yC < uniforms.offset\".concat([i], \"){ \") + \"setOutputAtCoords(coords.x, coords.y, getT\".concat(i, \"(yR, yC - uniforms.offset\").concat(i - 1, \")); }\"));\n      }\n      const lastIndex = this.offsetLength;\n      const lastShiftIndex = this.offsetLength - 1;\n      snippets.push(\"else { setOutputAtCoords(coords.x, coords.y, getT\".concat(lastIndex, \"(yR, yC - uniforms.offset\").concat(lastShiftIndex, \")); }\"));\n    } else {\n      snippets.push(\"setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));\");\n    }\n    const userCode = \"\\n      \".concat(main('index'), \" {\\n        for(var i = 0; i < \").concat(this.workPerThread, \"; i = i + 1) {\\n          let flatIndex = index * \").concat(this.workPerThread, \" + i;\\n          if(flatIndex < uniforms.size) {\\n            let coords = getCoordsFromIndex(flatIndex);\\n            let yR = coords.x;\\n            let yC = coords.y;\\n\\n            \").concat(snippets.join('\\n        '), \"\\n          }\\n        }\\n      }\\n    \");\n    return userCode;\n  }\n}","map":{"version":3,"names":["backend_util","getMainHeaderString","main","computeDispatch","flatDispatchLayout","ConcatProgram","constructor","shapes","uniforms","workPerThread","workgroupSize","size","outputShape","computeOutShape","variableNames","map","_","i","concat","dispatchLayout","dispatch","offsetLength","length","shaderKey","getUserCode","snippets","push","lastIndex","lastShiftIndex","userCode","join"],"sources":["D:\\Fitness WebApp\\tfjs-backend-webgpu\\src\\concat_webgpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {getMainHeaderString as main, WebGPUProgram} from './webgpu_program';\nimport {computeDispatch, flatDispatchLayout} from './webgpu_util';\n\nexport class ConcatProgram implements WebGPUProgram {\n  outputShape: number[];\n  shaderKey: string;\n  dispatchLayout: {x: number[]};\n  dispatch: [number, number, number];\n  variableNames: string[];\n  uniforms = '';\n  workPerThread = 1;\n  workgroupSize: [number, number, number] = [64, 1, 1];\n  size = true;\n  offsetLength: number;\n\n  constructor(shapes: Array<[number, number]>) {\n    this.outputShape =\n        backend_util.computeOutShape(shapes, 1 /* axis */) as [number, number];\n    this.variableNames = shapes.map((_, i) => `T${i}`);\n    this.dispatchLayout = flatDispatchLayout(this.outputShape);\n    this.dispatch = computeDispatch(\n        this.dispatchLayout, this.outputShape, this.workgroupSize,\n        [this.workPerThread, 1, 1]);\n\n    this.offsetLength = shapes.length - 1;\n    for (let i = 0; i < this.offsetLength; i++) {\n      this.uniforms += `offset${i} : i32,`;\n    }\n    this.shaderKey = 'concat';\n  }\n\n  getUserCode(): string {\n    const snippets: string[] = [];\n    if (this.offsetLength > 0) {\n      snippets.push(\n          `if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }`);\n      for (let i = 1; i < this.offsetLength; i++) {\n        snippets.push(\n            `else if (yC < uniforms.offset${[i]}){ ` +\n            `setOutputAtCoords(coords.x, coords.y, getT${\n                i}(yR, yC - uniforms.offset${i - 1})); }`);\n      }\n      const lastIndex = this.offsetLength;\n      const lastShiftIndex = this.offsetLength - 1;\n      snippets.push(`else { setOutputAtCoords(coords.x, coords.y, getT${\n          lastIndex}(yR, yC - uniforms.offset${lastShiftIndex})); }`);\n    } else {\n      snippets.push(`setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));`);\n    }\n\n    const userCode = `\n      ${main('index')} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${snippets.join('\\n        ')}\n          }\n        }\n      }\n    `;\n    return userCode;\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,QAAO,uBAAuB;AAClD,SAAQC,mBAAmB,IAAIC,IAAI,QAAsB,kBAAkB;AAC3E,SAAQC,eAAe,EAAEC,kBAAkB,QAAO,eAAe;AAEjE,OAAM,MAAOC,aAAa;EAYxBC,YAAYC,MAA+B;IAN3C,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,aAAa,GAAG,CAAC;IACjB,KAAAC,aAAa,GAA6B,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACpD,KAAAC,IAAI,GAAG,IAAI;IAIT,IAAI,CAACC,WAAW,GACZZ,YAAY,CAACa,eAAe,CAACN,MAAM,EAAE,CAAC,CAAC,UAAU,CAAqB;IAC1E,IAAI,CAACO,aAAa,GAAGP,MAAM,CAACQ,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,SAAAC,MAAA,CAASD,CAAC,CAAE,CAAC;IAClD,IAAI,CAACE,cAAc,GAAGf,kBAAkB,CAAC,IAAI,CAACQ,WAAW,CAAC;IAC1D,IAAI,CAACQ,QAAQ,GAAGjB,eAAe,CAC3B,IAAI,CAACgB,cAAc,EAAE,IAAI,CAACP,WAAW,EAAE,IAAI,CAACF,aAAa,EACzD,CAAC,IAAI,CAACD,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAE/B,IAAI,CAACY,YAAY,GAAGd,MAAM,CAACe,MAAM,GAAG,CAAC;IACrC,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACI,YAAY,EAAEJ,CAAC,EAAE,EAAE;MAC1C,IAAI,CAACT,QAAQ,aAAAU,MAAA,CAAaD,CAAC,YAAS;;IAEtC,IAAI,CAACM,SAAS,GAAG,QAAQ;EAC3B;EAEAC,WAAWA,CAAA;IACT,MAAMC,QAAQ,GAAa,EAAE;IAC7B,IAAI,IAAI,CAACJ,YAAY,GAAG,CAAC,EAAE;MACzBI,QAAQ,CAACC,IAAI,sFAC4E,CAAC;MAC1F,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACI,YAAY,EAAEJ,CAAC,EAAE,EAAE;QAC1CQ,QAAQ,CAACC,IAAI,CACT,gCAAAR,MAAA,CAAgC,CAACD,CAAC,CAAC,wDAAAC,MAAA,CAE/BD,CAAC,+BAAAC,MAAA,CAA4BD,CAAC,GAAG,CAAC,UAAO,CAAC;;MAEpD,MAAMU,SAAS,GAAG,IAAI,CAACN,YAAY;MACnC,MAAMO,cAAc,GAAG,IAAI,CAACP,YAAY,GAAG,CAAC;MAC5CI,QAAQ,CAACC,IAAI,qDAAAR,MAAA,CACTS,SAAS,+BAAAT,MAAA,CAA4BU,cAAc,UAAO,CAAC;KAChE,MAAM;MACLH,QAAQ,CAACC,IAAI,wDAAwD,CAAC;;IAGxE,MAAMG,QAAQ,cAAAX,MAAA,CACVhB,IAAI,CAAC,OAAO,CAAC,qCAAAgB,MAAA,CACQ,IAAI,CAACT,aAAa,wDAAAS,MAAA,CACX,IAAI,CAACT,aAAa,+LAAAS,MAAA,CAMxCO,QAAQ,CAACK,IAAI,CAAC,YAAY,CAAC,4CAIpC;IACD,OAAOD,QAAQ;EACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}