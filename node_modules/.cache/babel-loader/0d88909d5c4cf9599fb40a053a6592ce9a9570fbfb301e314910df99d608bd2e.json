{"ast":null,"code":"import*as tf from\"@tensorflow/tfjs\";import*as posedetection from\"@tensorflow-models/pose-detection\";import\"@tensorflow/tfjs-backend-webgl\";let detector;// let audio = {\n//   good: new Audio(\"/audio/good.mp3\"),\n//   bad: new Audio(\"/audio/bad.mp3\"),\n// };\nexport async function loadModel(){await tf.setBackend(\"webgl\");await tf.ready();detector=await posedetection.createDetector(posedetection.SupportedModels.MoveNet,{modelType:posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING});}let lastSpokenTime=0;let cooldown=1000;// 1 second cooldown to prevent overlap\nfunction speakFeedback(msg){const now=Date.now();// Prevent overlapping or repeating too fast\nif(now-lastSpokenTime<cooldown)return;lastSpokenTime=now;// Cancel any ongoing speech\nwindow.speechSynthesis.cancel();const speech=new SpeechSynthesisUtterance(msg);speech.volume=1;speech.pitch=1;speech.rate=1;window.speechSynthesis.speak(speech);}// Helper to get x/y of a keypoint\nfunction getXY(keypoints,name){const kp=keypoints.find(k=>k.name===name);return{x:(kp===null||kp===void 0?void 0:kp.x)||0,y:(kp===null||kp===void 0?void 0:kp.y)||0,score:(kp===null||kp===void 0?void 0:kp.score)||0};}function getAngle(A,B,C){// Vectors: BA and BC\nconst BAx=A.x-B.x;const BAy=A.y-B.y;const BCx=C.x-B.x;const BCy=C.y-B.y;const dotProduct=BAx*BCx+BAy*BCy;const magBA=Math.sqrt(BAx**2+BAy**2);const magBC=Math.sqrt(BCx**2+BCy**2);if(magBA===0||magBC===0)return 0;const angleRad=Math.acos(dotProduct/(magBA*magBC));return angleRad*(180/Math.PI);// Convert to degrees\n}// Basic keypoint reliability check\nfunction isReliable(kp){let threshold=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0.5;return kp.score>=threshold;}// Exercise handlers\nconst exerciseHandlers={squat:(k,state)=>{const lHip=getXY(k,\"left_hip\");const lKnee=getXY(k,\"left_knee\");const lAnkle=getXY(k,\"left_ankle\");const rHip=getXY(k,\"right_hip\");const rKnee=getXY(k,\"right_knee\");const rAnkle=getXY(k,\"right_ankle\");// Ensure data is reliable\nif(!isReliable(lHip)||!isReliable(lKnee)||!isReliable(lAnkle)||!isReliable(rHip)||!isReliable(rKnee)||!isReliable(rAnkle))return{};// Helper: Calculate knee angle\nconst getAngle=(a,b,c)=>{const ab={x:a.x-b.x,y:a.y-b.y};const cb={x:c.x-b.x,y:c.y-b.y};const dot=ab.x*cb.x+ab.y*cb.y;const magAB=Math.hypot(ab.x,ab.y);const magCB=Math.hypot(cb.x,cb.y);const angle=Math.acos(dot/(magAB*magCB));return angle*180/Math.PI;};const leftKneeAngle=getAngle(lHip,lKnee,lAnkle);const rightKneeAngle=getAngle(rHip,rKnee,rAnkle);const avgKneeAngle=(leftKneeAngle+rightKneeAngle)/2;const isDown=avgKneeAngle<100;// <100° indicates squat bottom\nconst isUp=avgKneeAngle>160;// >160° indicates standing\n// DOWN phase\nif(!state.down){if(isDown){state.downCount=(state.downCount||0)+1;if(state.downCount>4){state.down=true;state.downCount=0;speakFeedback(\"Good depth!\");return{feedback:\"Squat depth reached!\",repCounted:false};}}else{state.downCount=0;return{feedback:\"Go deeper!\",scorePenalty:1};}}// UP phase\nelse{if(isUp){state.upCount=(state.upCount||0)+1;if(state.upCount>4){state.down=false;state.upCount=0;speakFeedback(\"Squat counted!\");return{feedback:\"Squat counted!\",repCounted:true};}}else{state.upCount=0;}}return{};},jump:(k,state)=>{const hip=getXY(k,\"left_hip\");if(!isReliable(hip))return{};if(state.prevHipY==null)state.prevHipY=hip.y;const jumpHeight=state.prevHipY-hip.y;const jumpUp=jumpHeight>20;const weakJump=jumpHeight>5&&jumpHeight<=20;// Low effort jump\nconst land=hip.y-state.prevHipY>10;// Weak jump form penalty\nif(!state.jumping&&weakJump){speakFeedback(\"Jump higher!\");return{feedback:\"Jump higher!\",scorePenalty:1,repCounted:false};}// Good jump detected\nif(!state.jumping&&jumpUp){state.jumping=true;speakFeedback(\"Nice jump!\");return{feedback:\"Nice jump!\"};}// Landing after jump\nif(state.jumping&&land){state.jumping=false;speakFeedback(\"Jump counted!\");return{feedback:\"Jump counted!\",repCounted:true};}state.prevHipY=hip.y;return{};},pushup:(k,state)=>{const shoulder=getXY(k,\"left_shoulder\");const elbow=getXY(k,\"left_elbow\");const wrist=getXY(k,\"left_wrist\");const hip=getXY(k,\"left_hip\");if(!isReliable(shoulder)||!isReliable(elbow)||!isReliable(wrist)||!isReliable(hip))return{};// Helper: calculate angle between 3 points\nconst getAngle=(a,b,c)=>{const ab={x:a.x-b.x,y:a.y-b.y};const cb={x:c.x-b.x,y:c.y-b.y};const dot=ab.x*cb.x+ab.y*cb.y;const magAB=Math.hypot(ab.x,ab.y);const magCB=Math.hypot(cb.x,cb.y);const angle=Math.acos(dot/(magAB*magCB));return angle*180/Math.PI;};const elbowAngle=getAngle(shoulder,elbow,wrist);const bodyAngle=getAngle(shoulder,hip,{x:hip.x,y:hip.y+0.1});// vertical approx\n// Thresholds for down/up phase:\nconst downThreshold=90;// elbow angle less than 90° means pushup down phase\nconst upThreshold=160;// elbow angle more than 160° means pushup up phase\nstate.downCount=state.downCount||0;state.upCount=state.upCount||0;// Detect pushup DOWN phase\nif(!state.down){if(elbowAngle<downThreshold){state.downCount++;if(state.downCount>3){state.down=true;state.downCount=0;speakFeedback(\"Good pushup depth!\");return{feedback:\"Good pushup depth!\",repCounted:false};}}else{state.downCount=0;return{feedback:\"Lower your chest!\",scorePenalty:1};}}// Detect pushup UP phase\nelse{if(elbowAngle>upThreshold){state.upCount++;if(state.upCount>4){state.down=false;state.upCount=0;speakFeedback(\"Pushup counted!\");return{feedback:\"Pushup counted!\",repCounted:true};}}else{state.upCount=0;}}return{};},plank:(poseKeypoints,state)=>{const now=Date.now();const deltaTime=now-(state.lastUpdateTime||now);state.lastUpdateTime=now;const getXY=(keypoints,name)=>{const kp=keypoints.find(k=>k.name===name);return kp&&kp.score>0.5?{x:kp.x,y:kp.y}:null;};const isReliable=point=>point&&typeof point.x===\"number\"&&typeof point.y===\"number\";const shoulder=getXY(poseKeypoints,\"left_shoulder\");const hip=getXY(poseKeypoints,\"left_hip\");if(!isReliable(shoulder)||!isReliable(hip)){state.plankHoldTime=0;state.lastPlankSecond=0;return{};}const hipDrop=hip.y-shoulder.y;// Simple range check for proper plank posture\nif(hipDrop>100||hipDrop<5){state.plankHoldTime=0;state.lastPlankSecond=0;return{feedback:\"Align your hips to your shoulders!\",repCounted:false};}// Good posture → accumulate time\nstate.plankHoldTime=(state.plankHoldTime||0)+deltaTime;const secondsHeld=Math.floor(state.plankHoldTime/1000);if(secondsHeld>(state.lastPlankSecond||0)){state.lastPlankSecond=secondsHeld;state.plankReps=(state.plankReps||0)+1;const msg=\"Holding plank: \".concat(secondsHeld,\"s\");speakFeedback(msg);console.log(\"✔️ Plank reps:\",state.plankReps);return{feedback:msg,repCounted:true};}return{};}};let lastStandInViewTime=0;export async function startPoseDetection(videoElement,exercise,targetReps){let feedbackCallback=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;let userInfo=arguments.length>4?arguments[4]:undefined;if(!detector)await loadModel();if(videoElement.videoWidth===0||videoElement.videoHeight===0){await new Promise(resolve=>{const checkReady=()=>{if(videoElement.videoWidth>0&&videoElement.videoHeight>0){resolve();}else{requestAnimationFrame(checkReady);// Keep checking\n}};videoElement.onloadedmetadata=checkReady;checkReady();});}const canvas=document.createElement(\"canvas\");canvas.width=videoElement.videoWidth;canvas.height=videoElement.videoHeight;document.body.appendChild(canvas);const ctx=canvas.getContext(\"2d\");let totalScore=500;let badFormCount=0;let repCount=0;const state={};const MET_VALUES={pushup:8,squat:7,plank:5,jumping_jack:8// add more as needed\n};let workoutComplete=false;// ✅ Add flag to stop detection\nconst workoutStartTime=Date.now();return new Promise(resolve=>{const timeout=setTimeout(()=>{document.body.removeChild(canvas);return resolve(null);},300000);const detect=async()=>{var _poses$;if(workoutComplete)return;// ✅ Stop further frames\nconst poses=await detector.estimatePoses(videoElement);ctx.clearRect(0,0,canvas.width,canvas.height);ctx.font=\"20px Arial\";if(!poses||!Array.isArray(poses)||poses.length===0||!((_poses$=poses[0])!==null&&_poses$!==void 0&&_poses$.keypoints)||poses[0].keypoints.length===0){ctx.fillStyle=\"red\";const now=Date.now();if(now-lastStandInViewTime>4000){lastStandInViewTime=now;}requestAnimationFrame(detect);return;}const pose=poses[0];const handler=exerciseHandlers[exercise];if(!handler)throw new Error(\"Unsupported exercise: \"+exercise);const result=handler(pose.keypoints,state);if(result.feedback){ctx.fillStyle=result.scorePenalty?\"red\":\"green\";ctx.fillText(result.feedback,10,30);speakFeedback(result.feedback);}if(result.scorePenalty){totalScore-=result.scorePenalty;}if(result.repCounted){repCount++;// ✅ Count bad form once per rep based on presence of scorePenalty\nconst isBadForm=result.scorePenalty?true:false;if(isBadForm){badFormCount++;}speakFeedback(\"Rep \".concat(repCount,\" completed!\"));}if(typeof feedbackCallback===\"function\"){feedbackCallback({reps:repCount,formFeedback:result.feedback});}if(repCount>=targetReps){var _userInfo$gender;workoutComplete=true;// ✅ Set flag to stop further detection\nclearTimeout(timeout);document.body.removeChild(canvas);window.speechSynthesis.cancel();const workoutEndTime=Date.now();const durationMinutes=(workoutEndTime-workoutStartTime)/60000;let rawAccuracy=(targetReps-badFormCount)/targetReps*100;let adjustedAccuracy=Math.max(30,Math.min(rawAccuracy,95));// clamp between 30 and 95\nlet level=\"\";if(adjustedAccuracy<40)level=\"Weak\";else if(adjustedAccuracy<60)level=\"Beginner\";else if(adjustedAccuracy<80)level=\"Intermediate\";else level=\"Advanced\";const formQuality=badFormCount/targetReps;console.log(\"Target Reps:\",targetReps);console.log(\"Bad Form Count:\",badFormCount);console.log(\"Form Quality:\",formQuality);let feedback=\"Perfect form!\";if(formQuality>0.5){feedback=\"Work on your form!\";}else if(formQuality>0.25){feedback=\"Try better form next time!\";}else if(formQuality>0.1){feedback=\"Pretty good form!\";}// Calories calculation with gender factor\nconst genderFactor=(userInfo===null||userInfo===void 0?void 0:(_userInfo$gender=userInfo.gender)===null||_userInfo$gender===void 0?void 0:_userInfo$gender.toLowerCase())===\"male\"?1:0.95;const met=MET_VALUES[exercise.toLowerCase()]||6;const caloriesBurned=met*((userInfo===null||userInfo===void 0?void 0:userInfo.weight)||70)*(durationMinutes/60)*genderFactor;return resolve({score:Math.max(0,totalScore),accuracy:Math.floor(adjustedAccuracy),xp:Math.floor(Math.max(0,totalScore*0.8)),feedback:badFormCount>0?\"Try better form next time!\":\"Perfect form!\",reps:repCount,badFormCount,calories:caloriesBurned.toFixed(2),durationMinutes:durationMinutes.toFixed(2)});}requestAnimationFrame(detect);};detect();});}","map":{"version":3,"names":["tf","posedetection","detector","loadModel","setBackend","ready","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","lastSpokenTime","cooldown","speakFeedback","msg","now","Date","window","speechSynthesis","cancel","speech","SpeechSynthesisUtterance","volume","pitch","rate","speak","getXY","keypoints","name","kp","find","k","x","y","score","getAngle","A","B","C","BAx","BAy","BCx","BCy","dotProduct","magBA","Math","sqrt","magBC","angleRad","acos","PI","isReliable","threshold","arguments","length","undefined","exerciseHandlers","squat","state","lHip","lKnee","lAnkle","rHip","rKnee","rAnkle","a","b","c","ab","cb","dot","magAB","hypot","magCB","angle","leftKneeAngle","rightKneeAngle","avgKneeAngle","isDown","isUp","down","downCount","feedback","repCounted","scorePenalty","upCount","jump","hip","prevHipY","jumpHeight","jumpUp","weakJump","land","jumping","pushup","shoulder","elbow","wrist","elbowAngle","bodyAngle","downThreshold","upThreshold","plank","poseKeypoints","deltaTime","lastUpdateTime","point","plankHoldTime","lastPlankSecond","hipDrop","secondsHeld","floor","plankReps","concat","console","log","lastStandInViewTime","startPoseDetection","videoElement","exercise","targetReps","feedbackCallback","userInfo","videoWidth","videoHeight","Promise","resolve","checkReady","requestAnimationFrame","onloadedmetadata","canvas","document","createElement","width","height","body","appendChild","ctx","getContext","totalScore","badFormCount","repCount","MET_VALUES","jumping_jack","workoutComplete","workoutStartTime","timeout","setTimeout","removeChild","detect","_poses$","poses","estimatePoses","clearRect","font","Array","isArray","fillStyle","pose","handler","Error","result","fillText","isBadForm","reps","formFeedback","_userInfo$gender","clearTimeout","workoutEndTime","durationMinutes","rawAccuracy","adjustedAccuracy","max","min","level","formQuality","genderFactor","gender","toLowerCase","met","caloriesBurned","weight","accuracy","xp","calories","toFixed"],"sources":["D:/Fitness WebApp/client/src/utils/poseDetectionFrontend.js"],"sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\r\nimport * as posedetection from \"@tensorflow-models/pose-detection\";\r\nimport \"@tensorflow/tfjs-backend-webgl\";\r\n\r\nlet detector;\r\n\r\n// let audio = {\r\n//   good: new Audio(\"/audio/good.mp3\"),\r\n//   bad: new Audio(\"/audio/bad.mp3\"),\r\n// };\r\n\r\nexport async function loadModel() {\r\n  await tf.setBackend(\"webgl\");\r\n  await tf.ready();\r\n  detector = await posedetection.createDetector(\r\n    posedetection.SupportedModels.MoveNet,\r\n    {\r\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\r\n    }\r\n  );\r\n}\r\n\r\nlet lastSpokenTime = 0;\r\nlet cooldown = 1000; // 1 second cooldown to prevent overlap\r\n\r\nfunction speakFeedback(msg) {\r\n  const now = Date.now();\r\n\r\n  // Prevent overlapping or repeating too fast\r\n  if (now - lastSpokenTime < cooldown) return;\r\n  lastSpokenTime = now;\r\n\r\n  // Cancel any ongoing speech\r\n  window.speechSynthesis.cancel();\r\n\r\n  const speech = new SpeechSynthesisUtterance(msg);\r\n  speech.volume = 1;\r\n  speech.pitch = 1;\r\n  speech.rate = 1;\r\n  window.speechSynthesis.speak(speech);\r\n}\r\n\r\n// Helper to get x/y of a keypoint\r\nfunction getXY(keypoints, name) {\r\n  const kp = keypoints.find((k) => k.name === name);\r\n  return { x: kp?.x || 0, y: kp?.y || 0, score: kp?.score || 0 };\r\n}\r\nfunction getAngle(A, B, C) {\r\n  // Vectors: BA and BC\r\n  const BAx = A.x - B.x;\r\n  const BAy = A.y - B.y;\r\n  const BCx = C.x - B.x;\r\n  const BCy = C.y - B.y;\r\n\r\n  const dotProduct = BAx * BCx + BAy * BCy;\r\n  const magBA = Math.sqrt(BAx ** 2 + BAy ** 2);\r\n  const magBC = Math.sqrt(BCx ** 2 + BCy ** 2);\r\n\r\n  if (magBA === 0 || magBC === 0) return 0;\r\n\r\n  const angleRad = Math.acos(dotProduct / (magBA * magBC));\r\n  return angleRad * (180 / Math.PI); // Convert to degrees\r\n}\r\n\r\n// Basic keypoint reliability check\r\nfunction isReliable(kp, threshold = 0.5) {\r\n  return kp.score >= threshold;\r\n}\r\n\r\n// Exercise handlers\r\nconst exerciseHandlers = {\r\n  squat: (k, state) => {\r\n    const lHip = getXY(k, \"left_hip\");\r\n    const lKnee = getXY(k, \"left_knee\");\r\n    const lAnkle = getXY(k, \"left_ankle\");\r\n    const rHip = getXY(k, \"right_hip\");\r\n    const rKnee = getXY(k, \"right_knee\");\r\n    const rAnkle = getXY(k, \"right_ankle\");\r\n\r\n    // Ensure data is reliable\r\n    if (\r\n      !isReliable(lHip) ||\r\n      !isReliable(lKnee) ||\r\n      !isReliable(lAnkle) ||\r\n      !isReliable(rHip) ||\r\n      !isReliable(rKnee) ||\r\n      !isReliable(rAnkle)\r\n    )\r\n      return {};\r\n\r\n    // Helper: Calculate knee angle\r\n    const getAngle = (a, b, c) => {\r\n      const ab = { x: a.x - b.x, y: a.y - b.y };\r\n      const cb = { x: c.x - b.x, y: c.y - b.y };\r\n      const dot = ab.x * cb.x + ab.y * cb.y;\r\n      const magAB = Math.hypot(ab.x, ab.y);\r\n      const magCB = Math.hypot(cb.x, cb.y);\r\n      const angle = Math.acos(dot / (magAB * magCB));\r\n      return (angle * 180) / Math.PI;\r\n    };\r\n\r\n    const leftKneeAngle = getAngle(lHip, lKnee, lAnkle);\r\n    const rightKneeAngle = getAngle(rHip, rKnee, rAnkle);\r\n    const avgKneeAngle = (leftKneeAngle + rightKneeAngle) / 2;\r\n\r\n    const isDown = avgKneeAngle < 100; // <100° indicates squat bottom\r\n    const isUp = avgKneeAngle > 160; // >160° indicates standing\r\n\r\n    // DOWN phase\r\n    if (!state.down) {\r\n      if (isDown) {\r\n        state.downCount = (state.downCount || 0) + 1;\r\n        if (state.downCount > 4) {\r\n          state.down = true;\r\n          state.downCount = 0;\r\n          speakFeedback(\"Good depth!\");\r\n          return { feedback: \"Squat depth reached!\", repCounted: false };\r\n        }\r\n      } else {\r\n        state.downCount = 0;\r\n        return { feedback: \"Go deeper!\", scorePenalty: 1 };\r\n      }\r\n    }\r\n\r\n    // UP phase\r\n    else {\r\n      if (isUp) {\r\n        state.upCount = (state.upCount || 0) + 1;\r\n        if (state.upCount > 4) {\r\n          state.down = false;\r\n          state.upCount = 0;\r\n          speakFeedback(\"Squat counted!\");\r\n          return { feedback: \"Squat counted!\", repCounted: true };\r\n        }\r\n      } else {\r\n        state.upCount = 0;\r\n      }\r\n    }\r\n\r\n    return {};\r\n  },\r\n\r\n  jump: (k, state) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    if (!isReliable(hip)) return {};\r\n\r\n    if (state.prevHipY == null) state.prevHipY = hip.y;\r\n\r\n    const jumpHeight = state.prevHipY - hip.y;\r\n    const jumpUp = jumpHeight > 20;\r\n    const weakJump = jumpHeight > 5 && jumpHeight <= 20; // Low effort jump\r\n    const land = hip.y - state.prevHipY > 10;\r\n\r\n    // Weak jump form penalty\r\n    if (!state.jumping && weakJump) {\r\n      speakFeedback(\"Jump higher!\");\r\n      return {\r\n        feedback: \"Jump higher!\",\r\n        scorePenalty: 1,\r\n        repCounted: false,\r\n      };\r\n    }\r\n\r\n    // Good jump detected\r\n    if (!state.jumping && jumpUp) {\r\n      state.jumping = true;\r\n      speakFeedback(\"Nice jump!\");\r\n      return { feedback: \"Nice jump!\" };\r\n    }\r\n\r\n    // Landing after jump\r\n    if (state.jumping && land) {\r\n      state.jumping = false;\r\n      speakFeedback(\"Jump counted!\");\r\n      return { feedback: \"Jump counted!\", repCounted: true };\r\n    }\r\n\r\n    state.prevHipY = hip.y;\r\n    return {};\r\n  },\r\n\r\n  pushup: (k, state) => {\r\n    const shoulder = getXY(k, \"left_shoulder\");\r\n    const elbow = getXY(k, \"left_elbow\");\r\n    const wrist = getXY(k, \"left_wrist\");\r\n    const hip = getXY(k, \"left_hip\");\r\n\r\n    if (\r\n      !isReliable(shoulder) ||\r\n      !isReliable(elbow) ||\r\n      !isReliable(wrist) ||\r\n      !isReliable(hip)\r\n    )\r\n      return {};\r\n\r\n    // Helper: calculate angle between 3 points\r\n    const getAngle = (a, b, c) => {\r\n      const ab = { x: a.x - b.x, y: a.y - b.y };\r\n      const cb = { x: c.x - b.x, y: c.y - b.y };\r\n      const dot = ab.x * cb.x + ab.y * cb.y;\r\n      const magAB = Math.hypot(ab.x, ab.y);\r\n      const magCB = Math.hypot(cb.x, cb.y);\r\n      const angle = Math.acos(dot / (magAB * magCB));\r\n      return (angle * 180) / Math.PI;\r\n    };\r\n\r\n    const elbowAngle = getAngle(shoulder, elbow, wrist);\r\n    const bodyAngle = getAngle(shoulder, hip, { x: hip.x, y: hip.y + 0.1 }); // vertical approx\r\n\r\n    // Thresholds for down/up phase:\r\n    const downThreshold = 90; // elbow angle less than 90° means pushup down phase\r\n    const upThreshold = 160; // elbow angle more than 160° means pushup up phase\r\n\r\n    state.downCount = state.downCount || 0;\r\n    state.upCount = state.upCount || 0;\r\n\r\n    // Detect pushup DOWN phase\r\n    if (!state.down) {\r\n      if (elbowAngle < downThreshold) {\r\n        state.downCount++;\r\n        if (state.downCount > 3) {\r\n          state.down = true;\r\n          state.downCount = 0;\r\n          speakFeedback(\"Good pushup depth!\");\r\n          return { feedback: \"Good pushup depth!\", repCounted: false };\r\n        }\r\n      } else {\r\n        state.downCount = 0;\r\n        return { feedback: \"Lower your chest!\", scorePenalty: 1 };\r\n      }\r\n    }\r\n    // Detect pushup UP phase\r\n    else {\r\n      if (elbowAngle > upThreshold) {\r\n        state.upCount++;\r\n        if (state.upCount > 4) {\r\n          state.down = false;\r\n          state.upCount = 0;\r\n          speakFeedback(\"Pushup counted!\");\r\n          return { feedback: \"Pushup counted!\", repCounted: true };\r\n        }\r\n      } else {\r\n        state.upCount = 0;\r\n      }\r\n    }\r\n\r\n    return {};\r\n  },\r\n\r\n  plank: (poseKeypoints, state) => {\r\n    const now = Date.now();\r\n    const deltaTime = now - (state.lastUpdateTime || now);\r\n    state.lastUpdateTime = now;\r\n\r\n    const getXY = (keypoints, name) => {\r\n      const kp = keypoints.find((k) => k.name === name);\r\n      return kp && kp.score > 0.5 ? { x: kp.x, y: kp.y } : null;\r\n    };\r\n\r\n    const isReliable = (point) =>\r\n      point && typeof point.x === \"number\" && typeof point.y === \"number\";\r\n\r\n    const shoulder = getXY(poseKeypoints, \"left_shoulder\");\r\n    const hip = getXY(poseKeypoints, \"left_hip\");\r\n\r\n    if (!isReliable(shoulder) || !isReliable(hip)) {\r\n      state.plankHoldTime = 0;\r\n      state.lastPlankSecond = 0;\r\n      return {};\r\n    }\r\n\r\n    const hipDrop = hip.y - shoulder.y;\r\n\r\n    // Simple range check for proper plank posture\r\n    if (hipDrop > 100 || hipDrop < 5) {\r\n      state.plankHoldTime = 0;\r\n      state.lastPlankSecond = 0;\r\n      return {\r\n        feedback: \"Align your hips to your shoulders!\",\r\n        repCounted: false,\r\n      };\r\n    }\r\n\r\n    // Good posture → accumulate time\r\n    state.plankHoldTime = (state.plankHoldTime || 0) + deltaTime;\r\n\r\n    const secondsHeld = Math.floor(state.plankHoldTime / 1000);\r\n\r\n    if (secondsHeld > (state.lastPlankSecond || 0)) {\r\n      state.lastPlankSecond = secondsHeld;\r\n      state.plankReps = (state.plankReps || 0) + 1;\r\n\r\n      const msg = `Holding plank: ${secondsHeld}s`;\r\n      speakFeedback(msg);\r\n      console.log(\"✔️ Plank reps:\", state.plankReps);\r\n\r\n      return { feedback: msg, repCounted: true };\r\n    }\r\n\r\n    return {};\r\n  },\r\n};\r\nlet lastStandInViewTime = 0;\r\nexport async function startPoseDetection(\r\n  videoElement,\r\n  exercise,\r\n  targetReps,\r\n  feedbackCallback = null,\r\n  userInfo\r\n) {\r\n  if (!detector) await loadModel();\r\n\r\n  if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\r\n    await new Promise((resolve) => {\r\n      const checkReady = () => {\r\n        if (videoElement.videoWidth > 0 && videoElement.videoHeight > 0) {\r\n          resolve();\r\n        } else {\r\n          requestAnimationFrame(checkReady); // Keep checking\r\n        }\r\n      };\r\n      videoElement.onloadedmetadata = checkReady;\r\n      checkReady();\r\n    });\r\n  }\r\n\r\n  const canvas = document.createElement(\"canvas\");\r\n  canvas.width = videoElement.videoWidth;\r\n  canvas.height = videoElement.videoHeight;\r\n  document.body.appendChild(canvas);\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  let totalScore = 500;\r\n  let badFormCount = 0;\r\n  let repCount = 0;\r\n  const state = {};\r\n  const MET_VALUES = {\r\n    pushup: 8,\r\n    squat: 7,\r\n    plank: 5,\r\n    jumping_jack: 8,\r\n    // add more as needed\r\n  };\r\n  let workoutComplete = false; // ✅ Add flag to stop detection\r\n\r\n  const workoutStartTime = Date.now();\r\n\r\n  return new Promise((resolve) => {\r\n    const timeout = setTimeout(() => {\r\n      document.body.removeChild(canvas);\r\n      return resolve(null);\r\n    }, 300000);\r\n\r\n    const detect = async () => {\r\n      if (workoutComplete) return; // ✅ Stop further frames\r\n\r\n      const poses = await detector.estimatePoses(videoElement);\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.font = \"20px Arial\";\r\n      if (\r\n        !poses ||\r\n        !Array.isArray(poses) ||\r\n        poses.length === 0 ||\r\n        !poses[0]?.keypoints ||\r\n        poses[0].keypoints.length === 0\r\n      ) {\r\n        ctx.fillStyle = \"red\";\r\n\r\n        const now = Date.now();\r\n        if (now - lastStandInViewTime > 4000) {\r\n          lastStandInViewTime = now;\r\n        }\r\n\r\n        requestAnimationFrame(detect);\r\n        return;\r\n      }\r\n\r\n      const pose = poses[0];\r\n\r\n      const handler = exerciseHandlers[exercise];\r\n      if (!handler) throw new Error(\"Unsupported exercise: \" + exercise);\r\n\r\n      const result = handler(pose.keypoints, state);\r\n\r\n      if (result.feedback) {\r\n        ctx.fillStyle = result.scorePenalty ? \"red\" : \"green\";\r\n        ctx.fillText(result.feedback, 10, 30);\r\n        speakFeedback(result.feedback);\r\n      }\r\n\r\n      if (result.scorePenalty) {\r\n        totalScore -= result.scorePenalty;\r\n      }\r\n\r\n      if (result.repCounted) {\r\n        repCount++;\r\n\r\n        // ✅ Count bad form once per rep based on presence of scorePenalty\r\n        const isBadForm = result.scorePenalty ? true : false;\r\n\r\n        if (isBadForm) {\r\n          badFormCount++;\r\n        }\r\n\r\n        speakFeedback(`Rep ${repCount} completed!`);\r\n      }\r\n\r\n      if (typeof feedbackCallback === \"function\") {\r\n        feedbackCallback({\r\n          reps: repCount,\r\n          formFeedback: result.feedback,\r\n        });\r\n      }\r\n\r\n      if (repCount >= targetReps) {\r\n        workoutComplete = true; // ✅ Set flag to stop further detection\r\n        clearTimeout(timeout);\r\n        document.body.removeChild(canvas);\r\n\r\n        window.speechSynthesis.cancel();\r\n\r\n        const workoutEndTime = Date.now();\r\n        const durationMinutes = (workoutEndTime - workoutStartTime) / 60000;\r\n\r\n        let rawAccuracy = ((targetReps - badFormCount) / targetReps) * 100;\r\n        let adjustedAccuracy = Math.max(30, Math.min(rawAccuracy, 95)); // clamp between 30 and 95\r\n\r\n        let level = \"\";\r\n        if (adjustedAccuracy < 40) level = \"Weak\";\r\n        else if (adjustedAccuracy < 60) level = \"Beginner\";\r\n        else if (adjustedAccuracy < 80) level = \"Intermediate\";\r\n        else level = \"Advanced\";\r\n\r\n        const formQuality = badFormCount / targetReps;\r\n        console.log(\"Target Reps:\", targetReps);\r\n        console.log(\"Bad Form Count:\", badFormCount);\r\n        console.log(\"Form Quality:\", formQuality);\r\n\r\n        let feedback = \"Perfect form!\";\r\n        if (formQuality > 0.5) {\r\n          feedback = \"Work on your form!\";\r\n        } else if (formQuality > 0.25) {\r\n          feedback = \"Try better form next time!\";\r\n        } else if (formQuality > 0.1) {\r\n          feedback = \"Pretty good form!\";\r\n        }\r\n\r\n        // Calories calculation with gender factor\r\n        const genderFactor =\r\n          userInfo?.gender?.toLowerCase() === \"male\" ? 1 : 0.95;\r\n        const met = MET_VALUES[exercise.toLowerCase()] || 6;\r\n        const caloriesBurned =\r\n          met *\r\n          (userInfo?.weight || 70) *\r\n          (durationMinutes / 60) *\r\n          genderFactor;\r\n\r\n        return resolve({\r\n          score: Math.max(0, totalScore),\r\n          accuracy: Math.floor(adjustedAccuracy),\r\n          xp: Math.floor(Math.max(0, totalScore * 0.8)),\r\n          feedback:\r\n            badFormCount > 0 ? \"Try better form next time!\" : \"Perfect form!\",\r\n          reps: repCount,\r\n          badFormCount,\r\n          calories: caloriesBurned.toFixed(2),\r\n          durationMinutes: durationMinutes.toFixed(2),\r\n        });\r\n      }\r\n\r\n      requestAnimationFrame(detect);\r\n    };\r\n\r\n    detect();\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}