{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{FaRunning,FaChild,FaDumbbell,FaPersonBooth}from\"react-icons/fa\";import\"./AdventureMap.css\";import XPProgressCard from\"./XPProgressCard\";import JumpIcon from\"../../assets/icons/skipping-rope.png\";import SquatIcon from\"../../assets/icons/powerlifting.png\";import PushupIcon from\"../../assets/icons/push-up.png\";import PlankIcon from\"../../assets/icons/vr-fitness.png\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const exerciseTypes=[\"jump\",\"squat\",\"pushup\",\"plank\"];const levelIcons={jump:/*#__PURE__*/_jsx(\"img\",{src:JumpIcon,alt:\"Jump\",className:\"level-icon-img\"}),squat:/*#__PURE__*/_jsx(\"img\",{src:SquatIcon,alt:\"Squat\",className:\"level-icon-img\"}),pushup:/*#__PURE__*/_jsx(\"img\",{src:PushupIcon,alt:\"Pushup\",className:\"level-icon-img\"}),plank:/*#__PURE__*/_jsx(\"img\",{src:PlankIcon,alt:\"Plank\",className:\"level-icon-img\"})};const totalLevels=30;const levelsPerPage=12;const levels=Array.from({length:totalLevels},(_,i)=>{const id=i+1;const exercise=exerciseTypes[i%exerciseTypes.length];const reps=5+Math.floor(i/3)*5;const name=\"Level \".concat(id);const description=\"\".concat(exercise.charAt(0).toUpperCase()+exercise.slice(1),\" \").concat(reps,\" times\");return{id,name,description,reps,exercise,icon:levelIcons[exercise]};});const AdventureMap=()=>{const[currentPage,setCurrentPage]=useState(1);const navigate=useNavigate();const[userId,setUserId]=useState(localStorage.getItem(\"user_id\"));const[userStats,setUserStats]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchStats=async()=>{if(!userId){setError(\"User ID not found\");setLoading(false);return;}try{const response=await fetch(\"http://localhost:5001/user/stats?user_id=\".concat(userId));if(!response.ok){throw new Error(\"Failed to fetch user stats\");}const data=await response.json();console.log(\"score and xp datas:\",data);setUserStats(data);setLoading(false);}catch(err){setError(err.message);setLoading(false);}};fetchStats();},[userId]);const unlockedLevels=(userStats===null||userStats===void 0?void 0:userStats.level)||1;// ðŸ”¹ STEP 4: Handle loading/error\nif(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading user stats...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});const totalPages=Math.ceil(totalLevels/levelsPerPage);const startIndex=(currentPage-1)*levelsPerPage;const currentLevels=levels.slice(startIndex,startIndex+levelsPerPage);const handleLevelSelect=level=>{if(level.id<=unlockedLevels){navigate(\"/select-workout\",{state:{levelId:level.id,levelName:level.name,exercise:level.exercise,targetReps:level.reps}});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"link\",{href:\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap\",rel:\"stylesheet\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"map-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-card\",children:/*#__PURE__*/_jsx(XPProgressCard,{level:userStats.level,xp:userStats.max_xp,maxXp:userStats.max_xp_for_level,score:userStats.max_score,maxScore:userStats.max_score_for_level})}),/*#__PURE__*/_jsxs(\"div\",{className:\"map-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"map-title\",children:\"Choose Your Adventure\"}),/*#__PURE__*/_jsx(\"div\",{className:\"level-grid\",children:currentLevels.map(level=>{const isUnlocked=level.id<=unlockedLevels;return/*#__PURE__*/_jsxs(\"button\",{className:\"level-card \".concat(isUnlocked?\"unlocked\":\"locked\"),onClick:()=>handleLevelSelect(level),disabled:!isUnlocked,title:isUnlocked?level.description:\"Locked\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"level-icon\",children:level.icon}),/*#__PURE__*/_jsxs(\"div\",{className:\"level-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"level-name\",children:level.name}),/*#__PURE__*/_jsx(\"small\",{className:\"level-desc\",children:level.description})]})]},level.id);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(p=>Math.max(p-1,1)),disabled:currentPage===1,children:\"<\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Page \",currentPage,\" of \",totalPages]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(p=>Math.min(p+1,totalPages)),disabled:currentPage===totalPages,children:\">\"})]})]})]})]});};export default AdventureMap;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FaRunning","FaChild","FaDumbbell","FaPersonBooth","XPProgressCard","JumpIcon","SquatIcon","PushupIcon","PlankIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","exerciseTypes","levelIcons","jump","src","alt","className","squat","pushup","plank","totalLevels","levelsPerPage","levels","Array","from","length","_","i","id","exercise","reps","Math","floor","name","concat","description","charAt","toUpperCase","slice","icon","AdventureMap","currentPage","setCurrentPage","navigate","userId","setUserId","localStorage","getItem","userStats","setUserStats","loading","setLoading","error","setError","fetchStats","response","fetch","ok","Error","data","json","console","log","err","message","unlockedLevels","level","children","totalPages","ceil","startIndex","currentLevels","handleLevelSelect","state","levelId","levelName","targetReps","href","rel","xp","max_xp","maxXp","max_xp_for_level","score","max_score","maxScore","max_score_for_level","map","isUnlocked","onClick","disabled","title","p","max","min"],"sources":["D:/Fitness WebApp/client/src/pages/AdventureMap/AdventureMap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaRunning, FaChild, FaDumbbell, FaPersonBooth } from \"react-icons/fa\";\r\nimport \"./AdventureMap.css\";\r\nimport XPProgressCard from \"./XPProgressCard\";\r\n\r\nimport JumpIcon from \"../../assets/icons/skipping-rope.png\";\r\nimport SquatIcon from \"../../assets/icons/powerlifting.png\";\r\nimport PushupIcon from \"../../assets/icons/push-up.png\";\r\nimport PlankIcon from \"../../assets/icons/vr-fitness.png\";\r\n\r\nconst exerciseTypes = [\"jump\", \"squat\", \"pushup\", \"plank\"];\r\nconst levelIcons = {\r\n  jump: <img src={JumpIcon} alt=\"Jump\" className=\"level-icon-img\" />,\r\n  squat: <img src={SquatIcon} alt=\"Squat\" className=\"level-icon-img\" />,\r\n  pushup: <img src={PushupIcon} alt=\"Pushup\" className=\"level-icon-img\" />,\r\n  plank: <img src={PlankIcon} alt=\"Plank\" className=\"level-icon-img\" />,\r\n};\r\n\r\nconst totalLevels = 30;\r\nconst levelsPerPage = 12;\r\n\r\nconst levels = Array.from({ length: totalLevels }, (_, i) => {\r\n  const id = i + 1;\r\n  const exercise = exerciseTypes[i % exerciseTypes.length];\r\n  const reps = 5 + Math.floor(i / 3) * 5;\r\n  const name = `Level ${id}`;\r\n  const description = `${\r\n    exercise.charAt(0).toUpperCase() + exercise.slice(1)\r\n  } ${reps} times`;\r\n\r\n  return {\r\n    id,\r\n    name,\r\n    description,\r\n    reps,\r\n    exercise,\r\n    icon: levelIcons[exercise],\r\n  };\r\n});\r\n\r\nconst AdventureMap = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [userId, setUserId] = useState(localStorage.getItem(\"user_id\"));\r\n  const [userStats, setUserStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchStats = async () => {\r\n      if (!userId) {\r\n        setError(\"User ID not found\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5001/user/stats?user_id=${userId}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch user stats\");\r\n        }\r\n        const data = await response.json();\r\n        console.log(\"score and xp datas:\", data);\r\n        setUserStats(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStats();\r\n  }, [userId]);\r\n\r\n  const unlockedLevels = userStats?.level || 1;\r\n\r\n  // ðŸ”¹ STEP 4: Handle loading/error\r\n  if (loading) return <div>Loading user stats...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  const totalPages = Math.ceil(totalLevels / levelsPerPage);\r\n  const startIndex = (currentPage - 1) * levelsPerPage;\r\n  const currentLevels = levels.slice(startIndex, startIndex + levelsPerPage);\r\n\r\n  const handleLevelSelect = (level) => {\r\n    if (level.id <= unlockedLevels) {\r\n      navigate(\"/select-workout\", {\r\n        state: {\r\n          levelId: level.id,\r\n          levelName: level.name,\r\n          exercise: level.exercise,\r\n          targetReps: level.reps,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap\"\r\n        rel=\"stylesheet\"\r\n      />\r\n\r\n      <div className=\"map-wrapper\">\r\n        <div className=\"left-card\">\r\n          <XPProgressCard\r\n            level={userStats.level}\r\n            xp={userStats.max_xp}\r\n            maxXp={userStats.max_xp_for_level}\r\n            score={userStats.max_score}\r\n            maxScore={userStats.max_score_for_level}\r\n          />\r\n        </div>\r\n        <div className=\"map-container\">\r\n          <h2 className=\"map-title\">Choose Your Adventure</h2>\r\n\r\n          <div className=\"level-grid\">\r\n            {currentLevels.map((level) => {\r\n              const isUnlocked = level.id <= unlockedLevels;\r\n              return (\r\n                <button\r\n                  key={level.id}\r\n                  className={`level-card ${isUnlocked ? \"unlocked\" : \"locked\"}`}\r\n                  onClick={() => handleLevelSelect(level)}\r\n                  disabled={!isUnlocked}\r\n                  title={isUnlocked ? level.description : \"Locked\"}\r\n                >\r\n                  <div className=\"level-icon\">{level.icon}</div>\r\n                  <div className=\"level-info\">\r\n                    <span className=\"level-name\">{level.name}</span>\r\n                    <small className=\"level-desc\">{level.description}</small>\r\n                  </div>\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"pagination\">\r\n            <button\r\n              onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n              disabled={currentPage === 1}\r\n            >\r\n              &lt;\r\n            </button>\r\n            <span>\r\n              Page {currentPage} of {totalPages}\r\n            </span>\r\n            <button\r\n              onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              &gt;\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdventureMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}