{"ast":null,"code":"import * as tf from \"@tensorflow/tfjs\";\nimport * as posedetection from \"@tensorflow-models/pose-detection\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nlet detector;\n\n// Define the skeleton connections between keypoints\nconst skeletonPairs = [[\"left_shoulder\", \"right_shoulder\"], [\"left_shoulder\", \"left_elbow\"], [\"left_elbow\", \"left_wrist\"], [\"right_shoulder\", \"right_elbow\"], [\"right_elbow\", \"right_wrist\"], [\"left_shoulder\", \"left_hip\"], [\"right_shoulder\", \"right_hip\"], [\"left_hip\", \"right_hip\"], [\"left_hip\", \"left_knee\"], [\"left_knee\", \"left_ankle\"], [\"right_hip\", \"right_knee\"], [\"right_knee\", \"right_ankle\"]];\n\n// Draw skeleton lines and keypoints on the canvas\nfunction drawSkeleton(ctx, keypoints) {\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = \"lime\"; // Green lines\n  ctx.fillStyle = \"red\"; // Red dots\n\n  // Draw lines between keypoints\n  skeletonPairs.forEach(([kp1Name, kp2Name]) => {\n    const kp1 = keypoints.find(kp => kp.name === kp1Name);\n    const kp2 = keypoints.find(kp => kp.name === kp2Name);\n    if (kp1 && kp2 && kp1.score > 0.5 && kp2.score > 0.5) {\n      ctx.beginPath();\n      ctx.moveTo(kp1.x, kp1.y);\n      ctx.lineTo(kp2.x, kp2.y);\n      ctx.stroke();\n    }\n  });\n\n  // Draw keypoint circles\n  keypoints.forEach(kp => {\n    if (kp.score > 0.5) {\n      ctx.beginPath();\n      ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n  });\n}\nexport async function loadModel() {\n  await tf.setBackend(\"webgl\");\n  await tf.ready();\n  detector = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n    modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n  });\n}\nlet lastSpokenTime = 0;\nlet cooldown = 1000; // 1 second cooldown to prevent overlap\n\nfunction speakFeedback(msg) {\n  const now = Date.now();\n\n  // Prevent overlapping or repeating too fast\n  if (now - lastSpokenTime < cooldown) return;\n  lastSpokenTime = now;\n\n  // Cancel any ongoing speech\n  window.speechSynthesis.cancel();\n  const speech = new SpeechSynthesisUtterance(msg);\n  speech.volume = 1;\n  speech.pitch = 1;\n  speech.rate = 1;\n  window.speechSynthesis.speak(speech);\n}\n\n// Helper to get x/y of a keypoint\nfunction getXY(keypoints, name) {\n  const kp = keypoints.find(k => k.name === name);\n  return {\n    x: (kp === null || kp === void 0 ? void 0 : kp.x) || 0,\n    y: (kp === null || kp === void 0 ? void 0 : kp.y) || 0,\n    score: (kp === null || kp === void 0 ? void 0 : kp.score) || 0\n  };\n}\n\n// Basic keypoint reliability check\nfunction isReliable(kp, threshold = 0.5) {\n  return kp.score >= threshold;\n}\n\n// Exercise handlers\nconst exerciseHandlers = {\n  squat: (k, state) => {\n    const hip = getXY(k, \"left_hip\");\n    const knee = getXY(k, \"left_knee\");\n    if (!isReliable(hip) || !isReliable(knee)) return {};\n    const hipAboveKnee = hip.y < knee.y + 10;\n    const hipBelowKnee = hip.y > knee.y + 30;\n\n    // Going down\n    if (!state.down) {\n      if (hipBelowKnee) {\n        state.downCount = (state.downCount || 0) + 1;\n        if (state.downCount > 4) {\n          state.down = true;\n          state.downCount = 0;\n          speakFeedback(\"Good job!\");\n          return {\n            feedback: \"Good squat depth!\",\n            repCounted: false\n          };\n        }\n      } else {\n        state.downCount = 0;\n        return {\n          feedback: \"Go deeper!\",\n          scorePenalty: 5\n        };\n      }\n    }\n\n    // Coming up\n    else {\n      if (hipAboveKnee) {\n        state.upCount = (state.upCount || 0) + 1;\n        if (state.upCount > 4) {\n          state.down = false;\n          state.upCount = 0;\n          speakFeedback(\"Squat counted!\");\n          return {\n            feedback: \"Squat counted!\",\n            repCounted: true\n          };\n        }\n      } else {\n        state.upCount = 0;\n      }\n    }\n    return {};\n  },\n  jump: (k, state) => {\n    const hip = getXY(k, \"left_hip\");\n    if (!isReliable(hip)) return {};\n    if (state.prevHipY == null) state.prevHipY = hip.y;\n    const jumpHeight = state.prevHipY - hip.y;\n    const jumpUp = jumpHeight > 20;\n    const weakJump = jumpHeight > 5 && jumpHeight <= 20; // Low effort jump\n    const land = hip.y - state.prevHipY > 10;\n\n    // Weak jump form penalty\n    if (!state.jumping && weakJump) {\n      speakFeedback(\"Jump higher!\");\n      return {\n        feedback: \"Jump higher!\",\n        scorePenalty: 5,\n        repCounted: false\n      };\n    }\n\n    // Good jump detected\n    if (!state.jumping && jumpUp) {\n      state.jumping = true;\n      speakFeedback(\"Nice jump!\");\n      return {\n        feedback: \"Nice jump!\"\n      };\n    }\n\n    // Landing after jump\n    if (state.jumping && land) {\n      state.jumping = false;\n      speakFeedback(\"Jump counted!\");\n      return {\n        feedback: \"Jump counted!\",\n        repCounted: true\n      };\n    }\n    state.prevHipY = hip.y;\n    return {};\n  },\n  pushup: (k, state) => {\n    const shoulder = getXY(k, \"left_shoulder\");\n    const elbow = getXY(k, \"left_elbow\");\n    if (!isReliable(shoulder) || !isReliable(elbow)) return {};\n    if (!state.down) {\n      if (shoulder.y > elbow.y + 20) {\n        state.downCount = (state.downCount || 0) + 1;\n        if (state.downCount > 4) {\n          state.down = true;\n          speakFeedback(\"Good pushup depth!\");\n          return {\n            feedback: \"Good pushup depth!\",\n            repCounted: false\n          };\n        }\n      } else {\n        return {\n          feedback: \"Lower your chest!\",\n          scorePenalty: 5\n        };\n      }\n    } else {\n      if (shoulder.y < elbow.y + 10) {\n        state.upCount = (state.upCount || 0) + 1;\n        if (state.upCount > 4) {\n          state.down = false;\n          speakFeedback(\"Pushup counted!\");\n          return {\n            feedback: \"Pushup counted!\",\n            repCounted: true\n          };\n        }\n      }\n    }\n    return {};\n  },\n  plank: k => {\n    const hip = getXY(k, \"left_hip\");\n    const shoulder = getXY(k, \"left_shoulder\");\n    if (!isReliable(hip) || !isReliable(shoulder)) return {};\n    const diff = Math.abs(hip.y - shoulder.y);\n    if (diff > 40) {\n      speakFeedback(\"Keep your back straight!\");\n      return {\n        feedback: \"Keep your back straight!\",\n        scorePenalty: 5\n      };\n    }\n    return {\n      feedback: \"Hold steady!\",\n      repCounted: false\n    };\n  }\n};\nexport async function startPoseDetection(videoElement, exercise, targetReps, feedbackCallback = null) {\n  if (!detector) await loadModel();\n  if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\n    await new Promise(resolve => {\n      videoElement.onloadedmetadata = () => {\n        resolve();\n      };\n    });\n  }\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = videoElement.videoWidth;\n  canvas.height = videoElement.videoHeight;\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  let totalScore = 100;\n  let badFormCount = 0;\n  let repCount = 0;\n  const state = {};\n  let workoutComplete = false; // ✅ Add flag to stop detection\n\n  return new Promise(resolve => {\n    const timeout = setTimeout(() => {\n      document.body.removeChild(canvas);\n      return resolve(null);\n    }, 30000);\n    const detect = async () => {\n      if (workoutComplete) return; // ✅ Stop further frames\n\n      const poses = await detector.estimatePoses(videoElement);\n      const pose = poses[0];\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      if (!pose || !pose.keypoints || pose.keypoints.length === 0) {\n        ctx.fillStyle = \"red\";\n        ctx.font = \"20px Arial\";\n        ctx.fillText(\"Stand in view!\", 10, 30);\n        speakFeedback(\"Stand in view\");\n        requestAnimationFrame(detect);\n        return;\n      }\n\n      // Draw skeleton on canvas every frame\n      drawSkeleton(ctx, pose.keypoints);\n      const handler = exerciseHandlers[exercise];\n      if (!handler) throw new Error(\"Unsupported exercise: \" + exercise);\n      const result = handler(pose.keypoints, state);\n      if (result.feedback) {\n        ctx.fillStyle = result.scorePenalty ? \"red\" : \"green\";\n        ctx.font = \"20px Arial\";\n        ctx.fillText(result.feedback, 10, 30);\n        if (feedbackCallback) feedbackCallback(result.feedback);\n        if (result.scorePenalty) badFormCount++;\n        if (result.repCounted) repCount++;\n      }\n      if (repCount >= targetReps) {\n        workoutComplete = true;\n        clearTimeout(timeout);\n        document.body.removeChild(canvas);\n        resolve({\n          score: Math.max(0, totalScore - badFormCount * 10),\n          reps: repCount,\n          status: \"success\"\n        });\n        return;\n      }\n      requestAnimationFrame(detect);\n    };\n    detect();\n  });\n}","map":{"version":3,"names":["tf","posedetection","detector","skeletonPairs","drawSkeleton","ctx","keypoints","lineWidth","strokeStyle","fillStyle","forEach","kp1Name","kp2Name","kp1","find","kp","name","kp2","score","beginPath","moveTo","x","y","lineTo","stroke","arc","Math","PI","fill","loadModel","setBackend","ready","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","lastSpokenTime","cooldown","speakFeedback","msg","now","Date","window","speechSynthesis","cancel","speech","SpeechSynthesisUtterance","volume","pitch","rate","speak","getXY","k","isReliable","threshold","exerciseHandlers","squat","state","hip","knee","hipAboveKnee","hipBelowKnee","down","downCount","feedback","repCounted","scorePenalty","upCount","jump","prevHipY","jumpHeight","jumpUp","weakJump","land","jumping","pushup","shoulder","elbow","plank","diff","abs","startPoseDetection","videoElement","exercise","targetReps","feedbackCallback","videoWidth","videoHeight","Promise","resolve","onloadedmetadata","canvas","document","createElement","width","height","body","appendChild","getContext","totalScore","badFormCount","repCount","workoutComplete","timeout","setTimeout","removeChild","detect","poses","estimatePoses","pose","clearRect","length","font","fillText","requestAnimationFrame","handler","Error","result","clearTimeout","max","reps","status"],"sources":["D:/Fitness WebApp/client/src/utils/poseDetectionFrontend.js"],"sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\r\nimport * as posedetection from \"@tensorflow-models/pose-detection\";\r\nimport \"@tensorflow/tfjs-backend-webgl\";\r\n\r\nlet detector;\r\n\r\n// Define the skeleton connections between keypoints\r\nconst skeletonPairs = [\r\n  [\"left_shoulder\", \"right_shoulder\"],\r\n  [\"left_shoulder\", \"left_elbow\"],\r\n  [\"left_elbow\", \"left_wrist\"],\r\n  [\"right_shoulder\", \"right_elbow\"],\r\n  [\"right_elbow\", \"right_wrist\"],\r\n  [\"left_shoulder\", \"left_hip\"],\r\n  [\"right_shoulder\", \"right_hip\"],\r\n  [\"left_hip\", \"right_hip\"],\r\n  [\"left_hip\", \"left_knee\"],\r\n  [\"left_knee\", \"left_ankle\"],\r\n  [\"right_hip\", \"right_knee\"],\r\n  [\"right_knee\", \"right_ankle\"],\r\n];\r\n\r\n// Draw skeleton lines and keypoints on the canvas\r\nfunction drawSkeleton(ctx, keypoints) {\r\n  ctx.lineWidth = 3;\r\n  ctx.strokeStyle = \"lime\"; // Green lines\r\n  ctx.fillStyle = \"red\"; // Red dots\r\n\r\n  // Draw lines between keypoints\r\n  skeletonPairs.forEach(([kp1Name, kp2Name]) => {\r\n    const kp1 = keypoints.find((kp) => kp.name === kp1Name);\r\n    const kp2 = keypoints.find((kp) => kp.name === kp2Name);\r\n\r\n    if (kp1 && kp2 && kp1.score > 0.5 && kp2.score > 0.5) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(kp1.x, kp1.y);\r\n      ctx.lineTo(kp2.x, kp2.y);\r\n      ctx.stroke();\r\n    }\r\n  });\r\n\r\n  // Draw keypoint circles\r\n  keypoints.forEach((kp) => {\r\n    if (kp.score > 0.5) {\r\n      ctx.beginPath();\r\n      ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    }\r\n  });\r\n}\r\n\r\nexport async function loadModel() {\r\n  await tf.setBackend(\"webgl\");\r\n  await tf.ready();\r\n  detector = await posedetection.createDetector(\r\n    posedetection.SupportedModels.MoveNet,\r\n    {\r\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\r\n    }\r\n  );\r\n}\r\n\r\nlet lastSpokenTime = 0;\r\nlet cooldown = 1000; // 1 second cooldown to prevent overlap\r\n\r\nfunction speakFeedback(msg) {\r\n  const now = Date.now();\r\n\r\n  // Prevent overlapping or repeating too fast\r\n  if (now - lastSpokenTime < cooldown) return;\r\n  lastSpokenTime = now;\r\n\r\n  // Cancel any ongoing speech\r\n  window.speechSynthesis.cancel();\r\n\r\n  const speech = new SpeechSynthesisUtterance(msg);\r\n  speech.volume = 1;\r\n  speech.pitch = 1;\r\n  speech.rate = 1;\r\n  window.speechSynthesis.speak(speech);\r\n}\r\n\r\n// Helper to get x/y of a keypoint\r\nfunction getXY(keypoints, name) {\r\n  const kp = keypoints.find((k) => k.name === name);\r\n  return { x: kp?.x || 0, y: kp?.y || 0, score: kp?.score || 0 };\r\n}\r\n\r\n// Basic keypoint reliability check\r\nfunction isReliable(kp, threshold = 0.5) {\r\n  return kp.score >= threshold;\r\n}\r\n\r\n// Exercise handlers\r\nconst exerciseHandlers = {\r\n  squat: (k, state) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    const knee = getXY(k, \"left_knee\");\r\n\r\n    if (!isReliable(hip) || !isReliable(knee)) return {};\r\n\r\n    const hipAboveKnee = hip.y < knee.y + 10;\r\n    const hipBelowKnee = hip.y > knee.y + 30;\r\n\r\n    // Going down\r\n    if (!state.down) {\r\n      if (hipBelowKnee) {\r\n        state.downCount = (state.downCount || 0) + 1;\r\n        if (state.downCount > 4) {\r\n          state.down = true;\r\n          state.downCount = 0;\r\n          speakFeedback(\"Good job!\");\r\n          return { feedback: \"Good squat depth!\", repCounted: false };\r\n        }\r\n      } else {\r\n        state.downCount = 0;\r\n        return { feedback: \"Go deeper!\", scorePenalty: 5 };\r\n      }\r\n    }\r\n\r\n    // Coming up\r\n    else {\r\n      if (hipAboveKnee) {\r\n        state.upCount = (state.upCount || 0) + 1;\r\n        if (state.upCount > 4) {\r\n          state.down = false;\r\n          state.upCount = 0;\r\n          speakFeedback(\"Squat counted!\");\r\n          return { feedback: \"Squat counted!\", repCounted: true };\r\n        }\r\n      } else {\r\n        state.upCount = 0;\r\n      }\r\n    }\r\n\r\n    return {};\r\n  },\r\n\r\n  jump: (k, state) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    if (!isReliable(hip)) return {};\r\n\r\n    if (state.prevHipY == null) state.prevHipY = hip.y;\r\n\r\n    const jumpHeight = state.prevHipY - hip.y;\r\n    const jumpUp = jumpHeight > 20;\r\n    const weakJump = jumpHeight > 5 && jumpHeight <= 20; // Low effort jump\r\n    const land = hip.y - state.prevHipY > 10;\r\n\r\n    // Weak jump form penalty\r\n    if (!state.jumping && weakJump) {\r\n      speakFeedback(\"Jump higher!\");\r\n      return {\r\n        feedback: \"Jump higher!\",\r\n        scorePenalty: 5,\r\n        repCounted: false,\r\n      };\r\n    }\r\n\r\n    // Good jump detected\r\n    if (!state.jumping && jumpUp) {\r\n      state.jumping = true;\r\n      speakFeedback(\"Nice jump!\");\r\n      return { feedback: \"Nice jump!\" };\r\n    }\r\n\r\n    // Landing after jump\r\n    if (state.jumping && land) {\r\n      state.jumping = false;\r\n      speakFeedback(\"Jump counted!\");\r\n      return { feedback: \"Jump counted!\", repCounted: true };\r\n    }\r\n\r\n    state.prevHipY = hip.y;\r\n    return {};\r\n  },\r\n\r\n  pushup: (k, state) => {\r\n    const shoulder = getXY(k, \"left_shoulder\");\r\n    const elbow = getXY(k, \"left_elbow\");\r\n    if (!isReliable(shoulder) || !isReliable(elbow)) return {};\r\n\r\n    if (!state.down) {\r\n      if (shoulder.y > elbow.y + 20) {\r\n        state.downCount = (state.downCount || 0) + 1;\r\n        if (state.downCount > 4) {\r\n          state.down = true;\r\n          speakFeedback(\"Good pushup depth!\");\r\n          return { feedback: \"Good pushup depth!\", repCounted: false };\r\n        }\r\n      } else {\r\n        return { feedback: \"Lower your chest!\", scorePenalty: 5 };\r\n      }\r\n    } else {\r\n      if (shoulder.y < elbow.y + 10) {\r\n        state.upCount = (state.upCount || 0) + 1;\r\n        if (state.upCount > 4) {\r\n          state.down = false;\r\n          speakFeedback(\"Pushup counted!\");\r\n          return { feedback: \"Pushup counted!\", repCounted: true };\r\n        }\r\n      }\r\n    }\r\n\r\n    return {};\r\n  },\r\n\r\n  plank: (k) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    const shoulder = getXY(k, \"left_shoulder\");\r\n    if (!isReliable(hip) || !isReliable(shoulder)) return {};\r\n\r\n    const diff = Math.abs(hip.y - shoulder.y);\r\n    if (diff > 40) {\r\n      speakFeedback(\"Keep your back straight!\");\r\n      return { feedback: \"Keep your back straight!\", scorePenalty: 5 };\r\n    }\r\n\r\n    return { feedback: \"Hold steady!\", repCounted: false };\r\n  },\r\n};\r\n\r\nexport async function startPoseDetection(\r\n  videoElement,\r\n  exercise,\r\n  targetReps,\r\n  feedbackCallback = null\r\n) {\r\n  if (!detector) await loadModel();\r\n\r\n  if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\r\n    await new Promise((resolve) => {\r\n      videoElement.onloadedmetadata = () => {\r\n        resolve();\r\n      };\r\n    });\r\n  }\r\n\r\n  const canvas = document.createElement(\"canvas\");\r\n  canvas.width = videoElement.videoWidth;\r\n  canvas.height = videoElement.videoHeight;\r\n  document.body.appendChild(canvas);\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  let totalScore = 100;\r\n  let badFormCount = 0;\r\n  let repCount = 0;\r\n  const state = {};\r\n  let workoutComplete = false; // ✅ Add flag to stop detection\r\n\r\n  return new Promise((resolve) => {\r\n    const timeout = setTimeout(() => {\r\n      document.body.removeChild(canvas);\r\n      return resolve(null);\r\n    }, 30000);\r\n\r\n    const detect = async () => {\r\n      if (workoutComplete) return; // ✅ Stop further frames\r\n\r\n      const poses = await detector.estimatePoses(videoElement);\r\n      const pose = poses[0];\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      if (!pose || !pose.keypoints || pose.keypoints.length === 0) {\r\n        ctx.fillStyle = \"red\";\r\n        ctx.font = \"20px Arial\";\r\n        ctx.fillText(\"Stand in view!\", 10, 30);\r\n        speakFeedback(\"Stand in view\");\r\n        requestAnimationFrame(detect);\r\n        return;\r\n      }\r\n\r\n      // Draw skeleton on canvas every frame\r\n      drawSkeleton(ctx, pose.keypoints);\r\n\r\n      const handler = exerciseHandlers[exercise];\r\n      if (!handler) throw new Error(\"Unsupported exercise: \" + exercise);\r\n\r\n      const result = handler(pose.keypoints, state);\r\n\r\n      if (result.feedback) {\r\n        ctx.fillStyle = result.scorePenalty ? \"red\" : \"green\";\r\n        ctx.font = \"20px Arial\";\r\n        ctx.fillText(result.feedback, 10, 30);\r\n\r\n        if (feedbackCallback) feedbackCallback(result.feedback);\r\n        if (result.scorePenalty) badFormCount++;\r\n        if (result.repCounted) repCount++;\r\n      }\r\n\r\n      if (repCount >= targetReps) {\r\n        workoutComplete = true;\r\n        clearTimeout(timeout);\r\n        document.body.removeChild(canvas);\r\n        resolve({\r\n          score: Math.max(0, totalScore - badFormCount * 10),\r\n          reps: repCount,\r\n          status: \"success\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      requestAnimationFrame(detect);\r\n    };\r\n\r\n    detect();\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}