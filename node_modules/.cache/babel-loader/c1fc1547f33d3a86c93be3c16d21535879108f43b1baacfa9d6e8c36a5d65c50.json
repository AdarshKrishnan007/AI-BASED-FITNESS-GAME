{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fitness WebApp\\\\client\\\\src\\\\pages\\\\AdventureMap\\\\AdventureMap.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./AdventureMap.css\";\n\n// Generate 30 levels dynamically\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exerciseTypes = [\"jump\", \"squat\", \"pushup\"];\nconst levelIcons = {\n  jump: \"🦘\",\n  squat: \"🧍\",\n  pushup: \"💪\"\n};\nconst levels = Array.from({\n  length: 30\n}, (_, i) => {\n  const id = i + 1;\n  const exercise = exerciseTypes[i % exerciseTypes.length];\n  const reps = 5 + Math.floor(i / 3) * 5; // reps increase every 3 levels\n  const name = `${exercise[0].toUpperCase() + exercise.slice(1)} Lv${id}`;\n  const description = `${exercise.charAt(0).toUpperCase() + exercise.slice(1)} ${reps} times`;\n  return {\n    id,\n    name,\n    description,\n    reps,\n    exercise,\n    icon: levelIcons[exercise]\n  };\n});\nconst AdventureMap = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleLevelSelect = level => {\n    navigate(\"/select-workout\", {\n      state: {\n        levelId: level.id,\n        levelName: level.name,\n        exercise: level.exercise,\n        targetReps: level.reps\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"map-title\",\n      children: \"Choose Your Adventure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-zigzag\",\n      children: levels.map((level, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `level-card ${index % 2 === 0 ? \"left\" : \"right\"}`,\n        onClick: () => handleLevelSelect(level),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-icon\",\n          children: level.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: level.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: level.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, level.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AdventureMap, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = AdventureMap;\nexport default AdventureMap;\nvar _c;\n$RefreshReg$(_c, \"AdventureMap\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","exerciseTypes","levelIcons","jump","squat","pushup","levels","Array","from","length","_","i","id","exercise","reps","Math","floor","name","toUpperCase","slice","description","charAt","icon","AdventureMap","_s","navigate","handleLevelSelect","level","state","levelId","levelName","targetReps","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["D:/Fitness WebApp/client/src/pages/AdventureMap/AdventureMap.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./AdventureMap.css\";\r\n\r\n// Generate 30 levels dynamically\r\nconst exerciseTypes = [\"jump\", \"squat\", \"pushup\"];\r\nconst levelIcons = {\r\n  jump: \"🦘\",\r\n  squat: \"🧍\",\r\n  pushup: \"💪\",\r\n};\r\n\r\nconst levels = Array.from({ length: 30 }, (_, i) => {\r\n  const id = i + 1;\r\n  const exercise = exerciseTypes[i % exerciseTypes.length];\r\n  const reps = 5 + Math.floor(i / 3) * 5; // reps increase every 3 levels\r\n  const name = `${exercise[0].toUpperCase() + exercise.slice(1)} Lv${id}`;\r\n  const description = `${\r\n    exercise.charAt(0).toUpperCase() + exercise.slice(1)\r\n  } ${reps} times`;\r\n\r\n  return {\r\n    id,\r\n    name,\r\n    description,\r\n    reps,\r\n    exercise,\r\n    icon: levelIcons[exercise],\r\n  };\r\n});\r\n\r\nconst AdventureMap = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLevelSelect = (level) => {\r\n    navigate(\"/select-workout\", {\r\n      state: {\r\n        levelId: level.id,\r\n        levelName: level.name,\r\n        exercise: level.exercise,\r\n        targetReps: level.reps,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <h2 className=\"map-title\">Choose Your Adventure</h2>\r\n      <div className=\"level-zigzag\">\r\n        {levels.map((level, index) => (\r\n          <div\r\n            key={level.id}\r\n            className={`level-card ${index % 2 === 0 ? \"left\" : \"right\"}`}\r\n            onClick={() => handleLevelSelect(level)}\r\n          >\r\n            <div className=\"level-icon\">{level.icon}</div>\r\n            <div>\r\n              <h3>{level.name}</h3>\r\n              <p>{level.description}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdventureMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}