{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fitness WebApp\\\\client\\\\src\\\\pages\\\\LiveWorkout\\\\LiveWorkout.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useWorkoutProgress } from \"../../contexts/WorkoutProgressContext\";\nimport PoseFeedback from \"../../components/PoseFeedback\";\nimport ExerciseAvatar3D from \"../../components/ExerciseAvatar3D\";\nimport { startPoseDetection } from \"../../utils/poseDetectionFrontend\";\nimport workoutService from \"../../services/workoutService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LiveWorkout = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    updateWorkoutResult,\n    updateTodayProgress\n  } = useWorkoutProgress();\n  const {\n    exercise,\n    mode,\n    level,\n    user_id\n  } = location.state || {};\n  const [result, setResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [feedbackMessage, setFeedbackMessage] = useState(\"\");\n  const [isVideoReady, setIsVideoReady] = useState(false);\n  const videoRef = useRef(null);\n  useEffect(() => {\n    if (!exercise || !mode || !user_id) {\n      navigate(\"/dailychallenge\");\n      return;\n    }\n    const runWorkout = async () => {\n      try {\n        let workoutResult;\n        if (mode === \"webcam\") {\n          workoutResult = await handleWebcamMode(exercise, videoRef);\n        } else {\n          workoutResult = await handleVideoMode(exercise);\n        }\n        const {\n          score,\n          accuracy,\n          xp,\n          feedback,\n          reps\n        } = workoutResult;\n        setResult(workoutResult);\n        setFeedbackMessage(feedback || \"Good effort! Keep going!\");\n\n        // Log workout in backend via workoutService\n        await workoutService.logWorkout({\n          user_id,\n          exercise,\n          level,\n          score,\n          xp,\n          reps: reps || 0,\n          completed: true\n        });\n        updateWorkoutResult({\n          exercise,\n          score,\n          xp,\n          completed: true\n        });\n\n        // Get today's progress via workoutService\n        const todayProgress = await workoutService.getTodayProgress(user_id);\n        updateTodayProgress(todayProgress);\n\n        // Unlock next level (if eligible)\n        if (score >= 70 && xp >= 50) {\n          await workoutService.unlockNextLevel({\n            user_id,\n            currentLevel: level\n          });\n        }\n      } catch (error) {\n        console.error(error);\n        setResult({\n          error: \"Workout failed. Try again.\"\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    runWorkout();\n  }, [exercise, mode, level, user_id, navigate, updateWorkoutResult, updateTodayProgress]);\n  const handleWebcamMode = async (exercise, videoRef) => {\n    // Wait for video to be ready\n    await new Promise((resolve, reject) => {\n      const video = videoRef.current;\n      if (!video) return reject(\"Video element not found\");\n      if (video.readyState >= 2) {\n        // Video metadata is already loaded\n        resolve();\n      } else {\n        // Wait for loadedmetadata event\n        const onLoadedMetadata = () => {\n          video.removeEventListener(\"loadedmetadata\", onLoadedMetadata);\n          resolve();\n        };\n        video.addEventListener(\"loadedmetadata\", onLoadedMetadata);\n      }\n    });\n    const detectionResult = await startPoseDetection(videoRef.current, exercise, feedback => setFeedbackMessage(feedback) // live updates\n    );\n    return {\n      ...detectionResult,\n      feedback: detectionResult.feedback || \"Live detection complete!\",\n      reps: detectionResult.reps || 0\n    };\n  };\n  const handleVideoMode = async exercise => {\n    const base64Video = localStorage.getItem(\"uploadedWorkoutVideo\");\n    if (!base64Video) throw new Error(\"No video uploaded\");\n    const res = await workoutService.uploadVideoDetection(base64Video, exercise);\n    return res;\n  };\n  useEffect(() => {\n    if (mode === \"webcam\" && videoRef.current) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        videoRef.current.srcObject = stream;\n        videoRef.current.play().then(() => setIsVideoReady(true)) // Mark video ready only after play succeeds\n        .catch(err => {\n          console.error(\"Error playing video:\", err);\n        });\n      }).catch(err => console.error(\"Camera access error:\", err));\n    }\n  }, [mode]);\n  useEffect(() => {\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const renderLiveCamera = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Live Camera Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      muted: true,\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 40,\n        textAlign: \"center\"\n      },\n      children: \"Starting workout...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      maxWidth: 600,\n      margin: \"40px auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: 24,\n        textAlign: \"center\"\n      },\n      children: [level || exercise.toUpperCase(), \" - Results\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), mode === \"webcam\" && renderLiveCamera(), result !== null && result !== void 0 && result.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#dc2626\",\n        fontWeight: \"600\",\n        textAlign: \"center\"\n      },\n      children: result.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PoseFeedback, {\n        accuracy: result.accuracy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ExerciseAvatar3D, {\n        exercise: exercise\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Feedback:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), \" \", feedbackMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"XP Earned:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), \" \", result.xp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), \" \", result.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Accuracy:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), \" \", result.accuracy, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), result.reps !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Repetitions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), \" \", result.reps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/dailychallenge\"),\n      style: {\n        marginTop: 24,\n        backgroundColor: \"#3b82f6\",\n        color: \"white\",\n        padding: \"10px 20px\",\n        border: \"none\",\n        borderRadius: 6,\n        cursor: \"pointer\"\n      },\n      children: \"Back to Challenges\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveWorkout, \"8BjOE3ACI7C6gMRHtqWlLHqMlh4=\", false, function () {\n  return [useLocation, useNavigate, useWorkoutProgress];\n});\n_c = LiveWorkout;\nexport default LiveWorkout;\nvar _c;\n$RefreshReg$(_c, \"LiveWorkout\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","useNavigate","useWorkoutProgress","PoseFeedback","ExerciseAvatar3D","startPoseDetection","workoutService","jsxDEV","_jsxDEV","Fragment","_Fragment","LiveWorkout","_s","location","navigate","updateWorkoutResult","updateTodayProgress","exercise","mode","level","user_id","state","result","setResult","isLoading","setIsLoading","feedbackMessage","setFeedbackMessage","isVideoReady","setIsVideoReady","videoRef","runWorkout","workoutResult","handleWebcamMode","handleVideoMode","score","accuracy","xp","feedback","reps","logWorkout","completed","todayProgress","getTodayProgress","unlockNextLevel","currentLevel","error","console","Promise","resolve","reject","video","current","readyState","onLoadedMetadata","removeEventListener","addEventListener","detectionResult","base64Video","localStorage","getItem","Error","res","uploadVideoDetection","navigator","mediaDevices","getUserMedia","then","stream","srcObject","play","catch","err","getTracks","forEach","track","stop","renderLiveCamera","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","muted","width","marginTop","textAlign","padding","maxWidth","margin","fontSize","toUpperCase","color","fontWeight","undefined","onClick","backgroundColor","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["D:/Fitness WebApp/client/src/pages/LiveWorkout/LiveWorkout.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useWorkoutProgress } from \"../../contexts/WorkoutProgressContext\";\r\nimport PoseFeedback from \"../../components/PoseFeedback\";\r\nimport ExerciseAvatar3D from \"../../components/ExerciseAvatar3D\";\r\nimport { startPoseDetection } from \"../../utils/poseDetectionFrontend\";\r\nimport workoutService from \"../../services/workoutService\";\r\n\r\nconst LiveWorkout = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { updateWorkoutResult, updateTodayProgress } = useWorkoutProgress();\r\n\r\n  const { exercise, mode, level, user_id } = location.state || {};\r\n  const [result, setResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [feedbackMessage, setFeedbackMessage] = useState(\"\");\r\n  const [isVideoReady, setIsVideoReady] = useState(false);\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!exercise || !mode || !user_id) {\r\n      navigate(\"/dailychallenge\");\r\n      return;\r\n    }\r\n\r\n    const runWorkout = async () => {\r\n      try {\r\n        let workoutResult;\r\n\r\n        if (mode === \"webcam\") {\r\n          workoutResult = await handleWebcamMode(exercise, videoRef);\r\n        } else {\r\n          workoutResult = await handleVideoMode(exercise);\r\n        }\r\n\r\n        const { score, accuracy, xp, feedback, reps } = workoutResult;\r\n\r\n        setResult(workoutResult);\r\n        setFeedbackMessage(feedback || \"Good effort! Keep going!\");\r\n\r\n        // Log workout in backend via workoutService\r\n        await workoutService.logWorkout({\r\n          user_id,\r\n          exercise,\r\n          level,\r\n          score,\r\n          xp,\r\n          reps: reps || 0,\r\n          completed: true,\r\n        });\r\n\r\n        updateWorkoutResult({ exercise, score, xp, completed: true });\r\n\r\n        // Get today's progress via workoutService\r\n        const todayProgress = await workoutService.getTodayProgress(user_id);\r\n        updateTodayProgress(todayProgress);\r\n\r\n        // Unlock next level (if eligible)\r\n        if (score >= 70 && xp >= 50) {\r\n          await workoutService.unlockNextLevel({\r\n            user_id,\r\n            currentLevel: level,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        setResult({ error: \"Workout failed. Try again.\" });\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    runWorkout();\r\n  }, [\r\n    exercise,\r\n    mode,\r\n    level,\r\n    user_id,\r\n    navigate,\r\n    updateWorkoutResult,\r\n    updateTodayProgress,\r\n  ]);\r\n\r\n  const handleWebcamMode = async (exercise, videoRef) => {\r\n    // Wait for video to be ready\r\n    await new Promise((resolve, reject) => {\r\n      const video = videoRef.current;\r\n      if (!video) return reject(\"Video element not found\");\r\n\r\n      if (video.readyState >= 2) {\r\n        // Video metadata is already loaded\r\n        resolve();\r\n      } else {\r\n        // Wait for loadedmetadata event\r\n        const onLoadedMetadata = () => {\r\n          video.removeEventListener(\"loadedmetadata\", onLoadedMetadata);\r\n          resolve();\r\n        };\r\n        video.addEventListener(\"loadedmetadata\", onLoadedMetadata);\r\n      }\r\n    });\r\n\r\n    const detectionResult = await startPoseDetection(\r\n      videoRef.current,\r\n      exercise,\r\n      (feedback) => setFeedbackMessage(feedback) // live updates\r\n    );\r\n\r\n    return {\r\n      ...detectionResult,\r\n      feedback: detectionResult.feedback || \"Live detection complete!\",\r\n      reps: detectionResult.reps || 0,\r\n    };\r\n  };\r\n\r\n  const handleVideoMode = async (exercise) => {\r\n    const base64Video = localStorage.getItem(\"uploadedWorkoutVideo\");\r\n    if (!base64Video) throw new Error(\"No video uploaded\");\r\n\r\n    const res = await workoutService.uploadVideoDetection(\r\n      base64Video,\r\n      exercise\r\n    );\r\n    return res;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mode === \"webcam\" && videoRef.current) {\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: true })\r\n        .then((stream) => {\r\n          videoRef.current.srcObject = stream;\r\n          videoRef.current\r\n            .play()\r\n            .then(() => setIsVideoReady(true)) // Mark video ready only after play succeeds\r\n            .catch((err) => {\r\n              console.error(\"Error playing video:\", err);\r\n            });\r\n        })\r\n        .catch((err) => console.error(\"Camera access error:\", err));\r\n    }\r\n  }, [mode]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const renderLiveCamera = () => (\r\n    <div style={{ marginBottom: 16 }}>\r\n      <h4>Live Camera Feed</h4>\r\n      <video\r\n        ref={videoRef}\r\n        autoPlay\r\n        playsInline\r\n        muted\r\n        style={{ width: \"100%\" }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{ marginTop: 40, textAlign: \"center\" }}>\r\n        Starting workout...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 16, maxWidth: 600, margin: \"40px auto\" }}>\r\n      <h2 style={{ fontSize: 24, textAlign: \"center\" }}>\r\n        {level || exercise.toUpperCase()} - Results\r\n      </h2>\r\n\r\n      {mode === \"webcam\" && renderLiveCamera()}\r\n\r\n      {result?.error ? (\r\n        <div\r\n          style={{ color: \"#dc2626\", fontWeight: \"600\", textAlign: \"center\" }}\r\n        >\r\n          {result.error}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <PoseFeedback accuracy={result.accuracy} />\r\n          <ExerciseAvatar3D exercise={exercise} />\r\n          <p>\r\n            <strong>Feedback:</strong> {feedbackMessage}\r\n          </p>\r\n          <p>\r\n            <strong>XP Earned:</strong> {result.xp}\r\n          </p>\r\n          <p>\r\n            <strong>Score:</strong> {result.score}\r\n          </p>\r\n          <p>\r\n            <strong>Accuracy:</strong> {result.accuracy}%\r\n          </p>\r\n          {result.reps !== undefined && (\r\n            <p>\r\n              <strong>Repetitions:</strong> {result.reps}\r\n            </p>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <button\r\n        onClick={() => navigate(\"/dailychallenge\")}\r\n        style={{\r\n          marginTop: 24,\r\n          backgroundColor: \"#3b82f6\",\r\n          color: \"white\",\r\n          padding: \"10px 20px\",\r\n          border: \"none\",\r\n          borderRadius: 6,\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Back to Challenges\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveWorkout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}