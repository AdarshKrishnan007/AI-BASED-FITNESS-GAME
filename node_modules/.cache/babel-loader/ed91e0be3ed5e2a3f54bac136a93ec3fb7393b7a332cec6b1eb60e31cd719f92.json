{"ast":null,"code":"import * as tf from \"@tensorflow/tfjs\";\nimport * as posedetection from \"@tensorflow-models/pose-detection\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nlet detector;\n\n// let audio = {\n//   good: new Audio(\"/audio/good.mp3\"),\n//   bad: new Audio(\"/audio/bad.mp3\"),\n// };\n\nexport async function loadModel() {\n  await tf.setBackend(\"webgl\");\n  await tf.ready();\n  detector = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n    modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n  });\n}\nlet lastSpokenTime = 0;\nlet cooldown = 1000; // 1 second cooldown to prevent overlap\n\nfunction speakFeedback(msg) {\n  const now = Date.now();\n\n  // Prevent overlapping or repeating too fast\n  if (now - lastSpokenTime < cooldown) return;\n  lastSpokenTime = now;\n\n  // Cancel any ongoing speech\n  window.speechSynthesis.cancel();\n  const speech = new SpeechSynthesisUtterance(msg);\n  speech.volume = 1;\n  speech.pitch = 1;\n  speech.rate = 1;\n  window.speechSynthesis.speak(speech);\n}\n\n// Helper to get x/y of a keypoint\nfunction getXY(keypoints, name) {\n  const kp = keypoints.find(k => k.name === name);\n  return {\n    x: (kp === null || kp === void 0 ? void 0 : kp.x) || 0,\n    y: (kp === null || kp === void 0 ? void 0 : kp.y) || 0,\n    score: (kp === null || kp === void 0 ? void 0 : kp.score) || 0\n  };\n}\n\n// Basic keypoint reliability check\nfunction isReliable(kp, threshold = 0.5) {\n  return kp.score >= threshold;\n}\n\n// Exercise handlers\nconst exerciseHandlers = {\n  squat: (k, state) => {\n    const hip = getXY(k, \"left_hip\");\n    const knee = getXY(k, \"left_knee\");\n    if (!isReliable(hip) || !isReliable(knee)) return {};\n    const hipAboveKnee = hip.y < knee.y + 10;\n    const hipBelowKnee = hip.y > knee.y + 30;\n\n    // Going down\n    if (!state.down) {\n      if (hipBelowKnee) {\n        state.downCount = (state.downCount || 0) + 1;\n        if (state.downCount > 4) {\n          state.down = true;\n          state.downCount = 0;\n          speakFeedback(\"Good job!\");\n          return {\n            feedback: \"Good squat depth!\",\n            repCounted: false\n          };\n        }\n      } else {\n        state.downCount = 0;\n        return {\n          feedback: \"Go deeper!\",\n          scorePenalty: 5\n        };\n      }\n    }\n\n    // Coming up\n    else {\n      if (hipAboveKnee) {\n        state.upCount = (state.upCount || 0) + 1;\n        if (state.upCount > 4) {\n          state.down = false;\n          state.upCount = 0;\n          speakFeedback(\"Squat counted!\");\n          return {\n            feedback: \"Squat counted!\",\n            repCounted: true\n          };\n        }\n      } else {\n        state.upCount = 0;\n      }\n    }\n    return {};\n  },\n  jump: (k, state) => {\n    const hip = getXY(k, \"left_hip\");\n    if (!isReliable(hip)) return {};\n    if (state.prevHipY == null) state.prevHipY = hip.y;\n    const jumpHeight = state.prevHipY - hip.y;\n    const jumpUp = jumpHeight > 20;\n    const weakJump = jumpHeight > 5 && jumpHeight <= 20; // Low effort jump\n    const land = hip.y - state.prevHipY > 10;\n\n    // Weak jump form penalty\n    if (!state.jumping && weakJump) {\n      speakFeedback(\"Jump higher!\");\n      return {\n        feedback: \"Jump higher!\",\n        scorePenalty: 5,\n        repCounted: false\n      };\n    }\n\n    // Good jump detected\n    if (!state.jumping && jumpUp) {\n      state.jumping = true;\n      speakFeedback(\"Nice jump!\");\n      return {\n        feedback: \"Nice jump!\"\n      };\n    }\n\n    // Landing after jump\n    if (state.jumping && land) {\n      state.jumping = false;\n      speakFeedback(\"Jump counted!\");\n      return {\n        feedback: \"Jump counted!\",\n        repCounted: true\n      };\n    }\n    state.prevHipY = hip.y;\n    return {};\n  },\n  pushup: (k, state) => {\n    const shoulder = getXY(k, \"left_shoulder\");\n    const elbow = getXY(k, \"left_elbow\");\n    if (!isReliable(shoulder) || !isReliable(elbow)) return {};\n    if (!state.down) {\n      if (shoulder.y > elbow.y + 20) {\n        state.downCount = (state.downCount || 0) + 1;\n        if (state.downCount > 4) {\n          state.down = true;\n          speakFeedback(\"Good pushup depth!\");\n          return {\n            feedback: \"Good pushup depth!\",\n            repCounted: false\n          };\n        }\n      } else {\n        return {\n          feedback: \"Lower your chest!\",\n          scorePenalty: 5\n        };\n      }\n    } else {\n      if (shoulder.y < elbow.y + 10) {\n        state.upCount = (state.upCount || 0) + 1;\n        if (state.upCount > 4) {\n          state.down = false;\n          speakFeedback(\"Pushup counted!\");\n          return {\n            feedback: \"Pushup counted!\",\n            repCounted: true\n          };\n        }\n      }\n    }\n    return {};\n  },\n  plank: k => {\n    const hip = getXY(k, \"left_hip\");\n    const shoulder = getXY(k, \"left_shoulder\");\n    if (!isReliable(hip) || !isReliable(shoulder)) return {};\n    const diff = Math.abs(hip.y - shoulder.y);\n    if (diff > 40) {\n      speakFeedback(\"Keep your back straight!\");\n      return {\n        feedback: \"Keep your back straight!\",\n        scorePenalty: 5\n      };\n    }\n    return {\n      feedback: \"Hold steady!\",\n      repCounted: false\n    };\n  }\n};\nlet lastStandInViewTime = 0;\nexport async function startPoseDetection(videoElement, exercise, targetReps, feedbackCallback = null, userInfo) {\n  if (!detector) await loadModel();\n  if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\n    await new Promise(resolve => {\n      const checkReady = () => {\n        if (videoElement.videoWidth > 0 && videoElement.videoHeight > 0) {\n          resolve();\n        } else {\n          requestAnimationFrame(checkReady); // Keep checking\n        }\n      };\n      videoElement.onloadedmetadata = checkReady;\n      checkReady();\n    });\n  }\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = videoElement.videoWidth;\n  canvas.height = videoElement.videoHeight;\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  let totalScore = 100;\n  let badFormCount = 0;\n  let repCount = 0;\n  const state = {};\n  const MET_VALUES = {\n    pushup: 8,\n    squat: 7,\n    plank: 5,\n    jumping_jack: 8\n    // add more as needed\n  };\n  let workoutComplete = false; // ✅ Add flag to stop detection\n\n  const workoutStartTime = Date.now();\n  return new Promise(resolve => {\n    const timeout = setTimeout(() => {\n      document.body.removeChild(canvas);\n      return resolve(null);\n    }, 300000);\n    const detect = async () => {\n      var _poses$;\n      if (workoutComplete) return; // ✅ Stop further frames\n\n      const poses = await detector.estimatePoses(videoElement);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.font = \"20px Arial\";\n      if (!poses || !Array.isArray(poses) || poses.length === 0 || !((_poses$ = poses[0]) !== null && _poses$ !== void 0 && _poses$.keypoints) || poses[0].keypoints.length === 0) {\n        ctx.fillStyle = \"red\";\n        const now = Date.now();\n        if (now - lastStandInViewTime > 4000) {\n          lastStandInViewTime = now;\n        }\n        requestAnimationFrame(detect);\n        return;\n      }\n      const pose = poses[0];\n      const handler = exerciseHandlers[exercise];\n      if (!handler) throw new Error(\"Unsupported exercise: \" + exercise);\n      const result = handler(pose.keypoints, state);\n      if (result.feedback) {\n        ctx.fillStyle = result.scorePenalty ? \"red\" : \"green\";\n        ctx.fillText(result.feedback, 10, 30);\n        speakFeedback(result.feedback);\n      }\n      if (result.scorePenalty) {\n        totalScore -= result.scorePenalty;\n        badFormCount++;\n      }\n      if (result.repCounted) {\n        repCount++;\n        speakFeedback(`Rep ${repCount} completed!`);\n      }\n      if (typeof feedbackCallback === \"function\") {\n        feedbackCallback({\n          reps: repCount,\n          formFeedback: result.feedback\n        });\n      }\n      if (repCount >= targetReps) {\n        var _userInfo$gender;\n        workoutComplete = true; // ✅ Set flag to stop further detection\n        clearTimeout(timeout);\n        document.body.removeChild(canvas);\n        window.speechSynthesis.cancel();\n        const workoutEndTime = Date.now();\n        const durationMinutes = (workoutEndTime - workoutStartTime) / 60000;\n        let rawAccuracy = (targetReps - badFormCount) / targetReps * 100;\n        let adjustedAccuracy = Math.max(30, Math.min(rawAccuracy, 95)); // clamp between 30 and 95\n\n        let level = \"\";\n        if (adjustedAccuracy < 40) level = \"Very Weak\";else if (adjustedAccuracy < 60) level = \"Weak\";else if (adjustedAccuracy < 80) level = \"Medium\";else level = \"Fully Jump\";\n\n        // Calories calculation with gender factor\n        const genderFactor = (userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$gender = userInfo.gender) === null || _userInfo$gender === void 0 ? void 0 : _userInfo$gender.toLowerCase()) === \"male\" ? 1 : 0.95;\n        const met = MET_VALUES[exercise.toLowerCase()] || 6;\n        const caloriesBurned = met * ((userInfo === null || userInfo === void 0 ? void 0 : userInfo.weight) || 70) * (durationMinutes / 60) * genderFactor;\n        return resolve({\n          score: Math.max(0, totalScore),\n          accuracy: Math.floor(adjustedAccuracy),\n          xp: Math.floor(Math.max(0, totalScore * 0.8)),\n          feedback: badFormCount > 0 ? \"Try better form next time!\" : \"Perfect form!\",\n          reps: repCount,\n          badFormCount,\n          calories: caloriesBurned.toFixed(2),\n          durationMinutes: durationMinutes.toFixed(2)\n        });\n      }\n      requestAnimationFrame(detect);\n    };\n    detect();\n  });\n}","map":{"version":3,"names":["tf","posedetection","detector","loadModel","setBackend","ready","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","lastSpokenTime","cooldown","speakFeedback","msg","now","Date","window","speechSynthesis","cancel","speech","SpeechSynthesisUtterance","volume","pitch","rate","speak","getXY","keypoints","name","kp","find","k","x","y","score","isReliable","threshold","exerciseHandlers","squat","state","hip","knee","hipAboveKnee","hipBelowKnee","down","downCount","feedback","repCounted","scorePenalty","upCount","jump","prevHipY","jumpHeight","jumpUp","weakJump","land","jumping","pushup","shoulder","elbow","plank","diff","Math","abs","lastStandInViewTime","startPoseDetection","videoElement","exercise","targetReps","feedbackCallback","userInfo","videoWidth","videoHeight","Promise","resolve","checkReady","requestAnimationFrame","onloadedmetadata","canvas","document","createElement","width","height","body","appendChild","ctx","getContext","totalScore","badFormCount","repCount","MET_VALUES","jumping_jack","workoutComplete","workoutStartTime","timeout","setTimeout","removeChild","detect","_poses$","poses","estimatePoses","clearRect","font","Array","isArray","length","fillStyle","pose","handler","Error","result","fillText","reps","formFeedback","_userInfo$gender","clearTimeout","workoutEndTime","durationMinutes","rawAccuracy","adjustedAccuracy","max","min","level","genderFactor","gender","toLowerCase","met","caloriesBurned","weight","accuracy","floor","xp","calories","toFixed"],"sources":["D:/Fitness WebApp/client/src/utils/poseDetectionFrontend.js"],"sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\r\nimport * as posedetection from \"@tensorflow-models/pose-detection\";\r\nimport \"@tensorflow/tfjs-backend-webgl\";\r\n\r\nlet detector;\r\n\r\n// let audio = {\r\n//   good: new Audio(\"/audio/good.mp3\"),\r\n//   bad: new Audio(\"/audio/bad.mp3\"),\r\n// };\r\n\r\nexport async function loadModel() {\r\n  await tf.setBackend(\"webgl\");\r\n  await tf.ready();\r\n  detector = await posedetection.createDetector(\r\n    posedetection.SupportedModels.MoveNet,\r\n    {\r\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\r\n    }\r\n  );\r\n}\r\n\r\nlet lastSpokenTime = 0;\r\nlet cooldown = 1000; // 1 second cooldown to prevent overlap\r\n\r\nfunction speakFeedback(msg) {\r\n  const now = Date.now();\r\n\r\n  // Prevent overlapping or repeating too fast\r\n  if (now - lastSpokenTime < cooldown) return;\r\n  lastSpokenTime = now;\r\n\r\n  // Cancel any ongoing speech\r\n  window.speechSynthesis.cancel();\r\n\r\n  const speech = new SpeechSynthesisUtterance(msg);\r\n  speech.volume = 1;\r\n  speech.pitch = 1;\r\n  speech.rate = 1;\r\n  window.speechSynthesis.speak(speech);\r\n}\r\n\r\n// Helper to get x/y of a keypoint\r\nfunction getXY(keypoints, name) {\r\n  const kp = keypoints.find((k) => k.name === name);\r\n  return { x: kp?.x || 0, y: kp?.y || 0, score: kp?.score || 0 };\r\n}\r\n\r\n// Basic keypoint reliability check\r\nfunction isReliable(kp, threshold = 0.5) {\r\n  return kp.score >= threshold;\r\n}\r\n\r\n// Exercise handlers\r\nconst exerciseHandlers = {\r\n  squat: (k, state) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    const knee = getXY(k, \"left_knee\");\r\n\r\n    if (!isReliable(hip) || !isReliable(knee)) return {};\r\n\r\n    const hipAboveKnee = hip.y < knee.y + 10;\r\n    const hipBelowKnee = hip.y > knee.y + 30;\r\n\r\n    // Going down\r\n    if (!state.down) {\r\n      if (hipBelowKnee) {\r\n        state.downCount = (state.downCount || 0) + 1;\r\n        if (state.downCount > 4) {\r\n          state.down = true;\r\n          state.downCount = 0;\r\n          speakFeedback(\"Good job!\");\r\n          return { feedback: \"Good squat depth!\", repCounted: false };\r\n        }\r\n      } else {\r\n        state.downCount = 0;\r\n        return { feedback: \"Go deeper!\", scorePenalty: 5 };\r\n      }\r\n    }\r\n\r\n    // Coming up\r\n    else {\r\n      if (hipAboveKnee) {\r\n        state.upCount = (state.upCount || 0) + 1;\r\n        if (state.upCount > 4) {\r\n          state.down = false;\r\n          state.upCount = 0;\r\n          speakFeedback(\"Squat counted!\");\r\n          return { feedback: \"Squat counted!\", repCounted: true };\r\n        }\r\n      } else {\r\n        state.upCount = 0;\r\n      }\r\n    }\r\n\r\n    return {};\r\n  },\r\n\r\n  jump: (k, state) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    if (!isReliable(hip)) return {};\r\n\r\n    if (state.prevHipY == null) state.prevHipY = hip.y;\r\n\r\n    const jumpHeight = state.prevHipY - hip.y;\r\n    const jumpUp = jumpHeight > 20;\r\n    const weakJump = jumpHeight > 5 && jumpHeight <= 20; // Low effort jump\r\n    const land = hip.y - state.prevHipY > 10;\r\n\r\n    // Weak jump form penalty\r\n    if (!state.jumping && weakJump) {\r\n      speakFeedback(\"Jump higher!\");\r\n      return {\r\n        feedback: \"Jump higher!\",\r\n        scorePenalty: 5,\r\n        repCounted: false,\r\n      };\r\n    }\r\n\r\n    // Good jump detected\r\n    if (!state.jumping && jumpUp) {\r\n      state.jumping = true;\r\n      speakFeedback(\"Nice jump!\");\r\n      return { feedback: \"Nice jump!\" };\r\n    }\r\n\r\n    // Landing after jump\r\n    if (state.jumping && land) {\r\n      state.jumping = false;\r\n      speakFeedback(\"Jump counted!\");\r\n      return { feedback: \"Jump counted!\", repCounted: true };\r\n    }\r\n\r\n    state.prevHipY = hip.y;\r\n    return {};\r\n  },\r\n\r\n  pushup: (k, state) => {\r\n    const shoulder = getXY(k, \"left_shoulder\");\r\n    const elbow = getXY(k, \"left_elbow\");\r\n    if (!isReliable(shoulder) || !isReliable(elbow)) return {};\r\n\r\n    if (!state.down) {\r\n      if (shoulder.y > elbow.y + 20) {\r\n        state.downCount = (state.downCount || 0) + 1;\r\n        if (state.downCount > 4) {\r\n          state.down = true;\r\n          speakFeedback(\"Good pushup depth!\");\r\n          return { feedback: \"Good pushup depth!\", repCounted: false };\r\n        }\r\n      } else {\r\n        return { feedback: \"Lower your chest!\", scorePenalty: 5 };\r\n      }\r\n    } else {\r\n      if (shoulder.y < elbow.y + 10) {\r\n        state.upCount = (state.upCount || 0) + 1;\r\n        if (state.upCount > 4) {\r\n          state.down = false;\r\n          speakFeedback(\"Pushup counted!\");\r\n          return { feedback: \"Pushup counted!\", repCounted: true };\r\n        }\r\n      }\r\n    }\r\n\r\n    return {};\r\n  },\r\n\r\n  plank: (k) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    const shoulder = getXY(k, \"left_shoulder\");\r\n    if (!isReliable(hip) || !isReliable(shoulder)) return {};\r\n\r\n    const diff = Math.abs(hip.y - shoulder.y);\r\n    if (diff > 40) {\r\n      speakFeedback(\"Keep your back straight!\");\r\n      return { feedback: \"Keep your back straight!\", scorePenalty: 5 };\r\n    }\r\n\r\n    return { feedback: \"Hold steady!\", repCounted: false };\r\n  },\r\n};\r\nlet lastStandInViewTime = 0;\r\nexport async function startPoseDetection(\r\n  videoElement,\r\n  exercise,\r\n  targetReps,\r\n  feedbackCallback = null,\r\n  userInfo\r\n) {\r\n  if (!detector) await loadModel();\r\n\r\n  if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\r\n    await new Promise((resolve) => {\r\n      const checkReady = () => {\r\n        if (videoElement.videoWidth > 0 && videoElement.videoHeight > 0) {\r\n          resolve();\r\n        } else {\r\n          requestAnimationFrame(checkReady); // Keep checking\r\n        }\r\n      };\r\n      videoElement.onloadedmetadata = checkReady;\r\n      checkReady();\r\n    });\r\n  }\r\n\r\n  const canvas = document.createElement(\"canvas\");\r\n  canvas.width = videoElement.videoWidth;\r\n  canvas.height = videoElement.videoHeight;\r\n  document.body.appendChild(canvas);\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  let totalScore = 100;\r\n  let badFormCount = 0;\r\n  let repCount = 0;\r\n  const state = {};\r\n  const MET_VALUES = {\r\n    pushup: 8,\r\n    squat: 7,\r\n    plank: 5,\r\n    jumping_jack: 8,\r\n    // add more as needed\r\n  };\r\n  let workoutComplete = false; // ✅ Add flag to stop detection\r\n\r\n  const workoutStartTime = Date.now();\r\n\r\n  return new Promise((resolve) => {\r\n    const timeout = setTimeout(() => {\r\n      document.body.removeChild(canvas);\r\n      return resolve(null);\r\n    }, 300000);\r\n\r\n    const detect = async () => {\r\n      if (workoutComplete) return; // ✅ Stop further frames\r\n\r\n      const poses = await detector.estimatePoses(videoElement);\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.font = \"20px Arial\";\r\n      if (\r\n        !poses ||\r\n        !Array.isArray(poses) ||\r\n        poses.length === 0 ||\r\n        !poses[0]?.keypoints ||\r\n        poses[0].keypoints.length === 0\r\n      ) {\r\n        ctx.fillStyle = \"red\";\r\n\r\n        const now = Date.now();\r\n        if (now - lastStandInViewTime > 4000) {\r\n          lastStandInViewTime = now;\r\n        }\r\n\r\n        requestAnimationFrame(detect);\r\n        return;\r\n      }\r\n\r\n      const pose = poses[0];\r\n\r\n      const handler = exerciseHandlers[exercise];\r\n      if (!handler) throw new Error(\"Unsupported exercise: \" + exercise);\r\n\r\n      const result = handler(pose.keypoints, state);\r\n\r\n      if (result.feedback) {\r\n        ctx.fillStyle = result.scorePenalty ? \"red\" : \"green\";\r\n        ctx.fillText(result.feedback, 10, 30);\r\n        speakFeedback(result.feedback);\r\n      }\r\n\r\n      if (result.scorePenalty) {\r\n        totalScore -= result.scorePenalty;\r\n        badFormCount++;\r\n      }\r\n\r\n      if (result.repCounted) {\r\n        repCount++;\r\n        speakFeedback(`Rep ${repCount} completed!`);\r\n      }\r\n\r\n      if (typeof feedbackCallback === \"function\") {\r\n        feedbackCallback({\r\n          reps: repCount,\r\n          formFeedback: result.feedback,\r\n        });\r\n      }\r\n\r\n      if (repCount >= targetReps) {\r\n        workoutComplete = true; // ✅ Set flag to stop further detection\r\n        clearTimeout(timeout);\r\n        document.body.removeChild(canvas);\r\n\r\n        window.speechSynthesis.cancel();\r\n\r\n        const workoutEndTime = Date.now();\r\n        const durationMinutes = (workoutEndTime - workoutStartTime) / 60000;\r\n\r\n        let rawAccuracy = ((targetReps - badFormCount) / targetReps) * 100;\r\n        let adjustedAccuracy = Math.max(30, Math.min(rawAccuracy, 95)); // clamp between 30 and 95\r\n\r\n        let level = \"\";\r\n        if (adjustedAccuracy < 40) level = \"Very Weak\";\r\n        else if (adjustedAccuracy < 60) level = \"Weak\";\r\n        else if (adjustedAccuracy < 80) level = \"Medium\";\r\n        else level = \"Fully Jump\";\r\n\r\n        // Calories calculation with gender factor\r\n        const genderFactor =\r\n          userInfo?.gender?.toLowerCase() === \"male\" ? 1 : 0.95;\r\n        const met = MET_VALUES[exercise.toLowerCase()] || 6;\r\n        const caloriesBurned =\r\n          met *\r\n          (userInfo?.weight || 70) *\r\n          (durationMinutes / 60) *\r\n          genderFactor;\r\n\r\n        return resolve({\r\n          score: Math.max(0, totalScore),\r\n          accuracy: Math.floor(adjustedAccuracy),\r\n          xp: Math.floor(Math.max(0, totalScore * 0.8)),\r\n          feedback:\r\n            badFormCount > 0 ? \"Try better form next time!\" : \"Perfect form!\",\r\n          reps: repCount,\r\n          badFormCount,\r\n          calories: caloriesBurned.toFixed(2),\r\n          durationMinutes: durationMinutes.toFixed(2),\r\n        });\r\n      }\r\n\r\n      requestAnimationFrame(detect);\r\n    };\r\n\r\n    detect();\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}