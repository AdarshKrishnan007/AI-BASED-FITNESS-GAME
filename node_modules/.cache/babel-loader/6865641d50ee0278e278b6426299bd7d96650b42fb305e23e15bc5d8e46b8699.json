{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fitness WebApp\\\\client\\\\src\\\\pages\\\\Leaderboard\\\\Leaderboard.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleLeaderboard = [{\n  id: 1,\n  name: \"Adarsh\",\n  score: 1200,\n  level: 10,\n  xp: 4500\n}, {\n  id: 2,\n  name: \"Bob\",\n  score: 1100,\n  level: 9,\n  xp: 3900\n}, {\n  id: 3,\n  name: \"Charlie\",\n  score: 900,\n  level: 8,\n  xp: 3200\n}];\n\n// Dynamically determine badge\nconst getBadge = (rank, user) => {\n  if (rank === 0) return \"üèÜ Champion\";\n  if (rank === 1) return \"ü•á Top Performer\";\n  if (rank === 2) return \"‚ö°Ô∏è Hard Charger\";\n  if (user.xp >= 1000 && user.xp < 4000) return \"üéØ XP Grinder\";\n  if (user.xp >= 4000) return \"üî• Streak Master\";\n  return \"üéñÔ∏è Member\";\n};\nconst Leaderboard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.heading,\n        children: \"\\uD83C\\uDFC5 Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: styles.th,\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: styles.th,\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: styles.th,\n              children: \"Badge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: styles.th,\n              children: \"Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: styles.th,\n              children: \"XP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: styles.th,\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sampleLeaderboard.map((user, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: styles.tr,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: idx + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: getBadge(idx, user)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: [\"Lv. \", user.level]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: [user.xp, \" XP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: user.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Leaderboard;\nconst styles = {\n  wrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: \"40px\"\n  },\n  card: {\n    width: \"100%\",\n    maxWidth: \"900px\",\n    backgroundColor: \"#fff\",\n    borderRadius: \"12px\",\n    boxShadow: \"0 6px 18px rgba(0, 0, 0, 0.1)\",\n    padding: \"24px\",\n    marginTop: \"90px\"\n  },\n  heading: {\n    fontSize: \"28px\",\n    textAlign: \"center\",\n    marginBottom: \"24px\",\n    color: \"#333\"\n  },\n  table: {\n    width: \"100%\",\n    borderCollapse: \"collapse\"\n  },\n  th: {\n    textAlign: \"left\",\n    padding: \"12px\",\n    borderBottom: \"2px solid #e0e0e0\",\n    fontWeight: \"600\",\n    color: \"#555\"\n  },\n  tr: {\n    borderBottom: \"1px solid #eee\"\n  },\n  td: {\n    padding: \"12px\",\n    color: \"#333\"\n  }\n};\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","sampleLeaderboard","id","name","score","level","xp","getBadge","rank","user","Leaderboard","style","styles","wrapper","children","card","heading","fileName","_jsxFileName","lineNumber","columnNumber","table","th","map","idx","tr","td","_c","display","justifyContent","padding","width","maxWidth","backgroundColor","borderRadius","boxShadow","marginTop","fontSize","textAlign","marginBottom","color","borderCollapse","borderBottom","fontWeight","$RefreshReg$"],"sources":["D:/Fitness WebApp/client/src/pages/Leaderboard/Leaderboard.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst sampleLeaderboard = [\r\n  { id: 1, name: \"Adarsh\", score: 1200, level: 10, xp: 4500 },\r\n  { id: 2, name: \"Bob\", score: 1100, level: 9, xp: 3900 },\r\n  { id: 3, name: \"Charlie\", score: 900, level: 8, xp: 3200 },\r\n];\r\n\r\n// Dynamically determine badge\r\nconst getBadge = (rank, user) => {\r\n  if (rank === 0) return \"üèÜ Champion\";\r\n  if (rank === 1) return \"ü•á Top Performer\";\r\n  if (rank === 2) return \"‚ö°Ô∏è Hard Charger\";\r\n  if (user.xp >= 1000 && user.xp < 4000) return \"üéØ XP Grinder\";\r\n  if (user.xp >= 4000) return \"üî• Streak Master\";\r\n  return \"üéñÔ∏è Member\";\r\n};\r\n\r\nconst Leaderboard = () => {\r\n  return (\r\n    <div style={styles.wrapper}>\r\n      <div style={styles.card}>\r\n        <h2 style={styles.heading}>üèÖ Leaderboard</h2>\r\n        <table style={styles.table}>\r\n          <thead>\r\n            <tr>\r\n              <th style={styles.th}>Rank</th>\r\n              <th style={styles.th}>Name</th>\r\n              <th style={styles.th}>Badge</th>\r\n              <th style={styles.th}>Level</th>\r\n              <th style={styles.th}>XP</th>\r\n              <th style={styles.th}>Score</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sampleLeaderboard.map((user, idx) => (\r\n              <tr key={user.id} style={styles.tr}>\r\n                <td style={styles.td}>{idx + 1}</td>\r\n                <td style={styles.td}>{user.name}</td>\r\n                <td style={styles.td}>{getBadge(idx, user)}</td>\r\n                <td style={styles.td}>Lv. {user.level}</td>\r\n                <td style={styles.td}>{user.xp} XP</td>\r\n                <td style={styles.td}>{user.score}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: \"40px\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: \"900px\",\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"12px\",\r\n    boxShadow: \"0 6px 18px rgba(0, 0, 0, 0.1)\",\r\n    padding: \"24px\",\r\n    marginTop: \"90px\",\r\n  },\r\n  heading: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    marginBottom: \"24px\",\r\n    color: \"#333\",\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    borderCollapse: \"collapse\",\r\n  },\r\n  th: {\r\n    textAlign: \"left\",\r\n    padding: \"12px\",\r\n    borderBottom: \"2px solid #e0e0e0\",\r\n    fontWeight: \"600\",\r\n    color: \"#555\",\r\n  },\r\n  tr: {\r\n    borderBottom: \"1px solid #eee\",\r\n  },\r\n  td: {\r\n    padding: \"12px\",\r\n    color: \"#333\",\r\n  },\r\n};\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}