{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fitness WebApp\\\\client\\\\src\\\\pages\\\\AdventureMap\\\\AdventureMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./AdventureMap.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst exerciseTypes = [\"jump\", \"squat\", \"pushup\", \"plank\"];\nconst levelIcons = {\n  jump: \"🦘\",\n  squat: \"🧍\",\n  pushup: \"💪\",\n  plank: \"🤸\"\n};\nconst totalLevels = 30;\nconst levelsPerPage = 12;\nconst levels = Array.from({\n  length: totalLevels\n}, (_, i) => {\n  const id = i + 1;\n  const exercise = exerciseTypes[i % exerciseTypes.length];\n  const reps = 5 + Math.floor(i / 3) * 5;\n  const name = `Level ${id}`;\n  const description = `${exercise.charAt(0).toUpperCase() + exercise.slice(1)} ${reps} times`;\n  return {\n    id,\n    name,\n    description,\n    reps,\n    exercise,\n    icon: levelIcons[exercise]\n  };\n});\nconst AdventureMap = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const unlockedLevels = parseInt(localStorage.getItem(\"unlockedLevels\")) || 1;\n  const navigate = useNavigate();\n  const totalPages = Math.ceil(totalLevels / levelsPerPage);\n  const startIndex = (currentPage - 1) * levelsPerPage;\n  const currentLevels = levels.slice(startIndex, startIndex + levelsPerPage);\n  const handleLevelSelect = level => {\n    if (level.id <= unlockedLevels) {\n      navigate(\"/select-workout\", {\n        state: {\n          levelId: level.id,\n          levelName: level.name,\n          exercise: level.exercise,\n          targetReps: level.reps\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap\",\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), \"return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"map-title\",\n          children: \"Choose Your Adventure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-grid\",\n          children: currentLevels.map(level => {\n            const isUnlocked = level.id <= unlockedLevels;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `level-card ${isUnlocked ? \"unlocked\" : \"locked\"}`,\n              onClick: () => handleLevelSelect(level),\n              disabled: !isUnlocked,\n              title: isUnlocked ? level.description : \"Locked\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"level-icon\",\n                children: level.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"level-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"level-name\",\n                  children: level.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"level-desc\",\n                  children: level.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, level.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentPage(p => Math.max(p - 1, 1)),\n            disabled: currentPage === 1,\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Page \", currentPage, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentPage(p => Math.min(p + 1, totalPages)),\n            disabled: currentPage === totalPages,\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), \");\"]\n  }, void 0, true);\n};\n_s(AdventureMap, \"zfQbqBh1po7AH3d/szKbcEQ8zVw=\", false, function () {\n  return [useNavigate];\n});\n_c = AdventureMap;\nexport default AdventureMap;\nvar _c;\n$RefreshReg$(_c, \"AdventureMap\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","exerciseTypes","levelIcons","jump","squat","pushup","plank","totalLevels","levelsPerPage","levels","Array","from","length","_","i","id","exercise","reps","Math","floor","name","description","charAt","toUpperCase","slice","icon","AdventureMap","_s","currentPage","setCurrentPage","unlockedLevels","parseInt","localStorage","getItem","navigate","totalPages","ceil","startIndex","currentLevels","handleLevelSelect","level","state","levelId","levelName","targetReps","children","href","rel","fileName","_jsxFileName","lineNumber","columnNumber","className","map","isUnlocked","onClick","disabled","title","p","max","min","_c","$RefreshReg$"],"sources":["D:/Fitness WebApp/client/src/pages/AdventureMap/AdventureMap.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./AdventureMap.css\";\r\n\r\nconst exerciseTypes = [\"jump\", \"squat\", \"pushup\", \"plank\"];\r\nconst levelIcons = {\r\n  jump: \"🦘\",\r\n  squat: \"🧍\",\r\n  pushup: \"💪\",\r\n  plank: \"🤸\",\r\n};\r\n\r\nconst totalLevels = 30;\r\nconst levelsPerPage = 12;\r\n\r\nconst levels = Array.from({ length: totalLevels }, (_, i) => {\r\n  const id = i + 1;\r\n  const exercise = exerciseTypes[i % exerciseTypes.length];\r\n  const reps = 5 + Math.floor(i / 3) * 5;\r\n  const name = `Level ${id}`;\r\n  const description = `${\r\n    exercise.charAt(0).toUpperCase() + exercise.slice(1)\r\n  } ${reps} times`;\r\n\r\n  return {\r\n    id,\r\n    name,\r\n    description,\r\n    reps,\r\n    exercise,\r\n    icon: levelIcons[exercise],\r\n  };\r\n});\r\n\r\nconst AdventureMap = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const unlockedLevels = parseInt(localStorage.getItem(\"unlockedLevels\")) || 1;\r\n  const navigate = useNavigate();\r\n\r\n  const totalPages = Math.ceil(totalLevels / levelsPerPage);\r\n  const startIndex = (currentPage - 1) * levelsPerPage;\r\n  const currentLevels = levels.slice(startIndex, startIndex + levelsPerPage);\r\n\r\n  const handleLevelSelect = (level) => {\r\n    if (level.id <= unlockedLevels) {\r\n      navigate(\"/select-workout\", {\r\n        state: {\r\n          levelId: level.id,\r\n          levelName: level.name,\r\n          exercise: level.exercise,\r\n          targetReps: level.reps,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap\"\r\n        rel=\"stylesheet\"\r\n      />\r\n      return (\r\n      <div className=\"map-wrapper\">\r\n        <div className=\"map-container\">\r\n          <h2 className=\"map-title\">Choose Your Adventure</h2>\r\n\r\n          <div className=\"level-grid\">\r\n            {currentLevels.map((level) => {\r\n              const isUnlocked = level.id <= unlockedLevels;\r\n              return (\r\n                <button\r\n                  key={level.id}\r\n                  className={`level-card ${isUnlocked ? \"unlocked\" : \"locked\"}`}\r\n                  onClick={() => handleLevelSelect(level)}\r\n                  disabled={!isUnlocked}\r\n                  title={isUnlocked ? level.description : \"Locked\"}\r\n                >\r\n                  <div className=\"level-icon\">{level.icon}</div>\r\n                  <div className=\"level-info\">\r\n                    <span className=\"level-name\">{level.name}</span>\r\n                    <small className=\"level-desc\">{level.description}</small>\r\n                  </div>\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"pagination\">\r\n            <button\r\n              onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n              disabled={currentPage === 1}\r\n            >\r\n              &lt;\r\n            </button>\r\n            <span>\r\n              Page {currentPage} of {totalPages}\r\n            </span>\r\n            <button\r\n              onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              &gt;\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      );\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdventureMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}