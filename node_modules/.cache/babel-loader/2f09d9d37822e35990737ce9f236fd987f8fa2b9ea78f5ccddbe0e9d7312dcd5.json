{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fitness WebApp\\\\client\\\\src\\\\pages\\\\Chatbot\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport foodDB from \"./data/foodDB.json\";\nimport vegFoodDB from \"./data/vegetarianFoodDB.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    from: \"bot\",\n    text: \"Hi! What did you eat today? I’ll help track your nutrition.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [foodLog, setFoodLog] = useState([]);\n  const [dietType, setDietType] = useState(\"non-veg\"); // new toggle\n  const chatEndRef = useRef(null);\n  const userDetails = {\n    age: 25,\n    weight: 70,\n    height: 170,\n    goal: \"weight_loss\"\n  };\n  const calculateUserGoal = ({\n    age,\n    weight,\n    height,\n    goal\n  }) => {\n    const bmr = 10 * weight + 6.25 * height - 5 * age + 5;\n    let calories = bmr;\n    if (goal === \"weight_gain\") calories += 300;else if (goal === \"weight_loss\") calories -= 500;\n    return {\n      calories: Math.round(calories),\n      protein: Math.round(weight * 1.6),\n      carbs: Math.round(weight * 2.5),\n      fat: Math.round(weight * 1)\n    };\n  };\n  const userGoal = calculateUserGoal(userDetails);\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      from: \"user\",\n      text: input\n    };\n    setMessages(msgs => [...msgs, userMessage]);\n    setInput(\"\");\n    setTimeout(() => {\n      const response = getBotResponse(input);\n      setMessages(msgs => [...msgs, {\n        from: \"bot\",\n        text: response\n      }]);\n    }, 600);\n  };\n  const getBotResponse = input => {\n    const db = dietType === \"veg\" ? vegFoodDB : foodDB;\n    const items = input.toLowerCase().split(/,|\\band\\b|\\n/).map(i => i.trim());\n    let found = [];\n    let total = {\n      calories: 0,\n      protein: 0,\n      carbs: 0,\n      fat: 0\n    };\n    items.forEach(item => {\n      for (let key in db) {\n        if (item.includes(key)) {\n          found.push(key);\n          const data = db[key];\n          total.calories += data.calories;\n          total.protein += data.protein;\n          total.carbs += data.carbs;\n          total.fat += data.fat;\n        }\n      }\n    });\n    if (found.length === 0) return \"❗ I couldn't recognize any food items. Try common items like rice, dosa, banana.\";\n    setFoodLog(prev => [...prev, ...found]);\n    const deficit = {\n      calories: userGoal.calories - total.calories,\n      protein: userGoal.protein - total.protein,\n      carbs: userGoal.carbs - total.carbs,\n      fat: userGoal.fat - total.fat\n    };\n    let suggestion = \"\";\n    if (deficit.protein > 20) suggestion += \"\\n\\n🟡 You’re low on protein. Try paneer, dal, or nuts.\";\n    if (deficit.calories > 300) suggestion += \"\\n\\n🟡 Add calorie-rich foods like bananas, rice, smoothies.\";\n    if (deficit.carbs > 50) suggestion += \"\\n\\n🟡 Need more carbs? Include dosa, idli, puttu, or fruits.\";\n    return `✅ Here's your macro breakdown:\\n` + `Calories: ${total.calories.toFixed(0)} kcal\\n` + `Protein: ${total.protein.toFixed(1)}g\\n` + `Carbs: ${total.carbs.toFixed(1)}g\\n` + `Fat: ${total.fat.toFixed(1)}g` + suggestion + \"\\n\\n🍽️ Let me know what else you ate!\";\n  };\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.heading,\n        children: \"\\uD83E\\uDD57 Nutrition Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dietSelect\",\n          children: \"Diet Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"dietSelect\",\n          value: dietType,\n          onChange: e => setDietType(e.target.value),\n          style: {\n            padding: \"5px 10px\",\n            borderRadius: \"6px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"veg\",\n            children: \"Vegetarian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"non-veg\",\n            children: \"Non-Vegetarian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.chatWindow,\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...styles.message,\n            alignSelf: msg.from === \"user\" ? \"flex-end\" : \"flex-start\",\n            backgroundColor: msg.from === \"user\" ? \"#007bff\" : \"#e0e0e0\",\n            color: msg.from === \"user\" ? \"#fff\" : \"#000\"\n          },\n          children: msg.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputArea,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"E.g. idli, rice and sambar...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend(),\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          style: styles.sendButton,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"JFsHLo0kAxt1UMWl269V0a1rlZw=\");\n_c = Chatbot;\nconst styles = {\n  wrapper: {\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: \"50px\",\n    padding: \"20px\"\n  },\n  card: {\n    backgroundColor: \"#fff\",\n    padding: \"24px\",\n    borderRadius: \"16px\",\n    boxShadow: \"0 6px 20px rgba(0,0,0,0.1)\",\n    width: \"100%\",\n    maxWidth: \"500px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"80vh\"\n  },\n  heading: {\n    textAlign: \"center\",\n    marginBottom: \"16px\",\n    fontSize: \"22px\",\n    color: \"#333\"\n  },\n  chatWindow: {\n    flex: 1,\n    padding: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"12px\",\n    overflowY: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\",\n    backgroundColor: \"#fafafa\",\n    marginBottom: \"12px\"\n  },\n  message: {\n    maxWidth: \"75%\",\n    padding: \"10px 14px\",\n    borderRadius: \"20px\",\n    fontSize: \"15px\",\n    lineHeight: \"1.4\"\n  },\n  inputArea: {\n    display: \"flex\",\n    gap: \"10px\"\n  },\n  input: {\n    flex: 1,\n    padding: \"10px 12px\",\n    borderRadius: \"10px\",\n    border: \"1px solid #ccc\",\n    fontSize: \"15px\"\n  },\n  sendButton: {\n    padding: \"10px 16px\",\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"10px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\"\n  }\n};\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","foodDB","vegFoodDB","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","from","text","input","setInput","foodLog","setFoodLog","dietType","setDietType","chatEndRef","userDetails","age","weight","height","goal","calculateUserGoal","bmr","calories","Math","round","protein","carbs","fat","userGoal","handleSend","trim","userMessage","msgs","setTimeout","response","getBotResponse","db","items","toLowerCase","split","map","i","found","total","forEach","item","key","includes","push","data","length","prev","deficit","suggestion","toFixed","_chatEndRef$current","current","scrollIntoView","behavior","style","styles","wrapper","children","card","heading","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","textAlign","htmlFor","id","value","onChange","e","target","padding","borderRadius","chatWindow","msg","idx","message","alignSelf","backgroundColor","color","ref","inputArea","type","placeholder","onKeyDown","onClick","sendButton","_c","display","justifyContent","alignItems","marginTop","boxShadow","width","maxWidth","flexDirection","fontSize","flex","border","overflowY","gap","lineHeight","cursor","fontWeight","$RefreshReg$"],"sources":["D:/Fitness WebApp/client/src/pages/Chatbot/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport foodDB from \"./data/foodDB.json\";\r\nimport vegFoodDB from \"./data/vegetarianFoodDB.json\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      from: \"bot\",\r\n      text: \"Hi! What did you eat today? I’ll help track your nutrition.\",\r\n    },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [foodLog, setFoodLog] = useState([]);\r\n  const [dietType, setDietType] = useState(\"non-veg\"); // new toggle\r\n  const chatEndRef = useRef(null);\r\n\r\n  const userDetails = {\r\n    age: 25,\r\n    weight: 70,\r\n    height: 170,\r\n    goal: \"weight_loss\",\r\n  };\r\n\r\n  const calculateUserGoal = ({ age, weight, height, goal }) => {\r\n    const bmr = 10 * weight + 6.25 * height - 5 * age + 5;\r\n    let calories = bmr;\r\n    if (goal === \"weight_gain\") calories += 300;\r\n    else if (goal === \"weight_loss\") calories -= 500;\r\n\r\n    return {\r\n      calories: Math.round(calories),\r\n      protein: Math.round(weight * 1.6),\r\n      carbs: Math.round(weight * 2.5),\r\n      fat: Math.round(weight * 1),\r\n    };\r\n  };\r\n\r\n  const userGoal = calculateUserGoal(userDetails);\r\n\r\n  const handleSend = () => {\r\n    if (!input.trim()) return;\r\n    const userMessage = { from: \"user\", text: input };\r\n    setMessages((msgs) => [...msgs, userMessage]);\r\n    setInput(\"\");\r\n\r\n    setTimeout(() => {\r\n      const response = getBotResponse(input);\r\n      setMessages((msgs) => [...msgs, { from: \"bot\", text: response }]);\r\n    }, 600);\r\n  };\r\n\r\n  const getBotResponse = (input) => {\r\n    const db = dietType === \"veg\" ? vegFoodDB : foodDB;\r\n    const items = input\r\n      .toLowerCase()\r\n      .split(/,|\\band\\b|\\n/)\r\n      .map((i) => i.trim());\r\n    let found = [];\r\n    let total = { calories: 0, protein: 0, carbs: 0, fat: 0 };\r\n\r\n    items.forEach((item) => {\r\n      for (let key in db) {\r\n        if (item.includes(key)) {\r\n          found.push(key);\r\n          const data = db[key];\r\n          total.calories += data.calories;\r\n          total.protein += data.protein;\r\n          total.carbs += data.carbs;\r\n          total.fat += data.fat;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (found.length === 0)\r\n      return \"❗ I couldn't recognize any food items. Try common items like rice, dosa, banana.\";\r\n\r\n    setFoodLog((prev) => [...prev, ...found]);\r\n\r\n    const deficit = {\r\n      calories: userGoal.calories - total.calories,\r\n      protein: userGoal.protein - total.protein,\r\n      carbs: userGoal.carbs - total.carbs,\r\n      fat: userGoal.fat - total.fat,\r\n    };\r\n\r\n    let suggestion = \"\";\r\n    if (deficit.protein > 20)\r\n      suggestion += \"\\n\\n🟡 You’re low on protein. Try paneer, dal, or nuts.\";\r\n    if (deficit.calories > 300)\r\n      suggestion +=\r\n        \"\\n\\n🟡 Add calorie-rich foods like bananas, rice, smoothies.\";\r\n    if (deficit.carbs > 50)\r\n      suggestion +=\r\n        \"\\n\\n🟡 Need more carbs? Include dosa, idli, puttu, or fruits.\";\r\n\r\n    return (\r\n      `✅ Here's your macro breakdown:\\n` +\r\n      `Calories: ${total.calories.toFixed(0)} kcal\\n` +\r\n      `Protein: ${total.protein.toFixed(1)}g\\n` +\r\n      `Carbs: ${total.carbs.toFixed(1)}g\\n` +\r\n      `Fat: ${total.fat.toFixed(1)}g` +\r\n      suggestion +\r\n      \"\\n\\n🍽️ Let me know what else you ate!\"\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div style={styles.wrapper}>\r\n      <div style={styles.card}>\r\n        <h2 style={styles.heading}>🥗 Nutrition Chatbot</h2>\r\n\r\n        <div style={{ marginBottom: \"10px\", textAlign: \"center\" }}>\r\n          <label htmlFor=\"dietSelect\">Diet Type: </label>\r\n          <select\r\n            id=\"dietSelect\"\r\n            value={dietType}\r\n            onChange={(e) => setDietType(e.target.value)}\r\n            style={{ padding: \"5px 10px\", borderRadius: \"6px\" }}\r\n          >\r\n            <option value=\"veg\">Vegetarian</option>\r\n            <option value=\"non-veg\">Non-Vegetarian</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div style={styles.chatWindow}>\r\n          {messages.map((msg, idx) => (\r\n            <div\r\n              key={idx}\r\n              style={{\r\n                ...styles.message,\r\n                alignSelf: msg.from === \"user\" ? \"flex-end\" : \"flex-start\",\r\n                backgroundColor: msg.from === \"user\" ? \"#007bff\" : \"#e0e0e0\",\r\n                color: msg.from === \"user\" ? \"#fff\" : \"#000\",\r\n              }}\r\n            >\r\n              {msg.text}\r\n            </div>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </div>\r\n\r\n        <div style={styles.inputArea}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"E.g. idli, rice and sambar...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n            style={styles.input}\r\n          />\r\n          <button onClick={handleSend} style={styles.sendButton}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: \"50px\",\r\n    padding: \"20px\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"#fff\",\r\n    padding: \"24px\",\r\n    borderRadius: \"16px\",\r\n    boxShadow: \"0 6px 20px rgba(0,0,0,0.1)\",\r\n    width: \"100%\",\r\n    maxWidth: \"500px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"80vh\",\r\n  },\r\n  heading: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"16px\",\r\n    fontSize: \"22px\",\r\n    color: \"#333\",\r\n  },\r\n  chatWindow: {\r\n    flex: 1,\r\n    padding: \"10px\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"12px\",\r\n    overflowY: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"10px\",\r\n    backgroundColor: \"#fafafa\",\r\n    marginBottom: \"12px\",\r\n  },\r\n  message: {\r\n    maxWidth: \"75%\",\r\n    padding: \"10px 14px\",\r\n    borderRadius: \"20px\",\r\n    fontSize: \"15px\",\r\n    lineHeight: \"1.4\",\r\n  },\r\n  inputArea: {\r\n    display: \"flex\",\r\n    gap: \"10px\",\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: \"10px 12px\",\r\n    borderRadius: \"10px\",\r\n    border: \"1px solid #ccc\",\r\n    fontSize: \"15px\",\r\n  },\r\n  sendButton: {\r\n    padding: \"10px 16px\",\r\n    backgroundColor: \"#007bff\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    borderRadius: \"10px\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"bold\",\r\n  },\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}