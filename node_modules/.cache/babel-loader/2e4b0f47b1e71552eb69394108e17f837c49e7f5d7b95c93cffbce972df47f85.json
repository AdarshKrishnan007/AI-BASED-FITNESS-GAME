{"ast":null,"code":"import * as tf from \"@tensorflow/tfjs\";\nimport * as posedetection from \"@tensorflow-models/pose-detection\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nlet detector;\n\n// Define the skeleton connections between keypoints\nconst skeletonPairs = [[\"left_shoulder\", \"right_shoulder\"], [\"left_shoulder\", \"left_elbow\"], [\"left_elbow\", \"left_wrist\"], [\"right_shoulder\", \"right_elbow\"], [\"right_elbow\", \"right_wrist\"], [\"left_shoulder\", \"left_hip\"], [\"right_shoulder\", \"right_hip\"], [\"left_hip\", \"right_hip\"], [\"left_hip\", \"left_knee\"], [\"left_knee\", \"left_ankle\"], [\"right_hip\", \"right_knee\"], [\"right_knee\", \"right_ankle\"]];\n\n// Draw skeleton lines and keypoints on the canvas\nfunction drawSkeleton(ctx, keypoints, scaleX = 1, scaleY = 1) {\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = \"lime\";\n  for (const [kp1, kp2] of skeletonEdges) {\n    ctx.beginPath();\n    ctx.moveTo(kp1.x * scaleX, kp1.y * scaleY);\n    ctx.lineTo(kp2.x * scaleX, kp2.y * scaleY);\n    ctx.stroke();\n  }\n  for (const kp of keypoints) {\n    ctx.beginPath();\n    ctx.arc(kp.x * scaleX, kp.y * scaleY, 5, 0, 2 * Math.PI);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n  }\n}\nexport async function loadModel() {\n  await tf.setBackend(\"webgl\");\n  await tf.ready();\n  detector = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n    modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n  });\n}\nlet lastSpokenTime = 0;\nlet cooldown = 1000; // 1 second cooldown to prevent overlap\n\nfunction speakFeedback(msg) {\n  const now = Date.now();\n\n  // Prevent overlapping or repeating too fast\n  if (now - lastSpokenTime < cooldown) return;\n  lastSpokenTime = now;\n\n  // Cancel any ongoing speech\n  window.speechSynthesis.cancel();\n  const speech = new SpeechSynthesisUtterance(msg);\n  speech.volume = 1;\n  speech.pitch = 1;\n  speech.rate = 1;\n  window.speechSynthesis.speak(speech);\n}\n\n// Helper to get x/y of a keypoint\nfunction getXY(keypoints, name) {\n  const kp = keypoints.find(k => k.name === name);\n  return {\n    x: (kp === null || kp === void 0 ? void 0 : kp.x) || 0,\n    y: (kp === null || kp === void 0 ? void 0 : kp.y) || 0,\n    score: (kp === null || kp === void 0 ? void 0 : kp.score) || 0\n  };\n}\n\n// Basic keypoint reliability check\nfunction isReliable(kp, threshold = 0.5) {\n  return kp.score >= threshold;\n}\n\n// Exercise handlers\nconst exerciseHandlers = {\n  squat: (k, state) => {\n    const hip = getXY(k, \"left_hip\");\n    const knee = getXY(k, \"left_knee\");\n    if (!isReliable(hip) || !isReliable(knee)) return {};\n    const hipAboveKnee = hip.y < knee.y + 10;\n    const hipBelowKnee = hip.y > knee.y + 30;\n\n    // Going down\n    if (!state.down) {\n      if (hipBelowKnee) {\n        state.downCount = (state.downCount || 0) + 1;\n        if (state.downCount > 4) {\n          state.down = true;\n          state.downCount = 0;\n          speakFeedback(\"Good job!\");\n          return {\n            feedback: \"Good squat depth!\",\n            repCounted: false\n          };\n        }\n      } else {\n        state.downCount = 0;\n        return {\n          feedback: \"Go deeper!\",\n          scorePenalty: 5\n        };\n      }\n    }\n\n    // Coming up\n    else {\n      if (hipAboveKnee) {\n        state.upCount = (state.upCount || 0) + 1;\n        if (state.upCount > 4) {\n          state.down = false;\n          state.upCount = 0;\n          speakFeedback(\"Squat counted!\");\n          return {\n            feedback: \"Squat counted!\",\n            repCounted: true\n          };\n        }\n      } else {\n        state.upCount = 0;\n      }\n    }\n    return {};\n  },\n  jump: (k, state) => {\n    const hip = getXY(k, \"left_hip\");\n    if (!isReliable(hip)) return {};\n    if (state.prevHipY == null) state.prevHipY = hip.y;\n    const jumpHeight = state.prevHipY - hip.y;\n    const jumpUp = jumpHeight > 20;\n    const weakJump = jumpHeight > 5 && jumpHeight <= 20; // Low effort jump\n    const land = hip.y - state.prevHipY > 10;\n\n    // Weak jump form penalty\n    if (!state.jumping && weakJump) {\n      speakFeedback(\"Jump higher!\");\n      return {\n        feedback: \"Jump higher!\",\n        scorePenalty: 5,\n        repCounted: false\n      };\n    }\n\n    // Good jump detected\n    if (!state.jumping && jumpUp) {\n      state.jumping = true;\n      speakFeedback(\"Nice jump!\");\n      return {\n        feedback: \"Nice jump!\"\n      };\n    }\n\n    // Landing after jump\n    if (state.jumping && land) {\n      state.jumping = false;\n      speakFeedback(\"Jump counted!\");\n      return {\n        feedback: \"Jump counted!\",\n        repCounted: true\n      };\n    }\n    state.prevHipY = hip.y;\n    return {};\n  },\n  pushup: (k, state) => {\n    const shoulder = getXY(k, \"left_shoulder\");\n    const elbow = getXY(k, \"left_elbow\");\n    if (!isReliable(shoulder) || !isReliable(elbow)) return {};\n    if (!state.down) {\n      if (shoulder.y > elbow.y + 20) {\n        state.downCount = (state.downCount || 0) + 1;\n        if (state.downCount > 4) {\n          state.down = true;\n          speakFeedback(\"Good pushup depth!\");\n          return {\n            feedback: \"Good pushup depth!\",\n            repCounted: false\n          };\n        }\n      } else {\n        return {\n          feedback: \"Lower your chest!\",\n          scorePenalty: 5\n        };\n      }\n    } else {\n      if (shoulder.y < elbow.y + 10) {\n        state.upCount = (state.upCount || 0) + 1;\n        if (state.upCount > 4) {\n          state.down = false;\n          speakFeedback(\"Pushup counted!\");\n          return {\n            feedback: \"Pushup counted!\",\n            repCounted: true\n          };\n        }\n      }\n    }\n    return {};\n  },\n  plank: k => {\n    const hip = getXY(k, \"left_hip\");\n    const shoulder = getXY(k, \"left_shoulder\");\n    if (!isReliable(hip) || !isReliable(shoulder)) return {};\n    const diff = Math.abs(hip.y - shoulder.y);\n    if (diff > 40) {\n      speakFeedback(\"Keep your back straight!\");\n      return {\n        feedback: \"Keep your back straight!\",\n        scorePenalty: 5\n      };\n    }\n    return {\n      feedback: \"Hold steady!\",\n      repCounted: false\n    };\n  }\n};\nexport async function startPoseDetection(videoElement, exercise, targetReps, feedbackCallback = null, canvas) {\n  if (!detector) await loadModel();\n  if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\n    await new Promise(resolve => {\n      videoElement.onloadedmetadata = () => {\n        resolve();\n      };\n    });\n  }\n  canvas.width = videoElement.videoWidth;\n  canvas.height = videoElement.videoHeight;\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  let totalScore = 100;\n  let badFormCount = 0;\n  let repCount = 0;\n  const state = {};\n  let workoutComplete = false; // ✅ Add flag to stop detection\n\n  return new Promise(resolve => {\n    const timeout = setTimeout(() => {\n      document.body.removeChild(canvas);\n      return resolve(null);\n    }, 30000);\n    const detect = async () => {\n      if (workoutComplete) return; // ✅ Stop further frames\n\n      const poses = await detector.estimatePoses(videoElement);\n      const pose = poses[0];\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      if (!pose || !pose.keypoints || pose.keypoints.length === 0) {\n        ctx.fillStyle = \"red\";\n        ctx.font = \"20px Arial\";\n        ctx.fillText(\"Stand in view!\", 10, 30);\n        speakFeedback(\"Stand in view\");\n        requestAnimationFrame(detect);\n        return;\n      }\n\n      // Draw skeleton on canvas every frame\n      drawSkeleton(ctx, pose.keypoints);\n      const handler = exerciseHandlers[exercise];\n      if (!handler) throw new Error(\"Unsupported exercise: \" + exercise);\n      const result = handler(pose.keypoints, state);\n      if (result.feedback) {\n        ctx.fillStyle = result.scorePenalty ? \"red\" : \"green\";\n        ctx.font = \"20px Arial\";\n        ctx.fillText(result.feedback, 10, 30);\n        if (feedbackCallback) feedbackCallback(result.feedback);\n        if (result.scorePenalty) badFormCount++;\n        if (result.repCounted) repCount++;\n      }\n      if (repCount >= targetReps) {\n        workoutComplete = true;\n        clearTimeout(timeout);\n        document.body.removeChild(canvas);\n        resolve({\n          score: Math.max(0, totalScore - badFormCount * 10),\n          reps: repCount,\n          status: \"success\"\n        });\n        return;\n      }\n      requestAnimationFrame(detect);\n    };\n    detect();\n  });\n}","map":{"version":3,"names":["tf","posedetection","detector","skeletonPairs","drawSkeleton","ctx","keypoints","scaleX","scaleY","lineWidth","strokeStyle","kp1","kp2","skeletonEdges","beginPath","moveTo","x","y","lineTo","stroke","kp","arc","Math","PI","fillStyle","fill","loadModel","setBackend","ready","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","lastSpokenTime","cooldown","speakFeedback","msg","now","Date","window","speechSynthesis","cancel","speech","SpeechSynthesisUtterance","volume","pitch","rate","speak","getXY","name","find","k","score","isReliable","threshold","exerciseHandlers","squat","state","hip","knee","hipAboveKnee","hipBelowKnee","down","downCount","feedback","repCounted","scorePenalty","upCount","jump","prevHipY","jumpHeight","jumpUp","weakJump","land","jumping","pushup","shoulder","elbow","plank","diff","abs","startPoseDetection","videoElement","exercise","targetReps","feedbackCallback","canvas","videoWidth","videoHeight","Promise","resolve","onloadedmetadata","width","height","document","body","appendChild","getContext","totalScore","badFormCount","repCount","workoutComplete","timeout","setTimeout","removeChild","detect","poses","estimatePoses","pose","clearRect","length","font","fillText","requestAnimationFrame","handler","Error","result","clearTimeout","max","reps","status"],"sources":["D:/Fitness WebApp/client/src/utils/poseDetectionFrontend.js"],"sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\r\nimport * as posedetection from \"@tensorflow-models/pose-detection\";\r\nimport \"@tensorflow/tfjs-backend-webgl\";\r\n\r\nlet detector;\r\n\r\n// Define the skeleton connections between keypoints\r\nconst skeletonPairs = [\r\n  [\"left_shoulder\", \"right_shoulder\"],\r\n  [\"left_shoulder\", \"left_elbow\"],\r\n  [\"left_elbow\", \"left_wrist\"],\r\n  [\"right_shoulder\", \"right_elbow\"],\r\n  [\"right_elbow\", \"right_wrist\"],\r\n  [\"left_shoulder\", \"left_hip\"],\r\n  [\"right_shoulder\", \"right_hip\"],\r\n  [\"left_hip\", \"right_hip\"],\r\n  [\"left_hip\", \"left_knee\"],\r\n  [\"left_knee\", \"left_ankle\"],\r\n  [\"right_hip\", \"right_knee\"],\r\n  [\"right_knee\", \"right_ankle\"],\r\n];\r\n\r\n// Draw skeleton lines and keypoints on the canvas\r\nfunction drawSkeleton(ctx, keypoints, scaleX = 1, scaleY = 1) {\r\n  ctx.lineWidth = 2;\r\n  ctx.strokeStyle = \"lime\";\r\n\r\n  for (const [kp1, kp2] of skeletonEdges) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(kp1.x * scaleX, kp1.y * scaleY);\r\n    ctx.lineTo(kp2.x * scaleX, kp2.y * scaleY);\r\n    ctx.stroke();\r\n  }\r\n\r\n  for (const kp of keypoints) {\r\n    ctx.beginPath();\r\n    ctx.arc(kp.x * scaleX, kp.y * scaleY, 5, 0, 2 * Math.PI);\r\n    ctx.fillStyle = \"red\";\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nexport async function loadModel() {\r\n  await tf.setBackend(\"webgl\");\r\n  await tf.ready();\r\n  detector = await posedetection.createDetector(\r\n    posedetection.SupportedModels.MoveNet,\r\n    {\r\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\r\n    }\r\n  );\r\n}\r\n\r\nlet lastSpokenTime = 0;\r\nlet cooldown = 1000; // 1 second cooldown to prevent overlap\r\n\r\nfunction speakFeedback(msg) {\r\n  const now = Date.now();\r\n\r\n  // Prevent overlapping or repeating too fast\r\n  if (now - lastSpokenTime < cooldown) return;\r\n  lastSpokenTime = now;\r\n\r\n  // Cancel any ongoing speech\r\n  window.speechSynthesis.cancel();\r\n\r\n  const speech = new SpeechSynthesisUtterance(msg);\r\n  speech.volume = 1;\r\n  speech.pitch = 1;\r\n  speech.rate = 1;\r\n  window.speechSynthesis.speak(speech);\r\n}\r\n\r\n// Helper to get x/y of a keypoint\r\nfunction getXY(keypoints, name) {\r\n  const kp = keypoints.find((k) => k.name === name);\r\n  return { x: kp?.x || 0, y: kp?.y || 0, score: kp?.score || 0 };\r\n}\r\n\r\n// Basic keypoint reliability check\r\nfunction isReliable(kp, threshold = 0.5) {\r\n  return kp.score >= threshold;\r\n}\r\n\r\n// Exercise handlers\r\nconst exerciseHandlers = {\r\n  squat: (k, state) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    const knee = getXY(k, \"left_knee\");\r\n\r\n    if (!isReliable(hip) || !isReliable(knee)) return {};\r\n\r\n    const hipAboveKnee = hip.y < knee.y + 10;\r\n    const hipBelowKnee = hip.y > knee.y + 30;\r\n\r\n    // Going down\r\n    if (!state.down) {\r\n      if (hipBelowKnee) {\r\n        state.downCount = (state.downCount || 0) + 1;\r\n        if (state.downCount > 4) {\r\n          state.down = true;\r\n          state.downCount = 0;\r\n          speakFeedback(\"Good job!\");\r\n          return { feedback: \"Good squat depth!\", repCounted: false };\r\n        }\r\n      } else {\r\n        state.downCount = 0;\r\n        return { feedback: \"Go deeper!\", scorePenalty: 5 };\r\n      }\r\n    }\r\n\r\n    // Coming up\r\n    else {\r\n      if (hipAboveKnee) {\r\n        state.upCount = (state.upCount || 0) + 1;\r\n        if (state.upCount > 4) {\r\n          state.down = false;\r\n          state.upCount = 0;\r\n          speakFeedback(\"Squat counted!\");\r\n          return { feedback: \"Squat counted!\", repCounted: true };\r\n        }\r\n      } else {\r\n        state.upCount = 0;\r\n      }\r\n    }\r\n\r\n    return {};\r\n  },\r\n\r\n  jump: (k, state) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    if (!isReliable(hip)) return {};\r\n\r\n    if (state.prevHipY == null) state.prevHipY = hip.y;\r\n\r\n    const jumpHeight = state.prevHipY - hip.y;\r\n    const jumpUp = jumpHeight > 20;\r\n    const weakJump = jumpHeight > 5 && jumpHeight <= 20; // Low effort jump\r\n    const land = hip.y - state.prevHipY > 10;\r\n\r\n    // Weak jump form penalty\r\n    if (!state.jumping && weakJump) {\r\n      speakFeedback(\"Jump higher!\");\r\n      return {\r\n        feedback: \"Jump higher!\",\r\n        scorePenalty: 5,\r\n        repCounted: false,\r\n      };\r\n    }\r\n\r\n    // Good jump detected\r\n    if (!state.jumping && jumpUp) {\r\n      state.jumping = true;\r\n      speakFeedback(\"Nice jump!\");\r\n      return { feedback: \"Nice jump!\" };\r\n    }\r\n\r\n    // Landing after jump\r\n    if (state.jumping && land) {\r\n      state.jumping = false;\r\n      speakFeedback(\"Jump counted!\");\r\n      return { feedback: \"Jump counted!\", repCounted: true };\r\n    }\r\n\r\n    state.prevHipY = hip.y;\r\n    return {};\r\n  },\r\n\r\n  pushup: (k, state) => {\r\n    const shoulder = getXY(k, \"left_shoulder\");\r\n    const elbow = getXY(k, \"left_elbow\");\r\n    if (!isReliable(shoulder) || !isReliable(elbow)) return {};\r\n\r\n    if (!state.down) {\r\n      if (shoulder.y > elbow.y + 20) {\r\n        state.downCount = (state.downCount || 0) + 1;\r\n        if (state.downCount > 4) {\r\n          state.down = true;\r\n          speakFeedback(\"Good pushup depth!\");\r\n          return { feedback: \"Good pushup depth!\", repCounted: false };\r\n        }\r\n      } else {\r\n        return { feedback: \"Lower your chest!\", scorePenalty: 5 };\r\n      }\r\n    } else {\r\n      if (shoulder.y < elbow.y + 10) {\r\n        state.upCount = (state.upCount || 0) + 1;\r\n        if (state.upCount > 4) {\r\n          state.down = false;\r\n          speakFeedback(\"Pushup counted!\");\r\n          return { feedback: \"Pushup counted!\", repCounted: true };\r\n        }\r\n      }\r\n    }\r\n\r\n    return {};\r\n  },\r\n\r\n  plank: (k) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    const shoulder = getXY(k, \"left_shoulder\");\r\n    if (!isReliable(hip) || !isReliable(shoulder)) return {};\r\n\r\n    const diff = Math.abs(hip.y - shoulder.y);\r\n    if (diff > 40) {\r\n      speakFeedback(\"Keep your back straight!\");\r\n      return { feedback: \"Keep your back straight!\", scorePenalty: 5 };\r\n    }\r\n\r\n    return { feedback: \"Hold steady!\", repCounted: false };\r\n  },\r\n};\r\n\r\nexport async function startPoseDetection(\r\n  videoElement,\r\n  exercise,\r\n  targetReps,\r\n  feedbackCallback = null,\r\n  canvas\r\n) {\r\n  if (!detector) await loadModel();\r\n\r\n  if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\r\n    await new Promise((resolve) => {\r\n      videoElement.onloadedmetadata = () => {\r\n        resolve();\r\n      };\r\n    });\r\n  }\r\n\r\n  canvas.width = videoElement.videoWidth;\r\n  canvas.height = videoElement.videoHeight;\r\n  document.body.appendChild(canvas);\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  let totalScore = 100;\r\n  let badFormCount = 0;\r\n  let repCount = 0;\r\n  const state = {};\r\n  let workoutComplete = false; // ✅ Add flag to stop detection\r\n\r\n  return new Promise((resolve) => {\r\n    const timeout = setTimeout(() => {\r\n      document.body.removeChild(canvas);\r\n      return resolve(null);\r\n    }, 30000);\r\n\r\n    const detect = async () => {\r\n      if (workoutComplete) return; // ✅ Stop further frames\r\n\r\n      const poses = await detector.estimatePoses(videoElement);\r\n      const pose = poses[0];\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      if (!pose || !pose.keypoints || pose.keypoints.length === 0) {\r\n        ctx.fillStyle = \"red\";\r\n        ctx.font = \"20px Arial\";\r\n        ctx.fillText(\"Stand in view!\", 10, 30);\r\n        speakFeedback(\"Stand in view\");\r\n        requestAnimationFrame(detect);\r\n        return;\r\n      }\r\n\r\n      // Draw skeleton on canvas every frame\r\n      drawSkeleton(ctx, pose.keypoints);\r\n\r\n      const handler = exerciseHandlers[exercise];\r\n      if (!handler) throw new Error(\"Unsupported exercise: \" + exercise);\r\n\r\n      const result = handler(pose.keypoints, state);\r\n\r\n      if (result.feedback) {\r\n        ctx.fillStyle = result.scorePenalty ? \"red\" : \"green\";\r\n        ctx.font = \"20px Arial\";\r\n        ctx.fillText(result.feedback, 10, 30);\r\n\r\n        if (feedbackCallback) feedbackCallback(result.feedback);\r\n        if (result.scorePenalty) badFormCount++;\r\n        if (result.repCounted) repCount++;\r\n      }\r\n\r\n      if (repCount >= targetReps) {\r\n        workoutComplete = true;\r\n        clearTimeout(timeout);\r\n        document.body.removeChild(canvas);\r\n        resolve({\r\n          score: Math.max(0, totalScore - badFormCount * 10),\r\n          reps: repCount,\r\n          status: \"success\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      requestAnimationFrame(detect);\r\n    };\r\n\r\n    detect();\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}