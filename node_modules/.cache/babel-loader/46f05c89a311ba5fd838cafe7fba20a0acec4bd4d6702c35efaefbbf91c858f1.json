{"ast":null,"code":"import axiosInstance from \"./api\";\nconst workoutService = {\n  startLiveDetection: async exercise => {\n    const response = await axiosInstance.post(\"/start\", {\n      type: exercise\n    }, {\n      withCredentials: true // Important if using credentials\n    });\n    return response.data;\n  },\n  uploadVideoDetection: async (videoFile, exercise) => {\n    const formData = new FormData();\n    formData.append(\"video\", videoFile);\n    formData.append(\"exercise\", exercise);\n    const response = await axiosInstance.post(\"/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  },\n  logWorkout: async ({\n    user_id,\n    exercise,\n    level,\n    score,\n    xp,\n    completed\n  }) => {\n    const response = await axiosInstance.post(\"/workout/log\", {\n      user_id,\n      exercise,\n      level,\n      score,\n      xp,\n      completed\n    });\n    return response.data;\n  },\n  getTodayProgress: async () => {\n    const response = await axiosInstance.get(\"/workout/progress\");\n    return response.data;\n  }\n\n  // saveWorkoutResult: async ({ xp, accuracy, workoutType, level }) => {\n  //   const response = await axiosInstance.post(\"/workout/save\", {\n  //     xp,\n  //     accuracy,\n  //     workoutType,\n  //     level,\n  //   });\n  //   return response.data;\n  // },\n};\nexport default workoutService;","map":{"version":3,"names":["axiosInstance","workoutService","startLiveDetection","exercise","response","post","type","withCredentials","data","uploadVideoDetection","videoFile","formData","FormData","append","headers","logWorkout","user_id","level","score","xp","completed","getTodayProgress","get"],"sources":["D:/Fitness WebApp/client/src/services/workoutService.js"],"sourcesContent":["import axiosInstance from \"./api\";\r\n\r\nconst workoutService = {\r\n  startLiveDetection: async (exercise) => {\r\n    const response = await axiosInstance.post(\r\n      \"/start\",\r\n      {\r\n        type: exercise,\r\n      },\r\n      {\r\n        withCredentials: true, // Important if using credentials\r\n      }\r\n    );\r\n    return response.data;\r\n  },\r\n\r\n  uploadVideoDetection: async (videoFile, exercise) => {\r\n    const formData = new FormData();\r\n    formData.append(\"video\", videoFile);\r\n    formData.append(\"exercise\", exercise);\r\n\r\n    const response = await axiosInstance.post(\"/upload\", formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  logWorkout: async ({ user_id, exercise, level, score, xp, completed }) => {\r\n    const response = await axiosInstance.post(\"/workout/log\", {\r\n      user_id,\r\n      exercise,\r\n      level,\r\n      score,\r\n      xp,\r\n      completed,\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  getTodayProgress: async () => {\r\n    const response = await axiosInstance.get(\"/workout/progress\");\r\n    return response.data;\r\n  },\r\n\r\n  // saveWorkoutResult: async ({ xp, accuracy, workoutType, level }) => {\r\n  //   const response = await axiosInstance.post(\"/workout/save\", {\r\n  //     xp,\r\n  //     accuracy,\r\n  //     workoutType,\r\n  //     level,\r\n  //   });\r\n  //   return response.data;\r\n  // },\r\n};\r\n\r\nexport default workoutService;\r\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,OAAO;AAEjC,MAAMC,cAAc,GAAG;EACrBC,kBAAkB,EAAE,MAAOC,QAAQ,IAAK;IACtC,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CACvC,QAAQ,EACR;MACEC,IAAI,EAAEH;IACR,CAAC,EACD;MACEI,eAAe,EAAE,IAAI,CAAE;IACzB,CACF,CAAC;IACD,OAAOH,QAAQ,CAACI,IAAI;EACtB,CAAC;EAEDC,oBAAoB,EAAE,MAAAA,CAAOC,SAAS,EAAEP,QAAQ,KAAK;IACnD,MAAMQ,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAAC;IACnCC,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEV,QAAQ,CAAC;IAErC,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,SAAS,EAAEM,QAAQ,EAAE;MAC7DG,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACnD,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACI,IAAI;EACtB,CAAC;EAEDO,UAAU,EAAE,MAAAA,CAAO;IAAEC,OAAO;IAAEb,QAAQ;IAAEc,KAAK;IAAEC,KAAK;IAAEC,EAAE;IAAEC;EAAU,CAAC,KAAK;IACxE,MAAMhB,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,cAAc,EAAE;MACxDW,OAAO;MACPb,QAAQ;MACRc,KAAK;MACLC,KAAK;MACLC,EAAE;MACFC;IACF,CAAC,CAAC;IACF,OAAOhB,QAAQ,CAACI,IAAI;EACtB,CAAC;EAEDa,gBAAgB,EAAE,MAAAA,CAAA,KAAY;IAC5B,MAAMjB,QAAQ,GAAG,MAAMJ,aAAa,CAACsB,GAAG,CAAC,mBAAmB,CAAC;IAC7D,OAAOlB,QAAQ,CAACI,IAAI;EACtB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAED,eAAeP,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}