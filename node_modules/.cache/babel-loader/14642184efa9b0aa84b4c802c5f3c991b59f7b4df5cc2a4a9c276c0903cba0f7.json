{"ast":null,"code":"import * as tf from \"@tensorflow/tfjs\";\nimport * as posedetection from \"@tensorflow-models/pose-detection\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nlet detector;\nlet audio = {\n  good: new Audio(\"/audio/good.mp3\"),\n  bad: new Audio(\"/audio/bad.mp3\")\n};\nexport async function loadModel() {\n  await tf.setBackend(\"webgl\");\n  await tf.ready();\n  detector = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n    modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n  });\n}\nfunction getY(keypoints, name) {\n  var _keypoints$find;\n  return ((_keypoints$find = keypoints.find(k => k.name === name)) === null || _keypoints$find === void 0 ? void 0 : _keypoints$find.y) || 0;\n}\nfunction getX(keypoints, name) {\n  var _keypoints$find2;\n  return ((_keypoints$find2 = keypoints.find(k => k.name === name)) === null || _keypoints$find2 === void 0 ? void 0 : _keypoints$find2.x) || 0;\n}\nfunction speakFeedback(msg) {\n  const speech = new SpeechSynthesisUtterance(msg);\n  speech.volume = 1;\n  speech.pitch = 1;\n  speech.rate = 1;\n  window.speechSynthesis.speak(speech);\n}\nfunction isKeypointReliable(keypoints, name, threshold = 0.5) {\n  const kp = keypoints.find(k => k.name === name);\n  return kp && kp.score >= threshold;\n}\nfunction validateAndCount(pose, exercise, state) {\n  const k = pose.keypoints;\n  let feedback = \"\";\n  let scorePenalty = 0;\n  let repCounted = false;\n  if (!k || k.length === 0) return {\n    feedback,\n    scorePenalty,\n    repCounted\n  };\n\n  // Check reliability of keypoints needed for the exercise\n  const requiredKeypoints = {\n    squat: [\"left_hip\", \"left_knee\"],\n    pushup: [\"left_shoulder\", \"left_elbow\"],\n    jump: [\"left_hip\"],\n    plank: [\"left_hip\", \"left_shoulder\"]\n  };\n  for (const kpName of requiredKeypoints[exercise] || []) {\n    if (!isKeypointReliable(k, kpName)) {\n      return {\n        feedback: \"Make sure you're fully visible\",\n        scorePenalty: 0,\n        repCounted: false\n      };\n    }\n  }\n  const hipY = getY(k, \"left_hip\");\n  const kneeY = getY(k, \"left_knee\");\n  const shoulderY = getY(k, \"left_shoulder\");\n  const elbowY = getY(k, \"left_elbow\");\n\n  // Add debouncing counters to state if not present\n  state.downCount = state.downCount || 0;\n  state.upCount = state.upCount || 0;\n  state.jumpUpCount = state.jumpUpCount || 0;\n  state.jumpDownCount = state.jumpDownCount || 0;\n  switch (exercise) {\n    case \"squat\":\n      if (!state.down) {\n        // Detect going down\n        if (hipY > kneeY + 30) {\n          state.downCount++;\n          state.upCount = 0;\n          if (state.downCount >= 5) {\n            // hold down for 5 frames\n            state.down = true;\n            state.downCount = 0;\n            feedback = \"Good depth!\";\n            audio.good.play();\n          }\n        } else {\n          state.downCount = 0;\n          if (hipY < kneeY + 30 && hipY > kneeY + 10) {\n            feedback = \"Go deeper!\";\n            scorePenalty = 5;\n            audio.bad.play();\n          }\n        }\n      } else {\n        // Detect coming back up after down\n        if (hipY < kneeY + 10) {\n          state.upCount++;\n          if (state.upCount >= 5) {\n            // hold up for 5 frames\n            repCounted = true;\n            state.down = false;\n            state.upCount = 0;\n            feedback = \"Squat complete!\";\n            audio.good.play();\n          }\n        } else {\n          state.upCount = 0;\n        }\n      }\n      break;\n    case \"pushup\":\n      if (!state.down) {\n        if (shoulderY > elbowY + 20) {\n          state.downCount++;\n          state.upCount = 0;\n          if (state.downCount >= 5) {\n            state.down = true;\n            state.downCount = 0;\n            feedback = \"Good pushup depth!\";\n            audio.good.play();\n          }\n        } else {\n          state.downCount = 0;\n          if (shoulderY < elbowY + 20 && shoulderY > elbowY + 10) {\n            feedback = \"Lower your chest!\";\n            scorePenalty = 5;\n            audio.bad.play();\n          }\n        }\n      } else {\n        if (shoulderY < elbowY + 10) {\n          state.upCount++;\n          if (state.upCount >= 5) {\n            repCounted = true;\n            state.down = false;\n            state.upCount = 0;\n            feedback = \"Pushup complete!\";\n            audio.good.play();\n          }\n        } else {\n          state.upCount = 0;\n        }\n      }\n      break;\n    case \"jump\":\n      {\n        const jumpThreshold = 5; // Try 10–15 for best result\n\n        if (state.prevHipY !== null) {\n          const deltaY = state.prevHipY - hipY; // Positive when jumping up\n\n          // Jump upward detected\n          if (!state.jumping && deltaY > jumpThreshold) {\n            state.jumping = true;\n            feedback = \"Nice jump!\";\n            repCounted = false;\n            audio.good.play();\n          }\n\n          // Landing detected\n          if (state.jumping && deltaY < 5) {\n            repCounted = true;\n            state.jumping = false;\n            feedback = \"Jump counted!\";\n            audio.good.play();\n          }\n        }\n        state.prevHipY = hipY;\n        break;\n        console.log(\"HipY:\", hipY, \"PrevHipY:\", state.prevHipY, \"Jumping:\", state.jumping);\n      }\n    case \"plank\":\n      const diff = Math.abs(hipY - shoulderY);\n      if (diff > 40) {\n        feedback = \"Straighten your back!\";\n        scorePenalty = 5;\n        audio.bad.play();\n      }\n      break;\n  }\n  return {\n    feedback,\n    scorePenalty,\n    repCounted\n  };\n}\nexport async function startPoseDetection(videoElement, exercise, targetReps = 10, feedbackCallback = null // ✅ added live feedback support\n) {\n  if (!detector) await loadModel();\n  if (!videoElement) throw new Error(\"Video element is null\");\n  if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\n    throw new Error(\"Video element has no dimensions yet\");\n  }\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = videoElement.videoWidth;\n  canvas.height = videoElement.videoHeight;\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  let totalScore = 100;\n  let badFormCount = 0;\n  let repCount = 0;\n  const state = {\n    down: false,\n    jumping: false,\n    prevHipY: 0\n  };\n  return new Promise(resolve => {\n    const timeout = setTimeout(() => {\n      console.warn(\"Timeout: ending detection early.\");\n      document.body.removeChild(canvas);\n      return resolve(null);\n    }, 30000);\n    const detect = async () => {\n      const poses = await detector.estimatePoses(videoElement);\n      const pose = poses[0];\n      const {\n        feedback,\n        scorePenalty,\n        repCounted\n      } = validateAndCount(pose, exercise, state);\n      if (feedback) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.font = \"20px Arial\";\n        ctx.fillStyle = scorePenalty > 0 ? \"red\" : \"green\";\n        ctx.fillText(feedback, 10, 30);\n        speakFeedback(feedback);\n      }\n      if (scorePenalty > 0) {\n        totalScore -= scorePenalty;\n        badFormCount++;\n      }\n      if (repCounted) {\n        repCount++;\n      }\n\n      // ✅ Send live data to frontend (if callback provided)\n      if (typeof feedbackCallback === \"function\") {\n        feedbackCallback({\n          reps: repCount,\n          formFeedback: feedback || \"Keep going!\"\n        });\n      }\n      if (repCount >= targetReps) {\n        clearTimeout(timeout);\n        document.body.removeChild(canvas);\n        return resolve({\n          score: Math.max(0, totalScore),\n          accuracy: Math.floor((targetReps - badFormCount) / targetReps * 100),\n          xp: Math.floor(Math.max(0, totalScore * 0.8)),\n          feedback: badFormCount > 0 ? \"Try better form next time!\" : \"Perfect form!\",\n          reps: repCount,\n          badFormCount\n        });\n      }\n      requestAnimationFrame(detect);\n    };\n    detect();\n  });\n}","map":{"version":3,"names":["tf","posedetection","detector","audio","good","Audio","bad","loadModel","setBackend","ready","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","getY","keypoints","name","_keypoints$find","find","k","y","getX","_keypoints$find2","x","speakFeedback","msg","speech","SpeechSynthesisUtterance","volume","pitch","rate","window","speechSynthesis","speak","isKeypointReliable","threshold","kp","score","validateAndCount","pose","exercise","state","feedback","scorePenalty","repCounted","length","requiredKeypoints","squat","pushup","jump","plank","kpName","hipY","kneeY","shoulderY","elbowY","downCount","upCount","jumpUpCount","jumpDownCount","down","play","jumpThreshold","prevHipY","deltaY","jumping","console","log","diff","Math","abs","startPoseDetection","videoElement","targetReps","feedbackCallback","Error","videoWidth","videoHeight","canvas","document","createElement","width","height","body","appendChild","ctx","getContext","totalScore","badFormCount","repCount","Promise","resolve","timeout","setTimeout","warn","removeChild","detect","poses","estimatePoses","clearRect","font","fillStyle","fillText","reps","formFeedback","clearTimeout","max","accuracy","floor","xp","requestAnimationFrame"],"sources":["D:/Fitness WebApp/client/src/utils/poseDetectionFrontend.js"],"sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\r\nimport * as posedetection from \"@tensorflow-models/pose-detection\";\r\nimport \"@tensorflow/tfjs-backend-webgl\";\r\n\r\nlet detector;\r\nlet audio = {\r\n  good: new Audio(\"/audio/good.mp3\"),\r\n  bad: new Audio(\"/audio/bad.mp3\"),\r\n};\r\n\r\nexport async function loadModel() {\r\n  await tf.setBackend(\"webgl\");\r\n  await tf.ready();\r\n  detector = await posedetection.createDetector(\r\n    posedetection.SupportedModels.MoveNet,\r\n    {\r\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\r\n    }\r\n  );\r\n}\r\n\r\nfunction getY(keypoints, name) {\r\n  return keypoints.find((k) => k.name === name)?.y || 0;\r\n}\r\n\r\nfunction getX(keypoints, name) {\r\n  return keypoints.find((k) => k.name === name)?.x || 0;\r\n}\r\n\r\nfunction speakFeedback(msg) {\r\n  const speech = new SpeechSynthesisUtterance(msg);\r\n  speech.volume = 1;\r\n  speech.pitch = 1;\r\n  speech.rate = 1;\r\n  window.speechSynthesis.speak(speech);\r\n}\r\n\r\nfunction isKeypointReliable(keypoints, name, threshold = 0.5) {\r\n  const kp = keypoints.find((k) => k.name === name);\r\n  return kp && kp.score >= threshold;\r\n}\r\n\r\nfunction validateAndCount(pose, exercise, state) {\r\n  const k = pose.keypoints;\r\n  let feedback = \"\";\r\n  let scorePenalty = 0;\r\n  let repCounted = false;\r\n\r\n  if (!k || k.length === 0) return { feedback, scorePenalty, repCounted };\r\n\r\n  // Check reliability of keypoints needed for the exercise\r\n  const requiredKeypoints = {\r\n    squat: [\"left_hip\", \"left_knee\"],\r\n    pushup: [\"left_shoulder\", \"left_elbow\"],\r\n    jump: [\"left_hip\"],\r\n    plank: [\"left_hip\", \"left_shoulder\"],\r\n  };\r\n\r\n  for (const kpName of requiredKeypoints[exercise] || []) {\r\n    if (!isKeypointReliable(k, kpName)) {\r\n      return {\r\n        feedback: \"Make sure you're fully visible\",\r\n        scorePenalty: 0,\r\n        repCounted: false,\r\n      };\r\n    }\r\n  }\r\n\r\n  const hipY = getY(k, \"left_hip\");\r\n  const kneeY = getY(k, \"left_knee\");\r\n  const shoulderY = getY(k, \"left_shoulder\");\r\n  const elbowY = getY(k, \"left_elbow\");\r\n\r\n  // Add debouncing counters to state if not present\r\n  state.downCount = state.downCount || 0;\r\n  state.upCount = state.upCount || 0;\r\n  state.jumpUpCount = state.jumpUpCount || 0;\r\n  state.jumpDownCount = state.jumpDownCount || 0;\r\n\r\n  switch (exercise) {\r\n    case \"squat\":\r\n      if (!state.down) {\r\n        // Detect going down\r\n        if (hipY > kneeY + 30) {\r\n          state.downCount++;\r\n          state.upCount = 0;\r\n          if (state.downCount >= 5) {\r\n            // hold down for 5 frames\r\n            state.down = true;\r\n            state.downCount = 0;\r\n            feedback = \"Good depth!\";\r\n            audio.good.play();\r\n          }\r\n        } else {\r\n          state.downCount = 0;\r\n          if (hipY < kneeY + 30 && hipY > kneeY + 10) {\r\n            feedback = \"Go deeper!\";\r\n            scorePenalty = 5;\r\n            audio.bad.play();\r\n          }\r\n        }\r\n      } else {\r\n        // Detect coming back up after down\r\n        if (hipY < kneeY + 10) {\r\n          state.upCount++;\r\n          if (state.upCount >= 5) {\r\n            // hold up for 5 frames\r\n            repCounted = true;\r\n            state.down = false;\r\n            state.upCount = 0;\r\n            feedback = \"Squat complete!\";\r\n            audio.good.play();\r\n          }\r\n        } else {\r\n          state.upCount = 0;\r\n        }\r\n      }\r\n      break;\r\n\r\n    case \"pushup\":\r\n      if (!state.down) {\r\n        if (shoulderY > elbowY + 20) {\r\n          state.downCount++;\r\n          state.upCount = 0;\r\n          if (state.downCount >= 5) {\r\n            state.down = true;\r\n            state.downCount = 0;\r\n            feedback = \"Good pushup depth!\";\r\n            audio.good.play();\r\n          }\r\n        } else {\r\n          state.downCount = 0;\r\n          if (shoulderY < elbowY + 20 && shoulderY > elbowY + 10) {\r\n            feedback = \"Lower your chest!\";\r\n            scorePenalty = 5;\r\n            audio.bad.play();\r\n          }\r\n        }\r\n      } else {\r\n        if (shoulderY < elbowY + 10) {\r\n          state.upCount++;\r\n          if (state.upCount >= 5) {\r\n            repCounted = true;\r\n            state.down = false;\r\n            state.upCount = 0;\r\n            feedback = \"Pushup complete!\";\r\n            audio.good.play();\r\n          }\r\n        } else {\r\n          state.upCount = 0;\r\n        }\r\n      }\r\n      break;\r\n\r\n    case \"jump\": {\r\n      const jumpThreshold = 5; // Try 10–15 for best result\r\n\r\n      if (state.prevHipY !== null) {\r\n        const deltaY = state.prevHipY - hipY; // Positive when jumping up\r\n\r\n        // Jump upward detected\r\n        if (!state.jumping && deltaY > jumpThreshold) {\r\n          state.jumping = true;\r\n          feedback = \"Nice jump!\";\r\n          repCounted = false;\r\n          audio.good.play();\r\n        }\r\n\r\n        // Landing detected\r\n        if (state.jumping && deltaY < 5) {\r\n          repCounted = true;\r\n          state.jumping = false;\r\n          feedback = \"Jump counted!\";\r\n          audio.good.play();\r\n        }\r\n      }\r\n\r\n      state.prevHipY = hipY;\r\n      break;\r\n      console.log(\r\n        \"HipY:\",\r\n        hipY,\r\n        \"PrevHipY:\",\r\n        state.prevHipY,\r\n        \"Jumping:\",\r\n        state.jumping\r\n      );\r\n    }\r\n\r\n    case \"plank\":\r\n      const diff = Math.abs(hipY - shoulderY);\r\n      if (diff > 40) {\r\n        feedback = \"Straighten your back!\";\r\n        scorePenalty = 5;\r\n        audio.bad.play();\r\n      }\r\n      break;\r\n  }\r\n\r\n  return { feedback, scorePenalty, repCounted };\r\n}\r\n\r\nexport async function startPoseDetection(\r\n  videoElement,\r\n  exercise,\r\n  targetReps = 10,\r\n  feedbackCallback = null // ✅ added live feedback support\r\n) {\r\n  if (!detector) await loadModel();\r\n\r\n  if (!videoElement) throw new Error(\"Video element is null\");\r\n  if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\r\n    throw new Error(\"Video element has no dimensions yet\");\r\n  }\r\n\r\n  const canvas = document.createElement(\"canvas\");\r\n  canvas.width = videoElement.videoWidth;\r\n  canvas.height = videoElement.videoHeight;\r\n  document.body.appendChild(canvas);\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  let totalScore = 100;\r\n  let badFormCount = 0;\r\n  let repCount = 0;\r\n  const state = { down: false, jumping: false, prevHipY: 0 };\r\n\r\n  return new Promise((resolve) => {\r\n    const timeout = setTimeout(() => {\r\n      console.warn(\"Timeout: ending detection early.\");\r\n      document.body.removeChild(canvas);\r\n      return resolve(null);\r\n    }, 30000);\r\n\r\n    const detect = async () => {\r\n      const poses = await detector.estimatePoses(videoElement);\r\n      const pose = poses[0];\r\n\r\n      const { feedback, scorePenalty, repCounted } = validateAndCount(\r\n        pose,\r\n        exercise,\r\n        state\r\n      );\r\n\r\n      if (feedback) {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.font = \"20px Arial\";\r\n        ctx.fillStyle = scorePenalty > 0 ? \"red\" : \"green\";\r\n        ctx.fillText(feedback, 10, 30);\r\n        speakFeedback(feedback);\r\n      }\r\n\r\n      if (scorePenalty > 0) {\r\n        totalScore -= scorePenalty;\r\n        badFormCount++;\r\n      }\r\n\r\n      if (repCounted) {\r\n        repCount++;\r\n      }\r\n\r\n      // ✅ Send live data to frontend (if callback provided)\r\n      if (typeof feedbackCallback === \"function\") {\r\n        feedbackCallback({\r\n          reps: repCount,\r\n          formFeedback: feedback || \"Keep going!\",\r\n        });\r\n      }\r\n\r\n      if (repCount >= targetReps) {\r\n        clearTimeout(timeout);\r\n        document.body.removeChild(canvas);\r\n        return resolve({\r\n          score: Math.max(0, totalScore),\r\n          accuracy: Math.floor(\r\n            ((targetReps - badFormCount) / targetReps) * 100\r\n          ),\r\n          xp: Math.floor(Math.max(0, totalScore * 0.8)),\r\n          feedback:\r\n            badFormCount > 0 ? \"Try better form next time!\" : \"Perfect form!\",\r\n          reps: repCount,\r\n          badFormCount,\r\n        });\r\n      }\r\n\r\n      requestAnimationFrame(detect);\r\n    };\r\n\r\n    detect();\r\n  });\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,kBAAkB;AACtC,OAAO,KAAKC,aAAa,MAAM,mCAAmC;AAClE,OAAO,gCAAgC;AAEvC,IAAIC,QAAQ;AACZ,IAAIC,KAAK,GAAG;EACVC,IAAI,EAAE,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EAClCC,GAAG,EAAE,IAAID,KAAK,CAAC,gBAAgB;AACjC,CAAC;AAED,OAAO,eAAeE,SAASA,CAAA,EAAG;EAChC,MAAMP,EAAE,CAACQ,UAAU,CAAC,OAAO,CAAC;EAC5B,MAAMR,EAAE,CAACS,KAAK,CAAC,CAAC;EAChBP,QAAQ,GAAG,MAAMD,aAAa,CAACS,cAAc,CAC3CT,aAAa,CAACU,eAAe,CAACC,OAAO,EACrC;IACEC,SAAS,EAAEZ,aAAa,CAACa,OAAO,CAACD,SAAS,CAACE;EAC7C,CACF,CAAC;AACH;AAEA,SAASC,IAAIA,CAACC,SAAS,EAAEC,IAAI,EAAE;EAAA,IAAAC,eAAA;EAC7B,OAAO,EAAAA,eAAA,GAAAF,SAAS,CAACG,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC,cAAAC,eAAA,uBAAtCA,eAAA,CAAwCG,CAAC,KAAI,CAAC;AACvD;AAEA,SAASC,IAAIA,CAACN,SAAS,EAAEC,IAAI,EAAE;EAAA,IAAAM,gBAAA;EAC7B,OAAO,EAAAA,gBAAA,GAAAP,SAAS,CAACG,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC,cAAAM,gBAAA,uBAAtCA,gBAAA,CAAwCC,CAAC,KAAI,CAAC;AACvD;AAEA,SAASC,aAAaA,CAACC,GAAG,EAAE;EAC1B,MAAMC,MAAM,GAAG,IAAIC,wBAAwB,CAACF,GAAG,CAAC;EAChDC,MAAM,CAACE,MAAM,GAAG,CAAC;EACjBF,MAAM,CAACG,KAAK,GAAG,CAAC;EAChBH,MAAM,CAACI,IAAI,GAAG,CAAC;EACfC,MAAM,CAACC,eAAe,CAACC,KAAK,CAACP,MAAM,CAAC;AACtC;AAEA,SAASQ,kBAAkBA,CAACnB,SAAS,EAAEC,IAAI,EAAEmB,SAAS,GAAG,GAAG,EAAE;EAC5D,MAAMC,EAAE,GAAGrB,SAAS,CAACG,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC;EACjD,OAAOoB,EAAE,IAAIA,EAAE,CAACC,KAAK,IAAIF,SAAS;AACpC;AAEA,SAASG,gBAAgBA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAE;EAC/C,MAAMtB,CAAC,GAAGoB,IAAI,CAACxB,SAAS;EACxB,IAAI2B,QAAQ,GAAG,EAAE;EACjB,IAAIC,YAAY,GAAG,CAAC;EACpB,IAAIC,UAAU,GAAG,KAAK;EAEtB,IAAI,CAACzB,CAAC,IAAIA,CAAC,CAAC0B,MAAM,KAAK,CAAC,EAAE,OAAO;IAAEH,QAAQ;IAAEC,YAAY;IAAEC;EAAW,CAAC;;EAEvE;EACA,MAAME,iBAAiB,GAAG;IACxBC,KAAK,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC;IAChCC,MAAM,EAAE,CAAC,eAAe,EAAE,YAAY,CAAC;IACvCC,IAAI,EAAE,CAAC,UAAU,CAAC;IAClBC,KAAK,EAAE,CAAC,UAAU,EAAE,eAAe;EACrC,CAAC;EAED,KAAK,MAAMC,MAAM,IAAIL,iBAAiB,CAACN,QAAQ,CAAC,IAAI,EAAE,EAAE;IACtD,IAAI,CAACN,kBAAkB,CAACf,CAAC,EAAEgC,MAAM,CAAC,EAAE;MAClC,OAAO;QACLT,QAAQ,EAAE,gCAAgC;QAC1CC,YAAY,EAAE,CAAC;QACfC,UAAU,EAAE;MACd,CAAC;IACH;EACF;EAEA,MAAMQ,IAAI,GAAGtC,IAAI,CAACK,CAAC,EAAE,UAAU,CAAC;EAChC,MAAMkC,KAAK,GAAGvC,IAAI,CAACK,CAAC,EAAE,WAAW,CAAC;EAClC,MAAMmC,SAAS,GAAGxC,IAAI,CAACK,CAAC,EAAE,eAAe,CAAC;EAC1C,MAAMoC,MAAM,GAAGzC,IAAI,CAACK,CAAC,EAAE,YAAY,CAAC;;EAEpC;EACAsB,KAAK,CAACe,SAAS,GAAGf,KAAK,CAACe,SAAS,IAAI,CAAC;EACtCf,KAAK,CAACgB,OAAO,GAAGhB,KAAK,CAACgB,OAAO,IAAI,CAAC;EAClChB,KAAK,CAACiB,WAAW,GAAGjB,KAAK,CAACiB,WAAW,IAAI,CAAC;EAC1CjB,KAAK,CAACkB,aAAa,GAAGlB,KAAK,CAACkB,aAAa,IAAI,CAAC;EAE9C,QAAQnB,QAAQ;IACd,KAAK,OAAO;MACV,IAAI,CAACC,KAAK,CAACmB,IAAI,EAAE;QACf;QACA,IAAIR,IAAI,GAAGC,KAAK,GAAG,EAAE,EAAE;UACrBZ,KAAK,CAACe,SAAS,EAAE;UACjBf,KAAK,CAACgB,OAAO,GAAG,CAAC;UACjB,IAAIhB,KAAK,CAACe,SAAS,IAAI,CAAC,EAAE;YACxB;YACAf,KAAK,CAACmB,IAAI,GAAG,IAAI;YACjBnB,KAAK,CAACe,SAAS,GAAG,CAAC;YACnBd,QAAQ,GAAG,aAAa;YACxBzC,KAAK,CAACC,IAAI,CAAC2D,IAAI,CAAC,CAAC;UACnB;QACF,CAAC,MAAM;UACLpB,KAAK,CAACe,SAAS,GAAG,CAAC;UACnB,IAAIJ,IAAI,GAAGC,KAAK,GAAG,EAAE,IAAID,IAAI,GAAGC,KAAK,GAAG,EAAE,EAAE;YAC1CX,QAAQ,GAAG,YAAY;YACvBC,YAAY,GAAG,CAAC;YAChB1C,KAAK,CAACG,GAAG,CAACyD,IAAI,CAAC,CAAC;UAClB;QACF;MACF,CAAC,MAAM;QACL;QACA,IAAIT,IAAI,GAAGC,KAAK,GAAG,EAAE,EAAE;UACrBZ,KAAK,CAACgB,OAAO,EAAE;UACf,IAAIhB,KAAK,CAACgB,OAAO,IAAI,CAAC,EAAE;YACtB;YACAb,UAAU,GAAG,IAAI;YACjBH,KAAK,CAACmB,IAAI,GAAG,KAAK;YAClBnB,KAAK,CAACgB,OAAO,GAAG,CAAC;YACjBf,QAAQ,GAAG,iBAAiB;YAC5BzC,KAAK,CAACC,IAAI,CAAC2D,IAAI,CAAC,CAAC;UACnB;QACF,CAAC,MAAM;UACLpB,KAAK,CAACgB,OAAO,GAAG,CAAC;QACnB;MACF;MACA;IAEF,KAAK,QAAQ;MACX,IAAI,CAAChB,KAAK,CAACmB,IAAI,EAAE;QACf,IAAIN,SAAS,GAAGC,MAAM,GAAG,EAAE,EAAE;UAC3Bd,KAAK,CAACe,SAAS,EAAE;UACjBf,KAAK,CAACgB,OAAO,GAAG,CAAC;UACjB,IAAIhB,KAAK,CAACe,SAAS,IAAI,CAAC,EAAE;YACxBf,KAAK,CAACmB,IAAI,GAAG,IAAI;YACjBnB,KAAK,CAACe,SAAS,GAAG,CAAC;YACnBd,QAAQ,GAAG,oBAAoB;YAC/BzC,KAAK,CAACC,IAAI,CAAC2D,IAAI,CAAC,CAAC;UACnB;QACF,CAAC,MAAM;UACLpB,KAAK,CAACe,SAAS,GAAG,CAAC;UACnB,IAAIF,SAAS,GAAGC,MAAM,GAAG,EAAE,IAAID,SAAS,GAAGC,MAAM,GAAG,EAAE,EAAE;YACtDb,QAAQ,GAAG,mBAAmB;YAC9BC,YAAY,GAAG,CAAC;YAChB1C,KAAK,CAACG,GAAG,CAACyD,IAAI,CAAC,CAAC;UAClB;QACF;MACF,CAAC,MAAM;QACL,IAAIP,SAAS,GAAGC,MAAM,GAAG,EAAE,EAAE;UAC3Bd,KAAK,CAACgB,OAAO,EAAE;UACf,IAAIhB,KAAK,CAACgB,OAAO,IAAI,CAAC,EAAE;YACtBb,UAAU,GAAG,IAAI;YACjBH,KAAK,CAACmB,IAAI,GAAG,KAAK;YAClBnB,KAAK,CAACgB,OAAO,GAAG,CAAC;YACjBf,QAAQ,GAAG,kBAAkB;YAC7BzC,KAAK,CAACC,IAAI,CAAC2D,IAAI,CAAC,CAAC;UACnB;QACF,CAAC,MAAM;UACLpB,KAAK,CAACgB,OAAO,GAAG,CAAC;QACnB;MACF;MACA;IAEF,KAAK,MAAM;MAAE;QACX,MAAMK,aAAa,GAAG,CAAC,CAAC,CAAC;;QAEzB,IAAIrB,KAAK,CAACsB,QAAQ,KAAK,IAAI,EAAE;UAC3B,MAAMC,MAAM,GAAGvB,KAAK,CAACsB,QAAQ,GAAGX,IAAI,CAAC,CAAC;;UAEtC;UACA,IAAI,CAACX,KAAK,CAACwB,OAAO,IAAID,MAAM,GAAGF,aAAa,EAAE;YAC5CrB,KAAK,CAACwB,OAAO,GAAG,IAAI;YACpBvB,QAAQ,GAAG,YAAY;YACvBE,UAAU,GAAG,KAAK;YAClB3C,KAAK,CAACC,IAAI,CAAC2D,IAAI,CAAC,CAAC;UACnB;;UAEA;UACA,IAAIpB,KAAK,CAACwB,OAAO,IAAID,MAAM,GAAG,CAAC,EAAE;YAC/BpB,UAAU,GAAG,IAAI;YACjBH,KAAK,CAACwB,OAAO,GAAG,KAAK;YACrBvB,QAAQ,GAAG,eAAe;YAC1BzC,KAAK,CAACC,IAAI,CAAC2D,IAAI,CAAC,CAAC;UACnB;QACF;QAEApB,KAAK,CAACsB,QAAQ,GAAGX,IAAI;QACrB;QACAc,OAAO,CAACC,GAAG,CACT,OAAO,EACPf,IAAI,EACJ,WAAW,EACXX,KAAK,CAACsB,QAAQ,EACd,UAAU,EACVtB,KAAK,CAACwB,OACR,CAAC;MACH;IAEA,KAAK,OAAO;MACV,MAAMG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAClB,IAAI,GAAGE,SAAS,CAAC;MACvC,IAAIc,IAAI,GAAG,EAAE,EAAE;QACb1B,QAAQ,GAAG,uBAAuB;QAClCC,YAAY,GAAG,CAAC;QAChB1C,KAAK,CAACG,GAAG,CAACyD,IAAI,CAAC,CAAC;MAClB;MACA;EACJ;EAEA,OAAO;IAAEnB,QAAQ;IAAEC,YAAY;IAAEC;EAAW,CAAC;AAC/C;AAEA,OAAO,eAAe2B,kBAAkBA,CACtCC,YAAY,EACZhC,QAAQ,EACRiC,UAAU,GAAG,EAAE,EACfC,gBAAgB,GAAG,IAAI,CAAC;AAAA,EACxB;EACA,IAAI,CAAC1E,QAAQ,EAAE,MAAMK,SAAS,CAAC,CAAC;EAEhC,IAAI,CAACmE,YAAY,EAAE,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;EAC3D,IAAIH,YAAY,CAACI,UAAU,KAAK,CAAC,IAAIJ,YAAY,CAACK,WAAW,KAAK,CAAC,EAAE;IACnE,MAAM,IAAIF,KAAK,CAAC,qCAAqC,CAAC;EACxD;EAEA,MAAMG,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/CF,MAAM,CAACG,KAAK,GAAGT,YAAY,CAACI,UAAU;EACtCE,MAAM,CAACI,MAAM,GAAGV,YAAY,CAACK,WAAW;EACxCE,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;EACjC,MAAMO,GAAG,GAAGP,MAAM,CAACQ,UAAU,CAAC,IAAI,CAAC;EAEnC,IAAIC,UAAU,GAAG,GAAG;EACpB,IAAIC,YAAY,GAAG,CAAC;EACpB,IAAIC,QAAQ,GAAG,CAAC;EAChB,MAAMhD,KAAK,GAAG;IAAEmB,IAAI,EAAE,KAAK;IAAEK,OAAO,EAAE,KAAK;IAAEF,QAAQ,EAAE;EAAE,CAAC;EAE1D,OAAO,IAAI2B,OAAO,CAAEC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/B3B,OAAO,CAAC4B,IAAI,CAAC,kCAAkC,CAAC;MAChDf,QAAQ,CAACI,IAAI,CAACY,WAAW,CAACjB,MAAM,CAAC;MACjC,OAAOa,OAAO,CAAC,IAAI,CAAC;IACtB,CAAC,EAAE,KAAK,CAAC;IAET,MAAMK,MAAM,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMC,KAAK,GAAG,MAAMjG,QAAQ,CAACkG,aAAa,CAAC1B,YAAY,CAAC;MACxD,MAAMjC,IAAI,GAAG0D,KAAK,CAAC,CAAC,CAAC;MAErB,MAAM;QAAEvD,QAAQ;QAAEC,YAAY;QAAEC;MAAW,CAAC,GAAGN,gBAAgB,CAC7DC,IAAI,EACJC,QAAQ,EACRC,KACF,CAAC;MAED,IAAIC,QAAQ,EAAE;QACZ2C,GAAG,CAACc,SAAS,CAAC,CAAC,EAAE,CAAC,EAAErB,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,MAAM,CAAC;QAChDG,GAAG,CAACe,IAAI,GAAG,YAAY;QACvBf,GAAG,CAACgB,SAAS,GAAG1D,YAAY,GAAG,CAAC,GAAG,KAAK,GAAG,OAAO;QAClD0C,GAAG,CAACiB,QAAQ,CAAC5D,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC;QAC9BlB,aAAa,CAACkB,QAAQ,CAAC;MACzB;MAEA,IAAIC,YAAY,GAAG,CAAC,EAAE;QACpB4C,UAAU,IAAI5C,YAAY;QAC1B6C,YAAY,EAAE;MAChB;MAEA,IAAI5C,UAAU,EAAE;QACd6C,QAAQ,EAAE;MACZ;;MAEA;MACA,IAAI,OAAOf,gBAAgB,KAAK,UAAU,EAAE;QAC1CA,gBAAgB,CAAC;UACf6B,IAAI,EAAEd,QAAQ;UACde,YAAY,EAAE9D,QAAQ,IAAI;QAC5B,CAAC,CAAC;MACJ;MAEA,IAAI+C,QAAQ,IAAIhB,UAAU,EAAE;QAC1BgC,YAAY,CAACb,OAAO,CAAC;QACrBb,QAAQ,CAACI,IAAI,CAACY,WAAW,CAACjB,MAAM,CAAC;QACjC,OAAOa,OAAO,CAAC;UACbtD,KAAK,EAAEgC,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAEnB,UAAU,CAAC;UAC9BoB,QAAQ,EAAEtC,IAAI,CAACuC,KAAK,CACjB,CAACnC,UAAU,GAAGe,YAAY,IAAIf,UAAU,GAAI,GAC/C,CAAC;UACDoC,EAAE,EAAExC,IAAI,CAACuC,KAAK,CAACvC,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAEnB,UAAU,GAAG,GAAG,CAAC,CAAC;UAC7C7C,QAAQ,EACN8C,YAAY,GAAG,CAAC,GAAG,4BAA4B,GAAG,eAAe;UACnEe,IAAI,EAAEd,QAAQ;UACdD;QACF,CAAC,CAAC;MACJ;MAEAsB,qBAAqB,CAACd,MAAM,CAAC;IAC/B,CAAC;IAEDA,MAAM,CAAC,CAAC;EACV,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}