{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Square } from '@tensorflow/tfjs-core';\nimport { UnaryOpProgram } from '../unary_op_webgpu';\nimport { UnaryOpType } from '../unary_op_util';\nexport const squareConfig = {\n  kernelName: Square,\n  backendName: 'webgpu',\n  kernelFunc: _ref => {\n    let {\n      inputs,\n      backend\n    } = _ref;\n    const {\n      x\n    } = inputs;\n    const webGPUBackend = backend;\n    const program = new UnaryOpProgram(x.shape, UnaryOpType.SQUARE);\n    return webGPUBackend.runWebGPUProgram(program, [x], x.dtype);\n  }\n};","map":{"version":3,"names":["Square","UnaryOpProgram","UnaryOpType","squareConfig","kernelName","backendName","kernelFunc","_ref","inputs","backend","x","webGPUBackend","program","shape","SQUARE","runWebGPUProgram","dtype"],"sources":["D:\\Fitness WebApp\\tfjs-backend-webgpu\\src\\kernels\\Square.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Square, SquareInputs} from '@tensorflow/tfjs-core';\nimport {WebGPUBackend} from '../backend_webgpu';\nimport {UnaryOpProgram} from '../unary_op_webgpu';\nimport {UnaryOpType} from '../unary_op_util';\n\nexport const squareConfig: KernelConfig = {\n  kernelName: Square,\n  backendName: 'webgpu',\n  kernelFunc: ({inputs, backend}) => {\n    const {x} = inputs as SquareInputs;\n    const webGPUBackend = backend as WebGPUBackend;\n    const program = new UnaryOpProgram(x.shape, UnaryOpType.SQUARE);\n    return webGPUBackend.runWebGPUProgram(program, [x], x.dtype);\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAsBA,MAAM,QAAqB,uBAAuB;AAExE,SAAQC,cAAc,QAAO,oBAAoB;AACjD,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,OAAO,MAAMC,YAAY,GAAiB;EACxCC,UAAU,EAAEJ,MAAM;EAClBK,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAEC,IAAA,IAAsB;IAAA,IAArB;MAACC,MAAM;MAAEC;IAAO,CAAC,GAAAF,IAAA;IAC5B,MAAM;MAACG;IAAC,CAAC,GAAGF,MAAsB;IAClC,MAAMG,aAAa,GAAGF,OAAwB;IAC9C,MAAMG,OAAO,GAAG,IAAIX,cAAc,CAACS,CAAC,CAACG,KAAK,EAAEX,WAAW,CAACY,MAAM,CAAC;IAC/D,OAAOH,aAAa,CAACI,gBAAgB,CAACH,OAAO,EAAE,CAACF,CAAC,CAAC,EAAEA,CAAC,CAACM,KAAK,CAAC;EAC9D;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}