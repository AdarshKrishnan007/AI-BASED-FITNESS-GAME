{"ast":null,"code":"import * as tf from \"@tensorflow/tfjs\";\nimport * as posedetection from \"@tensorflow-models/pose-detection\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nlet detector;\nlet audio = {\n  good: new Audio(\"/audio/good.mp3\"),\n  bad: new Audio(\"/audio/bad.mp3\")\n};\nexport async function loadModel() {\n  await tf.setBackend(\"webgl\");\n  await tf.ready();\n  detector = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n    modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n  });\n}\nfunction speakFeedback(msg) {\n  const speech = new SpeechSynthesisUtterance(msg);\n  speech.volume = 1;\n  speech.pitch = 1;\n  speech.rate = 1;\n  window.speechSynthesis.speak(speech);\n}\n\n// Helper to get x/y of a keypoint\nfunction getXY(keypoints, name) {\n  const kp = keypoints.find(k => k.name === name);\n  return {\n    x: (kp === null || kp === void 0 ? void 0 : kp.x) || 0,\n    y: (kp === null || kp === void 0 ? void 0 : kp.y) || 0,\n    score: (kp === null || kp === void 0 ? void 0 : kp.score) || 0\n  };\n}\n\n// Basic keypoint reliability check\nfunction isReliable(kp, threshold = 0.5) {\n  return kp.score >= threshold;\n}\n\n// Exercise handlers\nconst exerciseHandlers = {\n  squat: (k, state) => {\n    const hip = getXY(k, \"left_hip\");\n    const knee = getXY(k, \"left_knee\");\n    if (!isReliable(hip) || !isReliable(knee)) return {};\n    if (!state.down) {\n      if (hip.y > knee.y + 30) {\n        state.downCount = (state.downCount || 0) + 1;\n        if (state.downCount > 4) {\n          state.down = true;\n          audio.good.play();\n          return {\n            feedback: \"Good squat depth!\",\n            repCounted: false\n          };\n        }\n      } else {\n        state.downCount = 0;\n        return {\n          feedback: \"Go deeper!\",\n          scorePenalty: 5\n        };\n      }\n    } else {\n      if (hip.y < knee.y + 10) {\n        state.upCount = (state.upCount || 0) + 1;\n        if (state.upCount > 4) {\n          state.down = false;\n          audio.good.play();\n          return {\n            feedback: \"Squat counted!\",\n            repCounted: true\n          };\n        }\n      } else {\n        state.upCount = 0;\n      }\n    }\n    return {};\n  },\n  jump: (k, state) => {\n    const hip = getXY(k, \"left_hip\");\n    if (!isReliable(hip)) return {};\n    if (state.prevHipY == null) state.prevHipY = hip.y;\n    const jumpUp = state.prevHipY - hip.y > 20;\n    const land = hip.y - state.prevHipY > 10;\n    if (!state.jumping && jumpUp) {\n      state.jumping = true;\n      audio.good.play();\n      return {\n        feedback: \"Nice jump!\"\n      };\n    }\n    if (state.jumping && land) {\n      state.jumping = false;\n      audio.good.play();\n      return {\n        feedback: \"Jump counted!\",\n        repCounted: true\n      };\n    }\n    state.prevHipY = hip.y;\n    return {};\n  },\n  pushup: (k, state) => {\n    const shoulder = getXY(k, \"left_shoulder\");\n    const elbow = getXY(k, \"left_elbow\");\n    if (!isReliable(shoulder) || !isReliable(elbow)) return {};\n    if (!state.down) {\n      if (shoulder.y > elbow.y + 20) {\n        state.downCount = (state.downCount || 0) + 1;\n        if (state.downCount > 4) {\n          state.down = true;\n          audio.good.play();\n          return {\n            feedback: \"Good pushup depth!\",\n            repCounted: false\n          };\n        }\n      } else {\n        return {\n          feedback: \"Lower your chest!\",\n          scorePenalty: 5\n        };\n      }\n    } else {\n      if (shoulder.y < elbow.y + 10) {\n        state.upCount = (state.upCount || 0) + 1;\n        if (state.upCount > 4) {\n          state.down = false;\n          audio.good.play();\n          return {\n            feedback: \"Pushup counted!\",\n            repCounted: true\n          };\n        }\n      }\n    }\n    return {};\n  },\n  plank: k => {\n    const hip = getXY(k, \"left_hip\");\n    const shoulder = getXY(k, \"left_shoulder\");\n    if (!isReliable(hip) || !isReliable(shoulder)) return {};\n    const diff = Math.abs(hip.y - shoulder.y);\n    if (diff > 40) {\n      audio.bad.play();\n      return {\n        feedback: \"Keep your back straight!\",\n        scorePenalty: 5\n      };\n    }\n    return {\n      feedback: \"Hold steady!\",\n      repCounted: false\n    };\n  }\n};\nexport async function startPoseDetection(videoElement, exercise, targetReps = 10, feedbackCallback = null) {\n  if (!detector) await loadModel();\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = videoElement.videoWidth;\n  canvas.height = videoElement.videoHeight;\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  let totalScore = 100;\n  let badFormCount = 0;\n  let repCount = 0;\n  const state = {};\n  return new Promise(resolve => {\n    const timeout = setTimeout(() => {\n      document.body.removeChild(canvas);\n      return resolve(null);\n    }, 30000);\n    const detect = async () => {\n      const poses = await detector.estimatePoses(videoElement);\n      const pose = poses[0];\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.font = \"20px Arial\";\n      if (!pose || !pose.keypoints || pose.keypoints.length === 0) {\n        ctx.fillStyle = \"red\";\n        ctx.fillText(\"Stand in view!\", 10, 30);\n        speakFeedback(\"Stand in view\");\n        requestAnimationFrame(detect);\n        return;\n      }\n      const handler = exerciseHandlers[exercise];\n      if (!handler) throw new Error(\"Unsupported exercise: \" + exercise);\n      const result = handler(pose.keypoints, state);\n      if (result.feedback) {\n        ctx.fillStyle = result.scorePenalty ? \"red\" : \"green\";\n        ctx.fillText(result.feedback, 10, 30);\n        speakFeedback(result.feedback);\n      }\n      if (result.scorePenalty) {\n        totalScore -= result.scorePenalty;\n        badFormCount++;\n      }\n      if (result.repCounted) {\n        repCount++;\n      }\n      if (typeof feedbackCallback === \"function\") {\n        feedbackCallback({\n          reps: repCount,\n          formFeedback: result.feedback\n        });\n      }\n      if (repCount >= targetReps) {\n        clearTimeout(timeout);\n        document.body.removeChild(canvas);\n        return resolve({\n          score: Math.max(0, totalScore),\n          accuracy: Math.floor((targetReps - badFormCount) / targetReps * 100),\n          xp: Math.floor(Math.max(0, totalScore * 0.8)),\n          feedback: badFormCount > 0 ? \"Try better form next time!\" : \"Perfect form!\",\n          reps: repCount,\n          badFormCount\n        });\n      }\n      requestAnimationFrame(detect);\n    };\n    detect();\n  });\n}","map":{"version":3,"names":["tf","posedetection","detector","audio","good","Audio","bad","loadModel","setBackend","ready","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","speakFeedback","msg","speech","SpeechSynthesisUtterance","volume","pitch","rate","window","speechSynthesis","speak","getXY","keypoints","name","kp","find","k","x","y","score","isReliable","threshold","exerciseHandlers","squat","state","hip","knee","down","downCount","play","feedback","repCounted","scorePenalty","upCount","jump","prevHipY","jumpUp","land","jumping","pushup","shoulder","elbow","plank","diff","Math","abs","startPoseDetection","videoElement","exercise","targetReps","feedbackCallback","canvas","document","createElement","width","videoWidth","height","videoHeight","body","appendChild","ctx","getContext","totalScore","badFormCount","repCount","Promise","resolve","timeout","setTimeout","removeChild","detect","poses","estimatePoses","pose","clearRect","font","length","fillStyle","fillText","requestAnimationFrame","handler","Error","result","reps","formFeedback","clearTimeout","max","accuracy","floor","xp"],"sources":["D:/Fitness WebApp/client/src/utils/poseDetectionFrontend.js"],"sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\r\nimport * as posedetection from \"@tensorflow-models/pose-detection\";\r\nimport \"@tensorflow/tfjs-backend-webgl\";\r\n\r\nlet detector;\r\n\r\nlet audio = {\r\n  good: new Audio(\"/audio/good.mp3\"),\r\n  bad: new Audio(\"/audio/bad.mp3\"),\r\n};\r\n\r\nexport async function loadModel() {\r\n  await tf.setBackend(\"webgl\");\r\n  await tf.ready();\r\n  detector = await posedetection.createDetector(\r\n    posedetection.SupportedModels.MoveNet,\r\n    {\r\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\r\n    }\r\n  );\r\n}\r\n\r\nfunction speakFeedback(msg) {\r\n  const speech = new SpeechSynthesisUtterance(msg);\r\n  speech.volume = 1;\r\n  speech.pitch = 1;\r\n  speech.rate = 1;\r\n  window.speechSynthesis.speak(speech);\r\n}\r\n\r\n// Helper to get x/y of a keypoint\r\nfunction getXY(keypoints, name) {\r\n  const kp = keypoints.find((k) => k.name === name);\r\n  return { x: kp?.x || 0, y: kp?.y || 0, score: kp?.score || 0 };\r\n}\r\n\r\n// Basic keypoint reliability check\r\nfunction isReliable(kp, threshold = 0.5) {\r\n  return kp.score >= threshold;\r\n}\r\n\r\n// Exercise handlers\r\nconst exerciseHandlers = {\r\n  squat: (k, state) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    const knee = getXY(k, \"left_knee\");\r\n    if (!isReliable(hip) || !isReliable(knee)) return {};\r\n\r\n    if (!state.down) {\r\n      if (hip.y > knee.y + 30) {\r\n        state.downCount = (state.downCount || 0) + 1;\r\n        if (state.downCount > 4) {\r\n          state.down = true;\r\n          audio.good.play();\r\n          return { feedback: \"Good squat depth!\", repCounted: false };\r\n        }\r\n      } else {\r\n        state.downCount = 0;\r\n        return { feedback: \"Go deeper!\", scorePenalty: 5 };\r\n      }\r\n    } else {\r\n      if (hip.y < knee.y + 10) {\r\n        state.upCount = (state.upCount || 0) + 1;\r\n        if (state.upCount > 4) {\r\n          state.down = false;\r\n          audio.good.play();\r\n          return { feedback: \"Squat counted!\", repCounted: true };\r\n        }\r\n      } else {\r\n        state.upCount = 0;\r\n      }\r\n    }\r\n\r\n    return {};\r\n  },\r\n\r\n  jump: (k, state) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    if (!isReliable(hip)) return {};\r\n    if (state.prevHipY == null) state.prevHipY = hip.y;\r\n\r\n    const jumpUp = state.prevHipY - hip.y > 20;\r\n    const land = hip.y - state.prevHipY > 10;\r\n\r\n    if (!state.jumping && jumpUp) {\r\n      state.jumping = true;\r\n      audio.good.play();\r\n      return { feedback: \"Nice jump!\" };\r\n    }\r\n\r\n    if (state.jumping && land) {\r\n      state.jumping = false;\r\n      audio.good.play();\r\n      return { feedback: \"Jump counted!\", repCounted: true };\r\n    }\r\n\r\n    state.prevHipY = hip.y;\r\n    return {};\r\n  },\r\n\r\n  pushup: (k, state) => {\r\n    const shoulder = getXY(k, \"left_shoulder\");\r\n    const elbow = getXY(k, \"left_elbow\");\r\n    if (!isReliable(shoulder) || !isReliable(elbow)) return {};\r\n\r\n    if (!state.down) {\r\n      if (shoulder.y > elbow.y + 20) {\r\n        state.downCount = (state.downCount || 0) + 1;\r\n        if (state.downCount > 4) {\r\n          state.down = true;\r\n          audio.good.play();\r\n          return { feedback: \"Good pushup depth!\", repCounted: false };\r\n        }\r\n      } else {\r\n        return { feedback: \"Lower your chest!\", scorePenalty: 5 };\r\n      }\r\n    } else {\r\n      if (shoulder.y < elbow.y + 10) {\r\n        state.upCount = (state.upCount || 0) + 1;\r\n        if (state.upCount > 4) {\r\n          state.down = false;\r\n          audio.good.play();\r\n          return { feedback: \"Pushup counted!\", repCounted: true };\r\n        }\r\n      }\r\n    }\r\n\r\n    return {};\r\n  },\r\n\r\n  plank: (k) => {\r\n    const hip = getXY(k, \"left_hip\");\r\n    const shoulder = getXY(k, \"left_shoulder\");\r\n    if (!isReliable(hip) || !isReliable(shoulder)) return {};\r\n\r\n    const diff = Math.abs(hip.y - shoulder.y);\r\n    if (diff > 40) {\r\n      audio.bad.play();\r\n      return { feedback: \"Keep your back straight!\", scorePenalty: 5 };\r\n    }\r\n\r\n    return { feedback: \"Hold steady!\", repCounted: false };\r\n  },\r\n};\r\n\r\nexport async function startPoseDetection(\r\n  videoElement,\r\n  exercise,\r\n  targetReps = 10,\r\n  feedbackCallback = null\r\n) {\r\n  if (!detector) await loadModel();\r\n\r\n  const canvas = document.createElement(\"canvas\");\r\n  canvas.width = videoElement.videoWidth;\r\n  canvas.height = videoElement.videoHeight;\r\n  document.body.appendChild(canvas);\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  let totalScore = 100;\r\n  let badFormCount = 0;\r\n  let repCount = 0;\r\n  const state = {};\r\n\r\n  return new Promise((resolve) => {\r\n    const timeout = setTimeout(() => {\r\n      document.body.removeChild(canvas);\r\n      return resolve(null);\r\n    }, 30000);\r\n\r\n    const detect = async () => {\r\n      const poses = await detector.estimatePoses(videoElement);\r\n      const pose = poses[0];\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.font = \"20px Arial\";\r\n\r\n      if (!pose || !pose.keypoints || pose.keypoints.length === 0) {\r\n        ctx.fillStyle = \"red\";\r\n        ctx.fillText(\"Stand in view!\", 10, 30);\r\n        speakFeedback(\"Stand in view\");\r\n        requestAnimationFrame(detect);\r\n        return;\r\n      }\r\n\r\n      const handler = exerciseHandlers[exercise];\r\n      if (!handler) throw new Error(\"Unsupported exercise: \" + exercise);\r\n\r\n      const result = handler(pose.keypoints, state);\r\n\r\n      if (result.feedback) {\r\n        ctx.fillStyle = result.scorePenalty ? \"red\" : \"green\";\r\n        ctx.fillText(result.feedback, 10, 30);\r\n        speakFeedback(result.feedback);\r\n      }\r\n\r\n      if (result.scorePenalty) {\r\n        totalScore -= result.scorePenalty;\r\n        badFormCount++;\r\n      }\r\n\r\n      if (result.repCounted) {\r\n        repCount++;\r\n      }\r\n\r\n      if (typeof feedbackCallback === \"function\") {\r\n        feedbackCallback({\r\n          reps: repCount,\r\n          formFeedback: result.feedback,\r\n        });\r\n      }\r\n\r\n      if (repCount >= targetReps) {\r\n        clearTimeout(timeout);\r\n        document.body.removeChild(canvas);\r\n        return resolve({\r\n          score: Math.max(0, totalScore),\r\n          accuracy: Math.floor(\r\n            ((targetReps - badFormCount) / targetReps) * 100\r\n          ),\r\n          xp: Math.floor(Math.max(0, totalScore * 0.8)),\r\n          feedback:\r\n            badFormCount > 0 ? \"Try better form next time!\" : \"Perfect form!\",\r\n          reps: repCount,\r\n          badFormCount,\r\n        });\r\n      }\r\n\r\n      requestAnimationFrame(detect);\r\n    };\r\n\r\n    detect();\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}