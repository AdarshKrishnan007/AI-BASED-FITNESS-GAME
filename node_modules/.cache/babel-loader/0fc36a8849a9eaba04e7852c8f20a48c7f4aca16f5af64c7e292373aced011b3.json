{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fitness WebApp\\\\client\\\\src\\\\pages\\\\AdventureMap\\\\AdventureMap.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./AdventureMap.css\"; // You'll write styles for level nodes here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst levels = [{\n  id: 1,\n  name: \"Forest Jump\",\n  status: \"completed\",\n  icon: \"üå≤\"\n}, {\n  id: 2,\n  name: \"Mountain Push-Up\",\n  status: \"unlocked\",\n  icon: \"‚õ∞Ô∏è\"\n}, {\n  id: 3,\n  name: \"Desert Squat\",\n  status: \"locked\",\n  icon: \"üèúÔ∏è\"\n}, {\n  id: 4,\n  name: \"Icy Plank\",\n  status: \"locked\",\n  icon: \"‚ùÑÔ∏è\"\n}, {\n  id: 5,\n  name: \"Crystal Temple\",\n  status: \"locked\",\n  icon: \"üèØ\"\n}];\nfunction AdventureSVGMap() {\n  const nodePositions = [{\n    x: 100,\n    y: 100\n  }, {\n    x: 300,\n    y: 150\n  }, {\n    x: 500,\n    y: 100\n  }, {\n    x: 700,\n    y: 200\n  }, {\n    x: 900,\n    y: 150\n  }];\n  const pathData = `M${nodePositions[0].x},${nodePositions[0].y} ` + nodePositions.slice(1).map(p => `S${p.x - 100},${p.y} ${p.x},${p.y}`).join(\" \");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"svg-map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"map-title\",\n      children: \"\\uD83C\\uDFC1 Adventure Fitness SVG Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"1000\",\n      height: \"300\",\n      viewBox: \"0 0 1000 300\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: pathData,\n        fill: \"none\",\n        stroke: \"#4caf50\",\n        strokeWidth: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), nodePositions.map((pos, index) => {\n        const level = levels[index];\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(${pos.x}, ${pos.y})`,\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            r: \"20\",\n            fill: level.status === \"completed\" ? \"#4caf50\" : level.status === \"unlocked\" ? \"#ffc107\" : \"#ccc\",\n            stroke: \"#333\",\n            strokeWidth: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"0\",\n            y: \"5\",\n            textAnchor: \"middle\",\n            fontSize: \"16\",\n            children: level.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n            x: \"-50\",\n            y: \"30\",\n            width: \"100\",\n            height: \"60\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"level-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"level-name\",\n                children: level.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), level.status === \"unlocked\" ? /*#__PURE__*/_jsxDEV(Link, {\n                to: `/liveworkout?level=${level.id}`,\n                className: \"start-btn\",\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-label\",\n                children: level.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, level.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = AdventureSVGMap;\nexport default AdventureSVGMap;\nvar _c;\n$RefreshReg$(_c, \"AdventureSVGMap\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","levels","id","name","status","icon","AdventureSVGMap","nodePositions","x","y","pathData","slice","map","p","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","viewBox","d","fill","stroke","strokeWidth","pos","index","level","transform","r","textAnchor","fontSize","to","_c","$RefreshReg$"],"sources":["D:/Fitness WebApp/client/src/pages/AdventureMap/AdventureMap.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./AdventureMap.css\"; // You'll write styles for level nodes here\r\n\r\nconst levels = [\r\n  { id: 1, name: \"Forest Jump\", status: \"completed\", icon: \"üå≤\" },\r\n  { id: 2, name: \"Mountain Push-Up\", status: \"unlocked\", icon: \"‚õ∞Ô∏è\" },\r\n  { id: 3, name: \"Desert Squat\", status: \"locked\", icon: \"üèúÔ∏è\" },\r\n  { id: 4, name: \"Icy Plank\", status: \"locked\", icon: \"‚ùÑÔ∏è\" },\r\n  { id: 5, name: \"Crystal Temple\", status: \"locked\", icon: \"üèØ\" },\r\n];\r\n\r\nfunction AdventureSVGMap() {\r\n  const nodePositions = [\r\n    { x: 100, y: 100 },\r\n    { x: 300, y: 150 },\r\n    { x: 500, y: 100 },\r\n    { x: 700, y: 200 },\r\n    { x: 900, y: 150 },\r\n  ];\r\n\r\n  const pathData =\r\n    `M${nodePositions[0].x},${nodePositions[0].y} ` +\r\n    nodePositions\r\n      .slice(1)\r\n      .map((p) => `S${p.x - 100},${p.y} ${p.x},${p.y}`)\r\n      .join(\" \");\r\n\r\n  return (\r\n    <div className=\"svg-map-container\">\r\n      <h1 className=\"map-title\">üèÅ Adventure Fitness SVG Map</h1>\r\n      <svg width=\"1000\" height=\"300\" viewBox=\"0 0 1000 300\">\r\n        <path d={pathData} fill=\"none\" stroke=\"#4caf50\" strokeWidth=\"5\" />\r\n\r\n        {nodePositions.map((pos, index) => {\r\n          const level = levels[index];\r\n          return (\r\n            <g key={level.id} transform={`translate(${pos.x}, ${pos.y})`}>\r\n              <circle\r\n                r=\"20\"\r\n                fill={\r\n                  level.status === \"completed\"\r\n                    ? \"#4caf50\"\r\n                    : level.status === \"unlocked\"\r\n                    ? \"#ffc107\"\r\n                    : \"#ccc\"\r\n                }\r\n                stroke=\"#333\"\r\n                strokeWidth=\"2\"\r\n              />\r\n              <text x=\"0\" y=\"5\" textAnchor=\"middle\" fontSize=\"16\">\r\n                {level.icon}\r\n              </text>\r\n              <foreignObject x=\"-50\" y=\"30\" width=\"100\" height=\"60\">\r\n                <div className=\"level-box\">\r\n                  <p className=\"level-name\">{level.name}</p>\r\n                  {level.status === \"unlocked\" ? (\r\n                    <Link\r\n                      to={`/liveworkout?level=${level.id}`}\r\n                      className=\"start-btn\"\r\n                    >\r\n                      Start\r\n                    </Link>\r\n                  ) : (\r\n                    <span className=\"status-label\">{level.status}</span>\r\n                  )}\r\n                </div>\r\n              </foreignObject>\r\n            </g>\r\n          );\r\n        })}\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdventureSVGMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}