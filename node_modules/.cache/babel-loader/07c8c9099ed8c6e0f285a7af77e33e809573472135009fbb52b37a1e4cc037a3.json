{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fitness WebApp\\\\client\\\\src\\\\pages\\\\LiveWorkout\\\\LiveWorkout.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useWorkoutProgress } from \"../../contexts/WorkoutProgressContext\";\nimport PoseFeedback from \"../../components/PoseFeedback\";\nimport ExerciseAvatar3D from \"../../components/ExerciseAvatar3D\";\n// Assume pose detection logic is in this file (frontend-only)\nimport { startPoseDetection } from \"../../utils/poseDetectionFrontend\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LiveWorkout = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    updateWorkoutResult,\n    updateTodayProgress\n  } = useWorkoutProgress();\n  const {\n    exercise,\n    mode,\n    level,\n    user_id\n  } = location.state || {};\n  const [result, setResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [feedbackMessage, setFeedbackMessage] = useState(\"\");\n  const videoRef = useRef(null);\n  useEffect(() => {\n    if (!exercise || !mode || !user_id) {\n      navigate(\"/dailychallenge\");\n      return;\n    }\n    const runWorkout = async () => {\n      try {\n        let workoutResult;\n        if (mode === \"webcam\") {\n          workoutResult = await handleWebcamMode(exercise, videoRef);\n        } else {\n          workoutResult = await handleVideoMode(exercise);\n        }\n        const {\n          score,\n          accuracy,\n          xp,\n          feedback\n        } = workoutResult;\n        setResult(workoutResult);\n        setFeedbackMessage(feedback || \"Good effort! Keep going!\");\n\n        // Log workout in backend\n        await fetch(\"http://localhost:5001/logWorkout\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id,\n            exercise,\n            level,\n            score,\n            xp,\n            completed: true\n          })\n        });\n        updateWorkoutResult({\n          exercise,\n          score,\n          xp,\n          completed: true\n        });\n\n        // Get today's progress\n        const progressRes = await fetch(`http://localhost:5001/getTodayProgress?user_id=${user_id}`);\n        const todayProgress = await progressRes.json();\n        updateTodayProgress(todayProgress);\n\n        // Unlock next level (if eligible)\n        if (score >= 70 && xp >= 50) {\n          await fetch(`http://localhost:5001/unlockNextLevel`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              user_id,\n              currentLevel: level\n            })\n          });\n        }\n      } catch (error) {\n        console.error(error);\n        setResult({\n          error: \"Workout failed. Try again.\"\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    runWorkout();\n  }, [exercise, mode, level, user_id, navigate, updateWorkoutResult, updateTodayProgress]);\n\n  // ðŸŸ¢ Frontend-only detection using TensorFlow.js\n  const handleWebcamMode = async (exercise, videoRef) => {\n    const detectionResult = await startPoseDetection(videoRef.current, exercise);\n    return {\n      ...detectionResult,\n      feedback: detectionResult.feedback || \"Live detection complete!\"\n    };\n  };\n\n  // ðŸŸ¡ Upload-based detection via backend (OpenCV)\n  const handleVideoMode = async exercise => {\n    const base64Video = localStorage.getItem(\"uploadedWorkoutVideo\");\n    if (!base64Video) throw new Error(\"No video uploaded\");\n    const res = await fetch(`http://localhost:5001/upload`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        file: base64Video,\n        exercise\n      })\n    });\n    return await res.json();\n  };\n\n  // Camera setup for live detection\n  useEffect(() => {\n    if (mode === \"webcam\" && videoRef.current) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        videoRef.current.srcObject = stream;\n      }).catch(err => console.error(\"Camera access error:\", err));\n    }\n  }, [mode]);\n  const renderLiveCamera = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Live Camera Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 40,\n        textAlign: \"center\"\n      },\n      children: \"Starting workout...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      maxWidth: 600,\n      margin: \"40px auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: 24,\n        textAlign: \"center\"\n      },\n      children: [level || exercise.toUpperCase(), \" - Results\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), mode === \"webcam\" && renderLiveCamera(), result !== null && result !== void 0 && result.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#dc2626\",\n        fontWeight: \"600\",\n        textAlign: \"center\"\n      },\n      children: result.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PoseFeedback, {\n        accuracy: result.accuracy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ExerciseAvatar3D, {\n        exercise: exercise\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Feedback:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), \" \", feedbackMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"XP Earned:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), \" \", result.xp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), \" \", result.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Accuracy:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), \" \", result.accuracy, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/dailychallenge\"),\n      style: {\n        marginTop: 24,\n        backgroundColor: \"#3b82f6\",\n        color: \"white\",\n        padding: \"10px 20px\",\n        border: \"none\",\n        borderRadius: 6,\n        cursor: \"pointer\"\n      },\n      children: \"Back to Challenges\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveWorkout, \"JQOrptBTExQ+CJHNcnUf57+PA14=\", false, function () {\n  return [useLocation, useNavigate, useWorkoutProgress];\n});\n_c = LiveWorkout;\nexport default LiveWorkout;\nvar _c;\n$RefreshReg$(_c, \"LiveWorkout\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","useNavigate","useWorkoutProgress","PoseFeedback","ExerciseAvatar3D","startPoseDetection","jsxDEV","_jsxDEV","Fragment","_Fragment","LiveWorkout","_s","location","navigate","updateWorkoutResult","updateTodayProgress","exercise","mode","level","user_id","state","result","setResult","isLoading","setIsLoading","feedbackMessage","setFeedbackMessage","videoRef","runWorkout","workoutResult","handleWebcamMode","handleVideoMode","score","accuracy","xp","feedback","fetch","method","headers","body","JSON","stringify","completed","progressRes","todayProgress","json","currentLevel","error","console","detectionResult","current","base64Video","localStorage","getItem","Error","res","file","navigator","mediaDevices","getUserMedia","video","then","stream","srcObject","catch","err","renderLiveCamera","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","width","marginTop","textAlign","padding","maxWidth","margin","fontSize","toUpperCase","color","fontWeight","onClick","backgroundColor","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["D:/Fitness WebApp/client/src/pages/LiveWorkout/LiveWorkout.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useWorkoutProgress } from \"../../contexts/WorkoutProgressContext\";\r\nimport PoseFeedback from \"../../components/PoseFeedback\";\r\nimport ExerciseAvatar3D from \"../../components/ExerciseAvatar3D\";\r\n// Assume pose detection logic is in this file (frontend-only)\r\nimport { startPoseDetection } from \"../../utils/poseDetectionFrontend\";\r\n\r\nconst LiveWorkout = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { updateWorkoutResult, updateTodayProgress } = useWorkoutProgress();\r\n\r\n  const { exercise, mode, level, user_id } = location.state || {};\r\n  const [result, setResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [feedbackMessage, setFeedbackMessage] = useState(\"\");\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!exercise || !mode || !user_id) {\r\n      navigate(\"/dailychallenge\");\r\n      return;\r\n    }\r\n\r\n    const runWorkout = async () => {\r\n      try {\r\n        let workoutResult;\r\n\r\n        if (mode === \"webcam\") {\r\n          workoutResult = await handleWebcamMode(exercise, videoRef);\r\n        } else {\r\n          workoutResult = await handleVideoMode(exercise);\r\n        }\r\n\r\n        const { score, accuracy, xp, feedback } = workoutResult;\r\n\r\n        setResult(workoutResult);\r\n        setFeedbackMessage(feedback || \"Good effort! Keep going!\");\r\n\r\n        // Log workout in backend\r\n        await fetch(\"http://localhost:5001/logWorkout\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            user_id,\r\n            exercise,\r\n            level,\r\n            score,\r\n            xp,\r\n            completed: true,\r\n          }),\r\n        });\r\n\r\n        updateWorkoutResult({ exercise, score, xp, completed: true });\r\n\r\n        // Get today's progress\r\n        const progressRes = await fetch(\r\n          `http://localhost:5001/getTodayProgress?user_id=${user_id}`\r\n        );\r\n        const todayProgress = await progressRes.json();\r\n        updateTodayProgress(todayProgress);\r\n\r\n        // Unlock next level (if eligible)\r\n        if (score >= 70 && xp >= 50) {\r\n          await fetch(`http://localhost:5001/unlockNextLevel`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ user_id, currentLevel: level }),\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        setResult({ error: \"Workout failed. Try again.\" });\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    runWorkout();\r\n  }, [\r\n    exercise,\r\n    mode,\r\n    level,\r\n    user_id,\r\n    navigate,\r\n    updateWorkoutResult,\r\n    updateTodayProgress,\r\n  ]);\r\n\r\n  // ðŸŸ¢ Frontend-only detection using TensorFlow.js\r\n  const handleWebcamMode = async (exercise, videoRef) => {\r\n    const detectionResult = await startPoseDetection(\r\n      videoRef.current,\r\n      exercise\r\n    );\r\n    return {\r\n      ...detectionResult,\r\n      feedback: detectionResult.feedback || \"Live detection complete!\",\r\n    };\r\n  };\r\n\r\n  // ðŸŸ¡ Upload-based detection via backend (OpenCV)\r\n  const handleVideoMode = async (exercise) => {\r\n    const base64Video = localStorage.getItem(\"uploadedWorkoutVideo\");\r\n    if (!base64Video) throw new Error(\"No video uploaded\");\r\n\r\n    const res = await fetch(`http://localhost:5001/upload`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ file: base64Video, exercise }),\r\n    });\r\n\r\n    return await res.json();\r\n  };\r\n\r\n  // Camera setup for live detection\r\n  useEffect(() => {\r\n    if (mode === \"webcam\" && videoRef.current) {\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: true })\r\n        .then((stream) => {\r\n          videoRef.current.srcObject = stream;\r\n        })\r\n        .catch((err) => console.error(\"Camera access error:\", err));\r\n    }\r\n  }, [mode]);\r\n\r\n  const renderLiveCamera = () => (\r\n    <div style={{ marginBottom: 16 }}>\r\n      <h4>Live Camera Feed</h4>\r\n      <video ref={videoRef} autoPlay playsInline style={{ width: \"100%\" }} />\r\n    </div>\r\n  );\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{ marginTop: 40, textAlign: \"center\" }}>\r\n        Starting workout...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 16, maxWidth: 600, margin: \"40px auto\" }}>\r\n      <h2 style={{ fontSize: 24, textAlign: \"center\" }}>\r\n        {level || exercise.toUpperCase()} - Results\r\n      </h2>\r\n\r\n      {mode === \"webcam\" && renderLiveCamera()}\r\n\r\n      {result?.error ? (\r\n        <div\r\n          style={{ color: \"#dc2626\", fontWeight: \"600\", textAlign: \"center\" }}\r\n        >\r\n          {result.error}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <PoseFeedback accuracy={result.accuracy} />\r\n          <ExerciseAvatar3D exercise={exercise} />\r\n          <p>\r\n            <strong>Feedback:</strong> {feedbackMessage}\r\n          </p>\r\n          <p>\r\n            <strong>XP Earned:</strong> {result.xp}\r\n          </p>\r\n          <p>\r\n            <strong>Score:</strong> {result.score}\r\n          </p>\r\n          <p>\r\n            <strong>Accuracy:</strong> {result.accuracy}%\r\n          </p>\r\n        </>\r\n      )}\r\n\r\n      <button\r\n        onClick={() => navigate(\"/dailychallenge\")}\r\n        style={{\r\n          marginTop: 24,\r\n          backgroundColor: \"#3b82f6\",\r\n          color: \"white\",\r\n          padding: \"10px 20px\",\r\n          border: \"none\",\r\n          borderRadius: 6,\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Back to Challenges\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveWorkout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}