{"ast":null,"code":"import apiFetch from\"./api\";function base64ToBlob(base64String){let byteString;let mimeString=\"video/mp4\";// Default fallback\n// Handle full Base64 Data URL\nif(base64String.includes(\"base64,\")){const parts=base64String.split(\",\");byteString=atob(parts[1]);mimeString=parts[0].match(/data:(.*);base64/)[1];}else{// Handle raw base64 (no prefix)\nbyteString=atob(base64String);}const ab=new ArrayBuffer(byteString.length);const ia=new Uint8Array(ab);for(let i=0;i<byteString.length;i++){ia[i]=byteString.charCodeAt(i);}return new Blob([ab],{type:mimeString});}const workoutService={startLiveDetection:exercise=>{const user_id=localStorage.getItem(\"email\");if(!user_id)throw new Error(\"User not logged in or missing user_id\");return apiFetch(\"/start\",{method:\"POST\",body:{user_id,type:exercise}});},uploadVideoDetection:(base64String,exercise)=>{const formData=new FormData();const blob=base64ToBlob(base64String);const file=new File([blob],\"workout.mp4\",{type:\"video/mp4\"});const user_id=localStorage.getItem(\"email\");// ðŸ‘ˆ Add this\nformData.append(\"video\",file);formData.append(\"exercise\",exercise);formData.append(\"user_id\",user_id);// ðŸ‘ˆ Send it to Flask\nreturn apiFetch(\"/upload\",{method:\"POST\",body:formData,isForm:true});},logWorkout:data=>apiFetch(\"/workout/log\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:data}),getTodayProgress:()=>{const user_id=localStorage.getItem(\"email\");return apiFetch(\"/workout/progress\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:{user_id}});},unlockNextLevel:_ref=>{let{user_id,currentLevel}=_ref;return apiFetch(\"/workout/unlock-level\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:{user_id,currentLevel}});}};export default workoutService;","map":{"version":3,"names":["apiFetch","base64ToBlob","base64String","byteString","mimeString","includes","parts","split","atob","match","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","workoutService","startLiveDetection","exercise","user_id","localStorage","getItem","Error","method","body","uploadVideoDetection","formData","FormData","blob","file","File","append","isForm","logWorkout","data","headers","getTodayProgress","unlockNextLevel","_ref","currentLevel"],"sources":["D:/Fitness WebApp/client/src/services/workoutService.js"],"sourcesContent":["import apiFetch from \"./api\";\r\n\r\nfunction base64ToBlob(base64String) {\r\n  let byteString;\r\n  let mimeString = \"video/mp4\"; // Default fallback\r\n\r\n  // Handle full Base64 Data URL\r\n  if (base64String.includes(\"base64,\")) {\r\n    const parts = base64String.split(\",\");\r\n    byteString = atob(parts[1]);\r\n    mimeString = parts[0].match(/data:(.*);base64/)[1];\r\n  } else {\r\n    // Handle raw base64 (no prefix)\r\n    byteString = atob(base64String);\r\n  }\r\n\r\n  const ab = new ArrayBuffer(byteString.length);\r\n  const ia = new Uint8Array(ab);\r\n\r\n  for (let i = 0; i < byteString.length; i++) {\r\n    ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  return new Blob([ab], { type: mimeString });\r\n}\r\n\r\nconst workoutService = {\r\n  startLiveDetection: (exercise) => {\r\n    const user_id = localStorage.getItem(\"email\");\r\n    if (!user_id) throw new Error(\"User not logged in or missing user_id\");\r\n\r\n    return apiFetch(\"/start\", {\r\n      method: \"POST\",\r\n      body: {\r\n        user_id,\r\n        type: exercise,\r\n      },\r\n    });\r\n  },\r\n\r\n  uploadVideoDetection: (base64String, exercise) => {\r\n    const formData = new FormData();\r\n\r\n    const blob = base64ToBlob(base64String);\r\n    const file = new File([blob], \"workout.mp4\", { type: \"video/mp4\" });\r\n\r\n    const user_id = localStorage.getItem(\"email\"); // ðŸ‘ˆ Add this\r\n\r\n    formData.append(\"video\", file);\r\n    formData.append(\"exercise\", exercise);\r\n    formData.append(\"user_id\", user_id); // ðŸ‘ˆ Send it to Flask\r\n\r\n    return apiFetch(\"/upload\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n      isForm: true,\r\n    });\r\n  },\r\n\r\n  logWorkout: (data) =>\r\n    apiFetch(\"/workout/log\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: data,\r\n    }),\r\n\r\n  getTodayProgress: () => {\r\n    const user_id = localStorage.getItem(\"email\");\r\n    return apiFetch(\"/workout/progress\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: { user_id },\r\n    });\r\n  },\r\n  unlockNextLevel: ({ user_id, currentLevel }) => {\r\n    return apiFetch(\"/workout/unlock-level\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: { user_id, currentLevel },\r\n    });\r\n  },\r\n};\r\n\r\nexport default workoutService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}